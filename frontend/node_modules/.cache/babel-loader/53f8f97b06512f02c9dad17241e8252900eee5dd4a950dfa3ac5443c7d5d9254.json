{"ast":null,"code":"function _classPrivateFieldInitSpec(e, t, a) {\n  _checkPrivateRedeclaration(e, t), t.set(e, a);\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _classPrivateFieldSet(s, a, r) {\n  return s.set(_assertClassBrand(s, a), r), r;\n}\nfunction _classPrivateFieldGet(s, a) {\n  return s.get(_assertClassBrand(s, a));\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nimport { mixin } from \"../../helpers/object.mjs\";\nimport localHooks from \"../../mixins/localHooks.mjs\";\n/**\n * The ChangesObserver module is an object that represents a disposable resource\n * provided by the ChangesObservable module.\n *\n * @class ChangesObserver\n */\nvar _currentInitialChanges = /*#__PURE__*/new WeakMap();\nexport class ChangesObserver {\n  constructor() {\n    /**\n     * The field holds initial changes that will be used to notify the callbacks added using\n     * subscribe method. Regardless of the moment of listening for changes, the subscriber\n     * will be notified once with all changes made before subscribing.\n     *\n     * @type {Array}\n     */\n    _classPrivateFieldInitSpec(this, _currentInitialChanges, []);\n  }\n  /**\n   * Subscribes to the observer.\n   *\n   * @param {Function} callback A function that will be called when the new changes will appear.\n   * @returns {ChangesObserver}\n   */\n  subscribe(callback) {\n    this.addLocalHook('change', callback);\n    this._write(_classPrivateFieldGet(_currentInitialChanges, this));\n    return this;\n  }\n\n  /**\n   * Unsubscribes all subscriptions. After the method call, the observer would not produce\n   * any new events.\n   *\n   * @returns {ChangesObserver}\n   */\n  unsubscribe() {\n    this.runLocalHooks('unsubscribe');\n    this.clearLocalHooks();\n    return this;\n  }\n\n  /**\n   * The write method is executed by the ChangesObservable module. The module produces all\n   * changes events that are distributed further by the observer.\n   *\n   * @private\n   * @param {object} changes The chunk of changes produced by the ChangesObservable module.\n   * @returns {ChangesObserver}\n   */\n  _write(changes) {\n    if (changes.length > 0) {\n      this.runLocalHooks('change', changes);\n    }\n    return this;\n  }\n\n  /**\n   * The write method is executed by the ChangesObservable module. The module produces initial\n   * changes that will be used to notify new subscribers.\n   *\n   * @private\n   * @param {object} initialChanges The chunk of changes produced by the ChangesObservable module.\n   */\n  _writeInitialChanges(initialChanges) {\n    _classPrivateFieldSet(_currentInitialChanges, this, initialChanges);\n  }\n}\nmixin(ChangesObserver, localHooks);","map":{"version":3,"names":["_classPrivateFieldInitSpec","e","t","a","_checkPrivateRedeclaration","set","has","TypeError","_classPrivateFieldSet","s","r","_assertClassBrand","_classPrivateFieldGet","get","n","arguments","length","mixin","localHooks","_currentInitialChanges","WeakMap","ChangesObserver","constructor","subscribe","callback","addLocalHook","_write","unsubscribe","runLocalHooks","clearLocalHooks","changes","_writeInitialChanges","initialChanges"],"sources":["D:/gym-project/frontend/node_modules/handsontable/translations/changesObservable/observer.mjs"],"sourcesContent":["import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateFieldInitSpec(e, t, a) { _checkPrivateRedeclaration(e, t), t.set(e, a); }\nfunction _checkPrivateRedeclaration(e, t) { if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); }\nfunction _classPrivateFieldSet(s, a, r) { return s.set(_assertClassBrand(s, a), r), r; }\nfunction _classPrivateFieldGet(s, a) { return s.get(_assertClassBrand(s, a)); }\nfunction _assertClassBrand(e, t, n) { if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n; throw new TypeError(\"Private element is not present on this object\"); }\nimport { mixin } from \"../../helpers/object.mjs\";\nimport localHooks from \"../../mixins/localHooks.mjs\";\n/**\n * The ChangesObserver module is an object that represents a disposable resource\n * provided by the ChangesObservable module.\n *\n * @class ChangesObserver\n */\nvar _currentInitialChanges = /*#__PURE__*/new WeakMap();\nexport class ChangesObserver {\n  constructor() {\n    /**\n     * The field holds initial changes that will be used to notify the callbacks added using\n     * subscribe method. Regardless of the moment of listening for changes, the subscriber\n     * will be notified once with all changes made before subscribing.\n     *\n     * @type {Array}\n     */\n    _classPrivateFieldInitSpec(this, _currentInitialChanges, []);\n  }\n  /**\n   * Subscribes to the observer.\n   *\n   * @param {Function} callback A function that will be called when the new changes will appear.\n   * @returns {ChangesObserver}\n   */\n  subscribe(callback) {\n    this.addLocalHook('change', callback);\n    this._write(_classPrivateFieldGet(_currentInitialChanges, this));\n    return this;\n  }\n\n  /**\n   * Unsubscribes all subscriptions. After the method call, the observer would not produce\n   * any new events.\n   *\n   * @returns {ChangesObserver}\n   */\n  unsubscribe() {\n    this.runLocalHooks('unsubscribe');\n    this.clearLocalHooks();\n    return this;\n  }\n\n  /**\n   * The write method is executed by the ChangesObservable module. The module produces all\n   * changes events that are distributed further by the observer.\n   *\n   * @private\n   * @param {object} changes The chunk of changes produced by the ChangesObservable module.\n   * @returns {ChangesObserver}\n   */\n  _write(changes) {\n    if (changes.length > 0) {\n      this.runLocalHooks('change', changes);\n    }\n    return this;\n  }\n\n  /**\n   * The write method is executed by the ChangesObservable module. The module produces initial\n   * changes that will be used to notify new subscribers.\n   *\n   * @private\n   * @param {object} initialChanges The chunk of changes produced by the ChangesObservable module.\n   */\n  _writeInitialChanges(initialChanges) {\n    _classPrivateFieldSet(_currentInitialChanges, this, initialChanges);\n  }\n}\nmixin(ChangesObserver, localHooks);"],"mappings":"AACA,SAASA,0BAA0BA,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;EAAEC,0BAA0B,CAACH,CAAC,EAAEC,CAAC,CAAC,EAAEA,CAAC,CAACG,GAAG,CAACJ,CAAC,EAAEE,CAAC,CAAC;AAAE;AAC9F,SAASC,0BAA0BA,CAACH,CAAC,EAAEC,CAAC,EAAE;EAAE,IAAIA,CAAC,CAACI,GAAG,CAACL,CAAC,CAAC,EAAE,MAAM,IAAIM,SAAS,CAAC,gEAAgE,CAAC;AAAE;AACjJ,SAASC,qBAAqBA,CAACC,CAAC,EAAEN,CAAC,EAAEO,CAAC,EAAE;EAAE,OAAOD,CAAC,CAACJ,GAAG,CAACM,iBAAiB,CAACF,CAAC,EAAEN,CAAC,CAAC,EAAEO,CAAC,CAAC,EAAEA,CAAC;AAAE;AACvF,SAASE,qBAAqBA,CAACH,CAAC,EAAEN,CAAC,EAAE;EAAE,OAAOM,CAAC,CAACI,GAAG,CAACF,iBAAiB,CAACF,CAAC,EAAEN,CAAC,CAAC,CAAC;AAAE;AAC9E,SAASQ,iBAAiBA,CAACV,CAAC,EAAEC,CAAC,EAAEY,CAAC,EAAE;EAAE,IAAI,UAAU,IAAI,OAAOb,CAAC,GAAGA,CAAC,KAAKC,CAAC,GAAGD,CAAC,CAACK,GAAG,CAACJ,CAAC,CAAC,EAAE,OAAOa,SAAS,CAACC,MAAM,GAAG,CAAC,GAAGd,CAAC,GAAGY,CAAC;EAAE,MAAM,IAAIP,SAAS,CAAC,+CAA+C,CAAC;AAAE;AAClM,SAASU,KAAK,QAAQ,0BAA0B;AAChD,OAAOC,UAAU,MAAM,6BAA6B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,sBAAsB,GAAG,aAAa,IAAIC,OAAO,CAAC,CAAC;AACvD,OAAO,MAAMC,eAAe,CAAC;EAC3BC,WAAWA,CAAA,EAAG;IACZ;AACJ;AACA;AACA;AACA;AACA;AACA;IACItB,0BAA0B,CAAC,IAAI,EAAEmB,sBAAsB,EAAE,EAAE,CAAC;EAC9D;EACA;AACF;AACA;AACA;AACA;AACA;EACEI,SAASA,CAACC,QAAQ,EAAE;IAClB,IAAI,CAACC,YAAY,CAAC,QAAQ,EAAED,QAAQ,CAAC;IACrC,IAAI,CAACE,MAAM,CAACd,qBAAqB,CAACO,sBAAsB,EAAE,IAAI,CAAC,CAAC;IAChE,OAAO,IAAI;EACb;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEQ,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,aAAa,CAAC,aAAa,CAAC;IACjC,IAAI,CAACC,eAAe,CAAC,CAAC;IACtB,OAAO,IAAI;EACb;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEH,MAAMA,CAACI,OAAO,EAAE;IACd,IAAIA,OAAO,CAACd,MAAM,GAAG,CAAC,EAAE;MACtB,IAAI,CAACY,aAAa,CAAC,QAAQ,EAAEE,OAAO,CAAC;IACvC;IACA,OAAO,IAAI;EACb;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,oBAAoBA,CAACC,cAAc,EAAE;IACnCxB,qBAAqB,CAACW,sBAAsB,EAAE,IAAI,EAAEa,cAAc,CAAC;EACrE;AACF;AACAf,KAAK,CAACI,eAAe,EAAEH,UAAU,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}