{"ast":null,"code":"var _jsxFileName = \"D:\\\\gym-project\\\\frontend\\\\src\\\\pages\\\\Add.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Handsontable from 'handsontable';\nimport { HotTable } from '@handsontable/react';\nimport 'handsontable/dist/handsontable.full.css';\nimport './ExcelLikeGrid.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExcelLikeGrid = () => {\n  _s();\n  const [data, setData] = useState([['', '', '', '']]);\n  const handleSave = () => {\n    fetch('/api/save-data', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        data\n      })\n    }).then(response => response.json()).then(result => {\n      console.log('Data saved:', result);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"excel-grid-container\",\n    children: [/*#__PURE__*/_jsxDEV(HotTable, {\n      data: data,\n      colHeaders: true,\n      rowHeaders: true,\n      width: \"600\",\n      height: \"300\",\n      stretchH: \"all\",\n      afterChange: (changes, source) => {\n        if (source !== 'loadData') {\n          setData([...data]); // Update state with new data\n        }\n      },\n      licenseKey: \"non-commercial-and-evaluation\" // Use the license key here\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"save-button\",\n      onClick: handleSave,\n      children: \"Save Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ExcelLikeGrid, \"0m0ojVyLwRwW/38eOYc7jYGnLTY=\");\n_c = ExcelLikeGrid;\nexport default ExcelLikeGrid;\nvar _c;\n$RefreshReg$(_c, \"ExcelLikeGrid\");","map":{"version":3,"names":["React","useState","Handsontable","HotTable","jsxDEV","_jsxDEV","ExcelLikeGrid","_s","data","setData","handleSave","fetch","method","headers","body","JSON","stringify","then","response","json","result","console","log","className","children","colHeaders","rowHeaders","width","height","stretchH","afterChange","changes","source","licenseKey","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/gym-project/frontend/src/pages/Add.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Handsontable from 'handsontable';\r\nimport { HotTable } from '@handsontable/react';\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport './ExcelLikeGrid.css'; // Import the CSS file\r\n\r\nconst ExcelLikeGrid = () => {\r\n  const [data, setData] = useState([['', '', '','']]);\r\n\r\n  const handleSave = () => {\r\n    fetch('/api/save-data', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ data }),\r\n    })\r\n    .then(response => response.json())\r\n    .then(result => {\r\n      console.log('Data saved:', result);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"excel-grid-container\">\r\n      <HotTable\r\n        data={data}\r\n        colHeaders={true}\r\n        rowHeaders={true}\r\n        width=\"600\"\r\n        height=\"300\"\r\n        stretchH=\"all\"\r\n        afterChange={(changes, source) => {\r\n          if (source !== 'loadData') {\r\n            setData([...data]); // Update state with new data\r\n          }\r\n        }}\r\n        licenseKey=\"non-commercial-and-evaluation\" // Use the license key here\r\n      />\r\n      <button className=\"save-button\" onClick={handleSave}>Save Data</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExcelLikeGrid;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,cAAc;AACvC,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,OAAO,yCAAyC;AAChD,OAAO,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAC,EAAE,CAAC,CAAC,CAAC;EAEnD,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACvBC,KAAK,CAAC,gBAAgB,EAAE;MACtBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER;MAAK,CAAC;IAC/B,CAAC,CAAC,CACDS,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,MAAM,IAAI;MACdC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,MAAM,CAAC;IACpC,CAAC,CAAC;EACJ,CAAC;EAED,oBACEf,OAAA;IAAKkB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCnB,OAAA,CAACF,QAAQ;MACPK,IAAI,EAAEA,IAAK;MACXiB,UAAU,EAAE,IAAK;MACjBC,UAAU,EAAE,IAAK;MACjBC,KAAK,EAAC,KAAK;MACXC,MAAM,EAAC,KAAK;MACZC,QAAQ,EAAC,KAAK;MACdC,WAAW,EAAEA,CAACC,OAAO,EAAEC,MAAM,KAAK;QAChC,IAAIA,MAAM,KAAK,UAAU,EAAE;UACzBvB,OAAO,CAAC,CAAC,GAAGD,IAAI,CAAC,CAAC,CAAC,CAAC;QACtB;MACF,CAAE;MACFyB,UAAU,EAAC,+BAA+B,CAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFhC,OAAA;MAAQkB,SAAS,EAAC,aAAa;MAACe,OAAO,EAAE5B,UAAW;MAAAc,QAAA,EAAC;IAAS;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEV,CAAC;AAAC9B,EAAA,CApCID,aAAa;AAAAiC,EAAA,GAAbjC,aAAa;AAsCnB,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}