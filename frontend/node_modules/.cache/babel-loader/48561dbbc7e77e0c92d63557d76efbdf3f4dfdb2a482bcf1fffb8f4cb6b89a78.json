{"ast":null,"code":"var _jsxFileName = \"D:\\\\gym-project\\\\frontend\\\\src\\\\pages\\\\Add.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Handsontable from 'handsontable';\nimport HandsontableReact from '@handsontable/react';\nimport 'handsontable/dist/handsontable.full.css';\nimport './ExcelLikeGrid.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExcelLikeGrid = () => {\n  _s();\n  const [data, setData] = useState([['', '', '', '', '', ''], ['', '', '', '', '', '']]);\n  const handleDataChange = (changes, source) => {\n    if (source === 'loadData') return; // Prevent infinite loop\n    setData([...data]);\n  };\n  const handleSave = async () => {\n    try {\n      await axios.post('/api/students', {\n        data\n      });\n      alert('Data saved successfully!');\n    } catch (error) {\n      console.error('Error saving data:', error);\n      alert('Error saving data');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"excel-like-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Excel-Like Grid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HandsontableReact, {\n      data: data,\n      colHeaders: ['Roll No', 'Name', 'Hostel', 'Year', 'Slot', 'Count'],\n      columns: [{\n        data: 0\n      }, {\n        data: 1\n      }, {\n        data: 2\n      }, {\n        data: 3\n      }, {\n        data: 4\n      }, {\n        data: 5\n      }],\n      rowHeaders: true,\n      width: \"100%\",\n      height: \"400\",\n      licenseKey: \"non-commercial-and-evaluation\" // Add your license key here\n      ,\n      afterChange: handleDataChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Save Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ExcelLikeGrid, \"fv0wl/nMm2XCKJttowMF/k/isEY=\");\n_c = ExcelLikeGrid;\nexport default ExcelLikeGrid;\nvar _c;\n$RefreshReg$(_c, \"ExcelLikeGrid\");","map":{"version":3,"names":["React","useState","axios","Handsontable","HandsontableReact","jsxDEV","_jsxDEV","ExcelLikeGrid","_s","data","setData","handleDataChange","changes","source","handleSave","post","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","colHeaders","columns","rowHeaders","width","height","licenseKey","afterChange","onClick","_c","$RefreshReg$"],"sources":["D:/gym-project/frontend/src/pages/Add.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Handsontable from 'handsontable';\r\nimport HandsontableReact from '@handsontable/react';\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport './ExcelLikeGrid.css'; // Import the CSS file\r\n\r\nconst ExcelLikeGrid = () => {\r\n  const [data, setData] = useState([\r\n    ['', '', '', '', '', ''],\r\n    ['', '', '', '', '', ''],\r\n  ]);\r\n\r\n  const handleDataChange = (changes, source) => {\r\n    if (source === 'loadData') return; // Prevent infinite loop\r\n    setData([...data]);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      await axios.post('/api/students', { data });\r\n      alert('Data saved successfully!');\r\n    } catch (error) {\r\n      console.error('Error saving data:', error);\r\n      alert('Error saving data');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"excel-like-grid\">\r\n      <h1>Excel-Like Grid</h1>\r\n      <HandsontableReact\r\n        data={data}\r\n        colHeaders={['Roll No', 'Name', 'Hostel', 'Year', 'Slot', 'Count']}\r\n        columns={[\r\n          { data: 0 },\r\n          { data: 1 },\r\n          { data: 2 },\r\n          { data: 3 },\r\n          { data: 4 },\r\n          { data: 5 },\r\n        ]}\r\n        rowHeaders\r\n        width=\"100%\"\r\n        height=\"400\"\r\n        licenseKey=\"non-commercial-and-evaluation\" // Add your license key here\r\n        afterChange={handleDataChange}\r\n      />\r\n      <button onClick={handleSave}>Save Data</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExcelLikeGrid;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,cAAc;AACvC,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAO,yCAAyC;AAChD,OAAO,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAC/B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CACzB,CAAC;EAEF,MAAMU,gBAAgB,GAAGA,CAACC,OAAO,EAAEC,MAAM,KAAK;IAC5C,IAAIA,MAAM,KAAK,UAAU,EAAE,OAAO,CAAC;IACnCH,OAAO,CAAC,CAAC,GAAGD,IAAI,CAAC,CAAC;EACpB,CAAC;EAED,MAAMK,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMZ,KAAK,CAACa,IAAI,CAAC,eAAe,EAAE;QAAEN;MAAK,CAAC,CAAC;MAC3CO,KAAK,CAAC,0BAA0B,CAAC;IACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1CD,KAAK,CAAC,mBAAmB,CAAC;IAC5B;EACF,CAAC;EAED,oBACEV,OAAA;IAAKa,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9Bd,OAAA;MAAAc,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBlB,OAAA,CAACF,iBAAiB;MAChBK,IAAI,EAAEA,IAAK;MACXgB,UAAU,EAAE,CAAC,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAE;MACnEC,OAAO,EAAE,CACP;QAAEjB,IAAI,EAAE;MAAE,CAAC,EACX;QAAEA,IAAI,EAAE;MAAE,CAAC,EACX;QAAEA,IAAI,EAAE;MAAE,CAAC,EACX;QAAEA,IAAI,EAAE;MAAE,CAAC,EACX;QAAEA,IAAI,EAAE;MAAE,CAAC,EACX;QAAEA,IAAI,EAAE;MAAE,CAAC,CACX;MACFkB,UAAU;MACVC,KAAK,EAAC,MAAM;MACZC,MAAM,EAAC,KAAK;MACZC,UAAU,EAAC,+BAA+B,CAAC;MAAA;MAC3CC,WAAW,EAAEpB;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFlB,OAAA;MAAQ0B,OAAO,EAAElB,UAAW;MAAAM,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV,CAAC;AAAChB,EAAA,CA5CID,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AA8CnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}