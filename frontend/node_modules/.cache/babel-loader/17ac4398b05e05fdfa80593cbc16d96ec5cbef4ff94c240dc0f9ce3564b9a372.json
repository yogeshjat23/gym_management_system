{"ast":null,"code":"import moment from 'moment';\nimport * as C from \"../../../../i18n/constants.mjs\";\nimport { registerCondition } from \"../../conditionRegisterer.mjs\";\nexport const CONDITION_NAME = 'date_after';\n\n/**\n * @param {object} dataRow The object which holds and describes the single cell value.\n * @param {Array} inputValues An array of values to compare with.\n * @param {*} inputValues.\"0\" Minimum date of a range.\n * @returns {boolean}\n */\nexport function condition(dataRow, _ref) {\n  let [value] = _ref;\n  const date = moment(dataRow.value, dataRow.meta.dateFormat);\n  const inputDate = moment(value, dataRow.meta.dateFormat);\n  if (!date.isValid() || !inputDate.isValid()) {\n    return false;\n  }\n  return date.diff(inputDate) >= 0;\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: C.FILTERS_CONDITIONS_AFTER,\n  inputsCount: 1,\n  showOperators: true\n});","map":{"version":3,"names":["moment","C","registerCondition","CONDITION_NAME","condition","dataRow","_ref","value","date","meta","dateFormat","inputDate","isValid","diff","name","FILTERS_CONDITIONS_AFTER","inputsCount","showOperators"],"sources":["D:/gym-project/frontend/node_modules/handsontable/plugins/filters/condition/date/after.mjs"],"sourcesContent":["import moment from 'moment';\nimport * as C from \"../../../../i18n/constants.mjs\";\nimport { registerCondition } from \"../../conditionRegisterer.mjs\";\nexport const CONDITION_NAME = 'date_after';\n\n/**\n * @param {object} dataRow The object which holds and describes the single cell value.\n * @param {Array} inputValues An array of values to compare with.\n * @param {*} inputValues.\"0\" Minimum date of a range.\n * @returns {boolean}\n */\nexport function condition(dataRow, _ref) {\n  let [value] = _ref;\n  const date = moment(dataRow.value, dataRow.meta.dateFormat);\n  const inputDate = moment(value, dataRow.meta.dateFormat);\n  if (!date.isValid() || !inputDate.isValid()) {\n    return false;\n  }\n  return date.diff(inputDate) >= 0;\n}\nregisterCondition(CONDITION_NAME, condition, {\n  name: C.FILTERS_CONDITIONS_AFTER,\n  inputsCount: 1,\n  showOperators: true\n});"],"mappings":"AAAA,OAAOA,MAAM,MAAM,QAAQ;AAC3B,OAAO,KAAKC,CAAC,MAAM,gCAAgC;AACnD,SAASC,iBAAiB,QAAQ,+BAA+B;AACjE,OAAO,MAAMC,cAAc,GAAG,YAAY;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAACC,OAAO,EAAEC,IAAI,EAAE;EACvC,IAAI,CAACC,KAAK,CAAC,GAAGD,IAAI;EAClB,MAAME,IAAI,GAAGR,MAAM,CAACK,OAAO,CAACE,KAAK,EAAEF,OAAO,CAACI,IAAI,CAACC,UAAU,CAAC;EAC3D,MAAMC,SAAS,GAAGX,MAAM,CAACO,KAAK,EAAEF,OAAO,CAACI,IAAI,CAACC,UAAU,CAAC;EACxD,IAAI,CAACF,IAAI,CAACI,OAAO,CAAC,CAAC,IAAI,CAACD,SAAS,CAACC,OAAO,CAAC,CAAC,EAAE;IAC3C,OAAO,KAAK;EACd;EACA,OAAOJ,IAAI,CAACK,IAAI,CAACF,SAAS,CAAC,IAAI,CAAC;AAClC;AACAT,iBAAiB,CAACC,cAAc,EAAEC,SAAS,EAAE;EAC3CU,IAAI,EAAEb,CAAC,CAACc,wBAAwB;EAChCC,WAAW,EAAE,CAAC;EACdC,aAAa,EAAE;AACjB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}