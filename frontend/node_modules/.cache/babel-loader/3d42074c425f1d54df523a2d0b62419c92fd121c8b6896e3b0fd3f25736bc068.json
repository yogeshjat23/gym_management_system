{"ast":null,"code":"/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * Create a key observer.\n *\n * @returns {object}\n */\nexport function createKeysObserver() {\n  const PRESSED_KEYS = new Set();\n  return {\n    /**\n     * Press a key.\n     *\n     * @param {string} key Names of the shortcut's keys,\n     * (coming from [`KeyboardEvent.key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values)),\n     * in lowercase or uppercase, unified across browsers\n     */\n    press(key) {\n      PRESSED_KEYS.add(key);\n    },\n    /**\n     * Release a pressed key.\n     *\n     * @param {string} key Names of the shortcut's keys,\n     * (coming from [`KeyboardEvent.key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values)),\n     * in lowercase or uppercase, unified across browsers\n     */\n    release(key) {\n      PRESSED_KEYS.delete(key);\n    },\n    /**\n     * Release all pressed keys.\n     */\n    releaseAll() {\n      PRESSED_KEYS.clear();\n    },\n    /**\n     * Check if a key is pressed.\n     *\n     * @param {string} key Names of the shortcut's keys,\n     * (coming from [`KeyboardEvent.key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values)),\n     * in lowercase or uppercase, unified across browsers\n     * @returns {boolean}\n     */\n    isPressed(key) {\n      return PRESSED_KEYS.has(key);\n    }\n  };\n}","map":{"version":3,"names":["createKeysObserver","PRESSED_KEYS","Set","press","key","add","release","delete","releaseAll","clear","isPressed","has"],"sources":["D:/gym-project/frontend/node_modules/handsontable/shortcuts/keyObserver.mjs"],"sourcesContent":["import \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\n/* eslint-disable jsdoc/require-description-complete-sentence */\n\n/**\n * Create a key observer.\n *\n * @returns {object}\n */\nexport function createKeysObserver() {\n  const PRESSED_KEYS = new Set();\n  return {\n    /**\n     * Press a key.\n     *\n     * @param {string} key Names of the shortcut's keys,\n     * (coming from [`KeyboardEvent.key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values)),\n     * in lowercase or uppercase, unified across browsers\n     */\n    press(key) {\n      PRESSED_KEYS.add(key);\n    },\n    /**\n     * Release a pressed key.\n     *\n     * @param {string} key Names of the shortcut's keys,\n     * (coming from [`KeyboardEvent.key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values)),\n     * in lowercase or uppercase, unified across browsers\n     */\n    release(key) {\n      PRESSED_KEYS.delete(key);\n    },\n    /**\n     * Release all pressed keys.\n     */\n    releaseAll() {\n      PRESSED_KEYS.clear();\n    },\n    /**\n     * Check if a key is pressed.\n     *\n     * @param {string} key Names of the shortcut's keys,\n     * (coming from [`KeyboardEvent.key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values)),\n     * in lowercase or uppercase, unified across browsers\n     * @returns {boolean}\n     */\n    isPressed(key) {\n      return PRESSED_KEYS.has(key);\n    }\n  };\n}"],"mappings":"AAOA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,kBAAkBA,CAAA,EAAG;EACnC,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC9B,OAAO;IACL;AACJ;AACA;AACA;AACA;AACA;AACA;IACIC,KAAKA,CAACC,GAAG,EAAE;MACTH,YAAY,CAACI,GAAG,CAACD,GAAG,CAAC;IACvB,CAAC;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;IACIE,OAAOA,CAACF,GAAG,EAAE;MACXH,YAAY,CAACM,MAAM,CAACH,GAAG,CAAC;IAC1B,CAAC;IACD;AACJ;AACA;IACII,UAAUA,CAAA,EAAG;MACXP,YAAY,CAACQ,KAAK,CAAC,CAAC;IACtB,CAAC;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACIC,SAASA,CAACN,GAAG,EAAE;MACb,OAAOH,YAAY,CAACU,GAAG,CAACP,GAAG,CAAC;IAC9B;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}