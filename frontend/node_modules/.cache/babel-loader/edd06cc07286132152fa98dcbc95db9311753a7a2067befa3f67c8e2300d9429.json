{"ast":null,"code":"export const operations = {};\n\n/**\n * Get operation closure with pre-bound arguments.\n *\n * @param {string} id Operator `id`.\n * @returns {Function}\n */\nexport function getOperationFunc(id) {\n  if (!operations[id]) {\n    throw Error(`Operation with id \"${id}\" does not exist.`);\n  }\n  const func = operations[id].func;\n  return function (conditions, value) {\n    return func(conditions, value);\n  };\n}\n\n/**\n * Return name of operation which is displayed inside UI component, basing on it's `id`.\n *\n * @param {string} id `Id` of operation.\n * @returns {string}\n */\nexport function getOperationName(id) {\n  return operations[id].name;\n}\n\n/**\n * Operator registerer.\n *\n * @param {string} id Operation `id`.\n * @param {string} name Operation name which is displayed inside UI component.\n * @param {Function} func Operation function.\n */\nexport function registerOperation(id, name, func) {\n  operations[id] = {\n    name,\n    func\n  };\n}","map":{"version":3,"names":["operations","getOperationFunc","id","Error","func","conditions","value","getOperationName","name","registerOperation"],"sources":["D:/gym-project/frontend/node_modules/handsontable/plugins/filters/logicalOperationRegisterer.mjs"],"sourcesContent":["import \"core-js/modules/es.error.cause.js\";\nexport const operations = {};\n\n/**\n * Get operation closure with pre-bound arguments.\n *\n * @param {string} id Operator `id`.\n * @returns {Function}\n */\nexport function getOperationFunc(id) {\n  if (!operations[id]) {\n    throw Error(`Operation with id \"${id}\" does not exist.`);\n  }\n  const func = operations[id].func;\n  return function (conditions, value) {\n    return func(conditions, value);\n  };\n}\n\n/**\n * Return name of operation which is displayed inside UI component, basing on it's `id`.\n *\n * @param {string} id `Id` of operation.\n * @returns {string}\n */\nexport function getOperationName(id) {\n  return operations[id].name;\n}\n\n/**\n * Operator registerer.\n *\n * @param {string} id Operation `id`.\n * @param {string} name Operation name which is displayed inside UI component.\n * @param {Function} func Operation function.\n */\nexport function registerOperation(id, name, func) {\n  operations[id] = {\n    name,\n    func\n  };\n}"],"mappings":"AACA,OAAO,MAAMA,UAAU,GAAG,CAAC,CAAC;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAACC,EAAE,EAAE;EACnC,IAAI,CAACF,UAAU,CAACE,EAAE,CAAC,EAAE;IACnB,MAAMC,KAAK,CAAC,sBAAsBD,EAAE,mBAAmB,CAAC;EAC1D;EACA,MAAME,IAAI,GAAGJ,UAAU,CAACE,EAAE,CAAC,CAACE,IAAI;EAChC,OAAO,UAAUC,UAAU,EAAEC,KAAK,EAAE;IAClC,OAAOF,IAAI,CAACC,UAAU,EAAEC,KAAK,CAAC;EAChC,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAACL,EAAE,EAAE;EACnC,OAAOF,UAAU,CAACE,EAAE,CAAC,CAACM,IAAI;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,iBAAiBA,CAACP,EAAE,EAAEM,IAAI,EAAEJ,IAAI,EAAE;EAChDJ,UAAU,CAACE,EAAE,CAAC,GAAG;IACfM,IAAI;IACJJ;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}