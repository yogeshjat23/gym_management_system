{"ast":null,"code":"function _classPrivateMethodInitSpec(e, a) {\n  _checkPrivateRedeclaration(e, a), a.add(e);\n}\nfunction _classPrivateFieldInitSpec(e, t, a) {\n  _checkPrivateRedeclaration(e, t), t.set(e, a);\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _classPrivateFieldGet(s, a) {\n  return s.get(_assertClassBrand(s, a));\n}\nfunction _classPrivateFieldSet(s, a, r) {\n  return s.set(_assertClassBrand(s, a), r), r;\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nimport { mixin } from \"../../helpers/object.mjs\";\nimport localHooks from \"../../mixins/localHooks.mjs\";\n/**\n * Module that observes the editor size after it has been resized by the user.\n *\n * @private\n * @class EditorResizeObserver\n */\nvar _ignoreInitialCall = /*#__PURE__*/new WeakMap();\nvar _observedElement = /*#__PURE__*/new WeakMap();\nvar _observer = /*#__PURE__*/new WeakMap();\nvar _EditorResizeObserver_brand = /*#__PURE__*/new WeakSet();\nexport class EditorResizeObserver {\n  constructor() {\n    /**\n     * Listens for event from the ResizeObserver and forwards the through the local hooks.\n     *\n     * @param {*} entries The entries from the ResizeObserver.\n     */\n    _classPrivateMethodInitSpec(this, _EditorResizeObserver_brand);\n    /**\n     * The flag that indicates if the initial call should be ignored. It is used to prevent the initial call\n     * that happens after the observer is attached to the element.\n     *\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _ignoreInitialCall, true);\n    /**\n     * The element that is observed by the observer.\n     *\n     * @type {HTMLElement}\n     */\n    _classPrivateFieldInitSpec(this, _observedElement, null);\n    /**\n     * The ResizeObserver instance.\n     *\n     * @type {ResizeObserver}\n     */\n    _classPrivateFieldInitSpec(this, _observer, new ResizeObserver(entries => _assertClassBrand(_EditorResizeObserver_brand, this, _onResize).call(this, entries)));\n  }\n  /**\n   * Sets the observed element.\n   *\n   * @param {HTMLElement} element The element to observe.\n   */\n  setObservedElement(element) {\n    _classPrivateFieldSet(_observedElement, this, element);\n  }\n\n  /**\n   * Stops observing the element.\n   */\n  unobserve() {\n    _classPrivateFieldGet(_observer, this).unobserve(_classPrivateFieldGet(_observedElement, this));\n  }\n\n  /**\n   * Starts observing the element.\n   */\n  observe() {\n    _classPrivateFieldSet(_ignoreInitialCall, this, true);\n    _classPrivateFieldGet(_observer, this).observe(_classPrivateFieldGet(_observedElement, this));\n  }\n\n  /**\n   * Destroys the observer.\n   */\n  destroy() {\n    _classPrivateFieldGet(_observer, this).disconnect();\n  }\n}\nfunction _onResize(entries) {\n  if (_classPrivateFieldGet(_ignoreInitialCall, this) || !Array.isArray(entries) || !entries.length) {\n    _classPrivateFieldSet(_ignoreInitialCall, this, false);\n    return;\n  }\n  entries.forEach(_ref => {\n    let {\n      borderBoxSize\n    } = _ref;\n    const {\n      inlineSize,\n      blockSize\n    } = borderBoxSize[0];\n    this.runLocalHooks('resize', inlineSize, blockSize);\n  });\n}\nmixin(EditorResizeObserver, localHooks);","map":{"version":3,"names":["_classPrivateMethodInitSpec","e","a","_checkPrivateRedeclaration","add","_classPrivateFieldInitSpec","t","set","has","TypeError","_classPrivateFieldGet","s","get","_assertClassBrand","_classPrivateFieldSet","r","n","arguments","length","mixin","localHooks","_ignoreInitialCall","WeakMap","_observedElement","_observer","_EditorResizeObserver_brand","WeakSet","EditorResizeObserver","constructor","ResizeObserver","entries","_onResize","call","setObservedElement","element","unobserve","observe","destroy","disconnect","Array","isArray","forEach","_ref","borderBoxSize","inlineSize","blockSize","runLocalHooks"],"sources":["D:/gym-project/frontend/node_modules/handsontable/plugins/comments/editorResizeObserver.mjs"],"sourcesContent":["import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(e, a) { _checkPrivateRedeclaration(e, a), a.add(e); }\nfunction _classPrivateFieldInitSpec(e, t, a) { _checkPrivateRedeclaration(e, t), t.set(e, a); }\nfunction _checkPrivateRedeclaration(e, t) { if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); }\nfunction _classPrivateFieldGet(s, a) { return s.get(_assertClassBrand(s, a)); }\nfunction _classPrivateFieldSet(s, a, r) { return s.set(_assertClassBrand(s, a), r), r; }\nfunction _assertClassBrand(e, t, n) { if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n; throw new TypeError(\"Private element is not present on this object\"); }\nimport { mixin } from \"../../helpers/object.mjs\";\nimport localHooks from \"../../mixins/localHooks.mjs\";\n/**\n * Module that observes the editor size after it has been resized by the user.\n *\n * @private\n * @class EditorResizeObserver\n */\nvar _ignoreInitialCall = /*#__PURE__*/new WeakMap();\nvar _observedElement = /*#__PURE__*/new WeakMap();\nvar _observer = /*#__PURE__*/new WeakMap();\nvar _EditorResizeObserver_brand = /*#__PURE__*/new WeakSet();\nexport class EditorResizeObserver {\n  constructor() {\n    /**\n     * Listens for event from the ResizeObserver and forwards the through the local hooks.\n     *\n     * @param {*} entries The entries from the ResizeObserver.\n     */\n    _classPrivateMethodInitSpec(this, _EditorResizeObserver_brand);\n    /**\n     * The flag that indicates if the initial call should be ignored. It is used to prevent the initial call\n     * that happens after the observer is attached to the element.\n     *\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _ignoreInitialCall, true);\n    /**\n     * The element that is observed by the observer.\n     *\n     * @type {HTMLElement}\n     */\n    _classPrivateFieldInitSpec(this, _observedElement, null);\n    /**\n     * The ResizeObserver instance.\n     *\n     * @type {ResizeObserver}\n     */\n    _classPrivateFieldInitSpec(this, _observer, new ResizeObserver(entries => _assertClassBrand(_EditorResizeObserver_brand, this, _onResize).call(this, entries)));\n  }\n  /**\n   * Sets the observed element.\n   *\n   * @param {HTMLElement} element The element to observe.\n   */\n  setObservedElement(element) {\n    _classPrivateFieldSet(_observedElement, this, element);\n  }\n\n  /**\n   * Stops observing the element.\n   */\n  unobserve() {\n    _classPrivateFieldGet(_observer, this).unobserve(_classPrivateFieldGet(_observedElement, this));\n  }\n\n  /**\n   * Starts observing the element.\n   */\n  observe() {\n    _classPrivateFieldSet(_ignoreInitialCall, this, true);\n    _classPrivateFieldGet(_observer, this).observe(_classPrivateFieldGet(_observedElement, this));\n  }\n\n  /**\n   * Destroys the observer.\n   */\n  destroy() {\n    _classPrivateFieldGet(_observer, this).disconnect();\n  }\n}\nfunction _onResize(entries) {\n  if (_classPrivateFieldGet(_ignoreInitialCall, this) || !Array.isArray(entries) || !entries.length) {\n    _classPrivateFieldSet(_ignoreInitialCall, this, false);\n    return;\n  }\n  entries.forEach(_ref => {\n    let {\n      borderBoxSize\n    } = _ref;\n    const {\n      inlineSize,\n      blockSize\n    } = borderBoxSize[0];\n    this.runLocalHooks('resize', inlineSize, blockSize);\n  });\n}\nmixin(EditorResizeObserver, localHooks);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}