{"ast":null,"code":"export const command = {\n  name: 'extendCellsSelectionToMostRight',\n  callback(hot) {\n    const {\n      selection,\n      columnIndexMapper\n    } = hot;\n    const {\n      highlight,\n      from,\n      to\n    } = hot.getSelectedRangeLast();\n    const isFocusHighlightedByHeader = highlight.isHeader() && hot.selection.isSelectedByColumnHeader();\n    if (highlight.isCell() || isFocusHighlightedByHeader) {\n      const column = columnIndexMapper.getNearestNotHiddenIndex(...(hot.isRtl() ? [0, 1] : [hot.countCols() - 1, -1]));\n      const newFrom = from.clone();\n      newFrom.col = highlight.col;\n      selection.setRangeStart(newFrom, undefined, false, highlight.clone());\n\n      // Restore the column highlight by header flag after setting up a new selection.\n      if (isFocusHighlightedByHeader) {\n        selection.selectedByColumnHeader.add(selection.getLayerLevel());\n      }\n      selection.setRangeEnd(hot._createCellCoords(to.row, column));\n    }\n  }\n};","map":{"version":3,"names":["command","name","callback","hot","selection","columnIndexMapper","highlight","from","to","getSelectedRangeLast","isFocusHighlightedByHeader","isHeader","isSelectedByColumnHeader","isCell","column","getNearestNotHiddenIndex","isRtl","countCols","newFrom","clone","col","setRangeStart","undefined","selectedByColumnHeader","add","getLayerLevel","setRangeEnd","_createCellCoords","row"],"sources":["D:/gym-project/frontend/node_modules/handsontable/shortcutContexts/commands/extendCellsSelection/toMostRight.mjs"],"sourcesContent":["export const command = {\n  name: 'extendCellsSelectionToMostRight',\n  callback(hot) {\n    const {\n      selection,\n      columnIndexMapper\n    } = hot;\n    const {\n      highlight,\n      from,\n      to\n    } = hot.getSelectedRangeLast();\n    const isFocusHighlightedByHeader = highlight.isHeader() && hot.selection.isSelectedByColumnHeader();\n    if (highlight.isCell() || isFocusHighlightedByHeader) {\n      const column = columnIndexMapper.getNearestNotHiddenIndex(...(hot.isRtl() ? [0, 1] : [hot.countCols() - 1, -1]));\n      const newFrom = from.clone();\n      newFrom.col = highlight.col;\n      selection.setRangeStart(newFrom, undefined, false, highlight.clone());\n\n      // Restore the column highlight by header flag after setting up a new selection.\n      if (isFocusHighlightedByHeader) {\n        selection.selectedByColumnHeader.add(selection.getLayerLevel());\n      }\n      selection.setRangeEnd(hot._createCellCoords(to.row, column));\n    }\n  }\n};"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG;EACrBC,IAAI,EAAE,iCAAiC;EACvCC,QAAQA,CAACC,GAAG,EAAE;IACZ,MAAM;MACJC,SAAS;MACTC;IACF,CAAC,GAAGF,GAAG;IACP,MAAM;MACJG,SAAS;MACTC,IAAI;MACJC;IACF,CAAC,GAAGL,GAAG,CAACM,oBAAoB,CAAC,CAAC;IAC9B,MAAMC,0BAA0B,GAAGJ,SAAS,CAACK,QAAQ,CAAC,CAAC,IAAIR,GAAG,CAACC,SAAS,CAACQ,wBAAwB,CAAC,CAAC;IACnG,IAAIN,SAAS,CAACO,MAAM,CAAC,CAAC,IAAIH,0BAA0B,EAAE;MACpD,MAAMI,MAAM,GAAGT,iBAAiB,CAACU,wBAAwB,CAAC,IAAIZ,GAAG,CAACa,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAACb,GAAG,CAACc,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MAChH,MAAMC,OAAO,GAAGX,IAAI,CAACY,KAAK,CAAC,CAAC;MAC5BD,OAAO,CAACE,GAAG,GAAGd,SAAS,CAACc,GAAG;MAC3BhB,SAAS,CAACiB,aAAa,CAACH,OAAO,EAAEI,SAAS,EAAE,KAAK,EAAEhB,SAAS,CAACa,KAAK,CAAC,CAAC,CAAC;;MAErE;MACA,IAAIT,0BAA0B,EAAE;QAC9BN,SAAS,CAACmB,sBAAsB,CAACC,GAAG,CAACpB,SAAS,CAACqB,aAAa,CAAC,CAAC,CAAC;MACjE;MACArB,SAAS,CAACsB,WAAW,CAACvB,GAAG,CAACwB,iBAAiB,CAACnB,EAAE,CAACoB,GAAG,EAAEd,MAAM,CAAC,CAAC;IAC9D;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}