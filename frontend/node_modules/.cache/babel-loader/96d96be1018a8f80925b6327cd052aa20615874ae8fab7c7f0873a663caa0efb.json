{"ast":null,"code":"function _classPrivateMethodInitSpec(e, a) {\n  _checkPrivateRedeclaration(e, a), a.add(e);\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nimport { BasePlugin } from \"../base/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { arrayEach } from \"../../helpers/array.mjs\";\nimport { objectEach } from \"../../helpers/object.mjs\";\nimport { CommandExecutor } from \"./commandExecutor.mjs\";\nimport { ItemsFactory } from \"./itemsFactory.mjs\";\nimport { Menu } from \"./menu/index.mjs\";\nimport { getDocumentOffsetByElement } from \"./utils.mjs\";\nimport { hasClass } from \"../../helpers/dom/element.mjs\";\nimport { ROW_ABOVE, ROW_BELOW, COLUMN_LEFT, COLUMN_RIGHT, REMOVE_ROW, REMOVE_COLUMN, UNDO, REDO, READ_ONLY, ALIGNMENT, SEPARATOR } from \"./predefinedItems/index.mjs\";\nexport const PLUGIN_KEY = 'contextMenu';\nexport const PLUGIN_PRIORITY = 70;\nconst SHORTCUTS_GROUP = PLUGIN_KEY;\nHooks.getSingleton().register('afterContextMenuDefaultOptions');\nHooks.getSingleton().register('beforeContextMenuShow');\nHooks.getSingleton().register('afterContextMenuShow');\nHooks.getSingleton().register('afterContextMenuHide');\nHooks.getSingleton().register('afterContextMenuExecute');\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\n * @class ContextMenu\n * @description\n * This plugin creates the Handsontable Context Menu. It allows to create a new row or column at any place in the\n * grid among [other features](@/guides/accessories-and-menus/context-menu/context-menu.md#context-menu-with-specific-options).\n * Possible values:\n * * `true` (to enable default options),\n * * `false` (to disable completely)\n * * `{ uiContainer: containerDomElement }` (to declare a container for all of the Context Menu's dom elements to be placed in).\n * * An array of [the available strings](@/guides/accessories-and-menus/context-menu/context-menu.md#context-menu-with-specific-options)\n *\n * See [the context menu demo](@/guides/accessories-and-menus/context-menu/context-menu.md) for examples.\n *\n * @example\n * ```js\n * // as a boolean\n * contextMenu: true\n * // as a array\n * contextMenu: ['row_above', 'row_below', '---------', 'undo', 'redo']\n * ```\n *\n * @plugin ContextMenu\n */\nvar _ContextMenu_brand = /*#__PURE__*/new WeakSet();\nexport class ContextMenu extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * On contextmenu listener.\n     *\n     * @param {Event} event The mouse event object.\n     */\n    _classPrivateMethodInitSpec(this, _ContextMenu_brand);\n    /**\n     * Instance of {@link CommandExecutor}.\n     *\n     * @private\n     * @type {CommandExecutor}\n     */\n    _defineProperty(this, \"commandExecutor\", new CommandExecutor(this.hot));\n    /**\n     * Instance of {@link ItemsFactory}.\n     *\n     * @private\n     * @type {ItemsFactory}\n     */\n    _defineProperty(this, \"itemsFactory\", null);\n    /**\n     * Instance of {@link Menu}.\n     *\n     * @private\n     * @type {Menu}\n     */\n    _defineProperty(this, \"menu\", null);\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  static get PLUGIN_DEPS() {\n    return ['plugin:AutoColumnSize'];\n  }\n\n  /**\n   * Context menu default items order when `contextMenu` options is set as `true`.\n   *\n   * @returns {string[]}\n   */\n  static get DEFAULT_ITEMS() {\n    return [ROW_ABOVE, ROW_BELOW, SEPARATOR, COLUMN_LEFT, COLUMN_RIGHT, SEPARATOR, REMOVE_ROW, REMOVE_COLUMN, SEPARATOR, UNDO, REDO, SEPARATOR, READ_ONLY, SEPARATOR, ALIGNMENT];\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link ContextMenu#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return !!this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    var _this = this;\n    if (this.enabled) {\n      return;\n    }\n    const settings = this.hot.getSettings()[PLUGIN_KEY];\n    if (typeof settings.callback === 'function') {\n      this.commandExecutor.setCommonCallback(settings.callback);\n    }\n    this.menu = new Menu(this.hot, {\n      className: 'htContextMenu',\n      keepInViewport: true,\n      container: settings.uiContainer || this.hot.rootDocument.body\n    });\n    this.menu.addLocalHook('beforeOpen', () => _assertClassBrand(_ContextMenu_brand, this, _onMenuBeforeOpen).call(this));\n    this.menu.addLocalHook('afterOpen', () => _assertClassBrand(_ContextMenu_brand, this, _onMenuAfterOpen).call(this));\n    this.menu.addLocalHook('afterClose', () => _assertClassBrand(_ContextMenu_brand, this, _onMenuAfterClose).call(this));\n    this.menu.addLocalHook('executeCommand', function () {\n      for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n        params[_key] = arguments[_key];\n      }\n      return _this.executeCommand.call(_this, ...params);\n    });\n    this.addHook('afterOnCellContextMenu', event => _assertClassBrand(_ContextMenu_brand, this, _onAfterOnCellContextMenu).call(this, event));\n    this.registerShortcuts();\n    super.enablePlugin();\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *  - [`contextMenu`](@/api/options.md#contextmenu)\n   */\n  updatePlugin() {\n    this.disablePlugin();\n    this.enablePlugin();\n    super.updatePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    this.close();\n    if (this.menu) {\n      this.menu.destroy();\n      this.menu = null;\n    }\n    this.unregisterShortcuts();\n    super.disablePlugin();\n  }\n\n  /**\n   * Register shortcuts responsible for toggling context menu.\n   *\n   * @private\n   */\n  registerShortcuts() {\n    this.hot.getShortcutManager().getContext('grid').addShortcut({\n      keys: [['Control/Meta', 'Shift', 'Backslash'], ['Shift', 'F10']],\n      callback: () => {\n        const {\n          highlight\n        } = this.hot.getSelectedRangeLast();\n        this.hot.scrollToFocusedCell();\n        const rect = this.hot.getCell(highlight.row, highlight.col, true).getBoundingClientRect();\n        const offset = getDocumentOffsetByElement(this.menu.container, this.hot.rootDocument);\n        this.open({\n          left: rect.left + offset.left,\n          top: rect.top + offset.top - 1 + rect.height\n        }, {\n          left: rect.width,\n          above: -rect.height\n        });\n        // Make sure the first item is selected (role=menuitem). Otherwise, screen readers\n        // will block the Esc key for the whole menu.\n        this.menu.getNavigator().toFirstItem();\n      },\n      runOnlyIf: () => {\n        var _this$hot$getSelected;\n        const highlight = (_this$hot$getSelected = this.hot.getSelectedRangeLast()) === null || _this$hot$getSelected === void 0 ? void 0 : _this$hot$getSelected.highlight;\n        return highlight && this.hot.selection.isCellVisible(highlight) && !this.menu.isOpened();\n      },\n      group: SHORTCUTS_GROUP\n    });\n  }\n\n  /**\n   * Unregister shortcuts responsible for toggling context menu.\n   *\n   * @private\n   */\n  unregisterShortcuts() {\n    this.hot.getShortcutManager().getContext('grid').removeShortcutsByGroup(SHORTCUTS_GROUP);\n  }\n\n  /**\n   * Opens menu and re-position it based on the passed coordinates.\n   *\n   * @param {{ top: number, left: number }|Event} position An object with `top` and `left` properties\n   * which contains coordinates relative to the browsers viewport (without included scroll offsets).\n   * Or if the native event is passed the menu will be positioned based on the `pageX` and `pageY`\n   * coordinates.\n   * @param {{ above: number, below: number, left: number, right: number }} offset An object allows applying\n   * the offset to the menu position.\n   * @fires Hooks#beforeContextMenuShow\n   * @fires Hooks#afterContextMenuShow\n   */\n  open(position) {\n    var _this$menu;\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      above: 0,\n      below: 0,\n      left: 0,\n      right: 0\n    };\n    if ((_this$menu = this.menu) !== null && _this$menu !== void 0 && _this$menu.isOpened()) {\n      return;\n    }\n    this.prepareMenuItems();\n    this.menu.open();\n    objectEach(offset, (value, key) => {\n      this.menu.setOffset(key, value);\n    });\n    this.menu.setPosition(position);\n  }\n\n  /**\n   * Closes the menu.\n   */\n  close() {\n    var _this$menu2;\n    (_this$menu2 = this.menu) === null || _this$menu2 === void 0 || _this$menu2.close();\n    this.itemsFactory = null;\n  }\n\n  /**\n   * Execute context menu command.\n   *\n   * The `executeCommand()` method works only for selected cells.\n   *\n   * When no cells are selected, `executeCommand()` doesn't do anything.\n   *\n   * You can execute all predefined commands:\n   *  * `'row_above'` - Insert row above\n   *  * `'row_below'` - Insert row below\n   *  * `'col_left'` - Insert column left\n   *  * `'col_right'` - Insert column right\n   *  * `'clear_column'` - Clear selected column\n   *  * `'remove_row'` - Remove row\n   *  * `'remove_col'` - Remove column\n   *  * `'undo'` - Undo last action\n   *  * `'redo'` - Redo last action\n   *  * `'make_read_only'` - Make cell read only\n   *  * `'alignment:left'` - Alignment to the left\n   *  * `'alignment:top'` - Alignment to the top\n   *  * `'alignment:right'` - Alignment to the right\n   *  * `'alignment:bottom'` - Alignment to the bottom\n   *  * `'alignment:middle'` - Alignment to the middle\n   *  * `'alignment:center'` - Alignment to the center (justify).\n   *\n   * Or you can execute command registered in settings where `key` is your command name.\n   *\n   * @param {string} commandName The command name to be executed.\n   * @param {*} params Additional parameters passed to command executor module.\n   */\n  executeCommand(commandName) {\n    if (this.itemsFactory === null) {\n      this.prepareMenuItems();\n    }\n    for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      params[_key2 - 1] = arguments[_key2];\n    }\n    this.commandExecutor.execute(commandName, ...params);\n  }\n\n  /**\n   * Prepares available contextMenu's items list and registers them in commandExecutor.\n   *\n   * @private\n   * @fires Hooks#afterContextMenuDefaultOptions\n   * @fires Hooks#beforeContextMenuSetItems\n   */\n  prepareMenuItems() {\n    this.itemsFactory = new ItemsFactory(this.hot, ContextMenu.DEFAULT_ITEMS);\n    const settings = this.hot.getSettings()[PLUGIN_KEY];\n    const predefinedItems = {\n      items: this.itemsFactory.getItems(settings)\n    };\n    this.hot.runHooks('afterContextMenuDefaultOptions', predefinedItems);\n    this.itemsFactory.setPredefinedItems(predefinedItems.items);\n    const menuItems = this.itemsFactory.getItems(settings);\n    this.hot.runHooks('beforeContextMenuSetItems', menuItems);\n    this.menu.setMenuItems(menuItems);\n\n    // Register all commands. Predefined and added by user or by plugins\n    arrayEach(menuItems, command => this.commandExecutor.registerCommand(command.key, command));\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    this.close();\n    if (this.menu) {\n      this.menu.destroy();\n    }\n    super.destroy();\n  }\n}\nfunction _onAfterOnCellContextMenu(event) {\n  const settings = this.hot.getSettings();\n  const showRowHeaders = settings.rowHeaders;\n  const showColHeaders = settings.colHeaders;\n\n  /**\n   * @private\n   * @param {HTMLElement} element The element to validate.\n   * @returns {boolean}\n   */\n  function isValidElement(element) {\n    return element.nodeName === 'TD' || element.parentNode.nodeName === 'TD';\n  }\n  const element = event.target;\n  this.close();\n  if (hasClass(element, 'handsontableInput')) {\n    return;\n  }\n  event.preventDefault();\n  event.stopPropagation();\n  if (!(showRowHeaders || showColHeaders)) {\n    if (!isValidElement(element) && !(hasClass(element, 'current') && hasClass(element, 'wtBorder'))) {\n      return;\n    }\n  }\n  const offset = getDocumentOffsetByElement(this.menu.container, this.hot.rootDocument);\n  this.open({\n    top: event.clientY + offset.top,\n    left: event.clientX + offset.left\n  });\n}\n/**\n * On menu before open listener.\n */\nfunction _onMenuBeforeOpen() {\n  this.hot.runHooks('beforeContextMenuShow', this);\n}\n/**\n * On menu after open listener.\n */\nfunction _onMenuAfterOpen() {\n  this.hot.runHooks('afterContextMenuShow', this);\n}\n/**\n * On menu after close listener.\n */\nfunction _onMenuAfterClose() {\n  this.hot.listen();\n  this.hot.runHooks('afterContextMenuHide', this);\n}\nContextMenu.SEPARATOR = {\n  name: SEPARATOR\n};","map":{"version":3,"names":["_classPrivateMethodInitSpec","e","a","_checkPrivateRedeclaration","add","t","has","TypeError","_defineProperty","r","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","String","Number","_assertClassBrand","n","arguments","length","BasePlugin","Hooks","arrayEach","objectEach","CommandExecutor","ItemsFactory","Menu","getDocumentOffsetByElement","hasClass","ROW_ABOVE","ROW_BELOW","COLUMN_LEFT","COLUMN_RIGHT","REMOVE_ROW","REMOVE_COLUMN","UNDO","REDO","READ_ONLY","ALIGNMENT","SEPARATOR","PLUGIN_KEY","PLUGIN_PRIORITY","SHORTCUTS_GROUP","getSingleton","register","_ContextMenu_brand","WeakSet","ContextMenu","constructor","hot","PLUGIN_DEPS","DEFAULT_ITEMS","isEnabled","getSettings","enablePlugin","_this","enabled","settings","callback","commandExecutor","setCommonCallback","menu","className","keepInViewport","container","uiContainer","rootDocument","body","addLocalHook","_onMenuBeforeOpen","_onMenuAfterOpen","_onMenuAfterClose","_len","params","Array","_key","executeCommand","addHook","event","_onAfterOnCellContextMenu","registerShortcuts","updatePlugin","disablePlugin","close","destroy","unregisterShortcuts","getShortcutManager","getContext","addShortcut","keys","highlight","getSelectedRangeLast","scrollToFocusedCell","rect","getCell","row","col","getBoundingClientRect","offset","open","left","top","height","width","above","getNavigator","toFirstItem","runOnlyIf","_this$hot$getSelected","selection","isCellVisible","isOpened","group","removeShortcutsByGroup","position","_this$menu","undefined","below","right","prepareMenuItems","key","setOffset","setPosition","_this$menu2","itemsFactory","commandName","_len2","_key2","execute","predefinedItems","items","getItems","runHooks","setPredefinedItems","menuItems","setMenuItems","command","registerCommand","showRowHeaders","rowHeaders","showColHeaders","colHeaders","isValidElement","element","nodeName","parentNode","target","preventDefault","stopPropagation","clientY","clientX","listen","name"],"sources":["D:/gym-project/frontend/node_modules/handsontable/plugins/contextMenu/contextMenu.mjs"],"sourcesContent":["import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(e, a) { _checkPrivateRedeclaration(e, a), a.add(e); }\nfunction _checkPrivateRedeclaration(e, t) { if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _assertClassBrand(e, t, n) { if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n; throw new TypeError(\"Private element is not present on this object\"); }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { arrayEach } from \"../../helpers/array.mjs\";\nimport { objectEach } from \"../../helpers/object.mjs\";\nimport { CommandExecutor } from \"./commandExecutor.mjs\";\nimport { ItemsFactory } from \"./itemsFactory.mjs\";\nimport { Menu } from \"./menu/index.mjs\";\nimport { getDocumentOffsetByElement } from \"./utils.mjs\";\nimport { hasClass } from \"../../helpers/dom/element.mjs\";\nimport { ROW_ABOVE, ROW_BELOW, COLUMN_LEFT, COLUMN_RIGHT, REMOVE_ROW, REMOVE_COLUMN, UNDO, REDO, READ_ONLY, ALIGNMENT, SEPARATOR } from \"./predefinedItems/index.mjs\";\nexport const PLUGIN_KEY = 'contextMenu';\nexport const PLUGIN_PRIORITY = 70;\nconst SHORTCUTS_GROUP = PLUGIN_KEY;\nHooks.getSingleton().register('afterContextMenuDefaultOptions');\nHooks.getSingleton().register('beforeContextMenuShow');\nHooks.getSingleton().register('afterContextMenuShow');\nHooks.getSingleton().register('afterContextMenuHide');\nHooks.getSingleton().register('afterContextMenuExecute');\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\n * @class ContextMenu\n * @description\n * This plugin creates the Handsontable Context Menu. It allows to create a new row or column at any place in the\n * grid among [other features](@/guides/accessories-and-menus/context-menu/context-menu.md#context-menu-with-specific-options).\n * Possible values:\n * * `true` (to enable default options),\n * * `false` (to disable completely)\n * * `{ uiContainer: containerDomElement }` (to declare a container for all of the Context Menu's dom elements to be placed in).\n * * An array of [the available strings](@/guides/accessories-and-menus/context-menu/context-menu.md#context-menu-with-specific-options)\n *\n * See [the context menu demo](@/guides/accessories-and-menus/context-menu/context-menu.md) for examples.\n *\n * @example\n * ```js\n * // as a boolean\n * contextMenu: true\n * // as a array\n * contextMenu: ['row_above', 'row_below', '---------', 'undo', 'redo']\n * ```\n *\n * @plugin ContextMenu\n */\nvar _ContextMenu_brand = /*#__PURE__*/new WeakSet();\nexport class ContextMenu extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * On contextmenu listener.\n     *\n     * @param {Event} event The mouse event object.\n     */\n    _classPrivateMethodInitSpec(this, _ContextMenu_brand);\n    /**\n     * Instance of {@link CommandExecutor}.\n     *\n     * @private\n     * @type {CommandExecutor}\n     */\n    _defineProperty(this, \"commandExecutor\", new CommandExecutor(this.hot));\n    /**\n     * Instance of {@link ItemsFactory}.\n     *\n     * @private\n     * @type {ItemsFactory}\n     */\n    _defineProperty(this, \"itemsFactory\", null);\n    /**\n     * Instance of {@link Menu}.\n     *\n     * @private\n     * @type {Menu}\n     */\n    _defineProperty(this, \"menu\", null);\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  static get PLUGIN_DEPS() {\n    return ['plugin:AutoColumnSize'];\n  }\n\n  /**\n   * Context menu default items order when `contextMenu` options is set as `true`.\n   *\n   * @returns {string[]}\n   */\n  static get DEFAULT_ITEMS() {\n    return [ROW_ABOVE, ROW_BELOW, SEPARATOR, COLUMN_LEFT, COLUMN_RIGHT, SEPARATOR, REMOVE_ROW, REMOVE_COLUMN, SEPARATOR, UNDO, REDO, SEPARATOR, READ_ONLY, SEPARATOR, ALIGNMENT];\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link ContextMenu#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return !!this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    var _this = this;\n    if (this.enabled) {\n      return;\n    }\n    const settings = this.hot.getSettings()[PLUGIN_KEY];\n    if (typeof settings.callback === 'function') {\n      this.commandExecutor.setCommonCallback(settings.callback);\n    }\n    this.menu = new Menu(this.hot, {\n      className: 'htContextMenu',\n      keepInViewport: true,\n      container: settings.uiContainer || this.hot.rootDocument.body\n    });\n    this.menu.addLocalHook('beforeOpen', () => _assertClassBrand(_ContextMenu_brand, this, _onMenuBeforeOpen).call(this));\n    this.menu.addLocalHook('afterOpen', () => _assertClassBrand(_ContextMenu_brand, this, _onMenuAfterOpen).call(this));\n    this.menu.addLocalHook('afterClose', () => _assertClassBrand(_ContextMenu_brand, this, _onMenuAfterClose).call(this));\n    this.menu.addLocalHook('executeCommand', function () {\n      for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n        params[_key] = arguments[_key];\n      }\n      return _this.executeCommand.call(_this, ...params);\n    });\n    this.addHook('afterOnCellContextMenu', event => _assertClassBrand(_ContextMenu_brand, this, _onAfterOnCellContextMenu).call(this, event));\n    this.registerShortcuts();\n    super.enablePlugin();\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *  - [`contextMenu`](@/api/options.md#contextmenu)\n   */\n  updatePlugin() {\n    this.disablePlugin();\n    this.enablePlugin();\n    super.updatePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    this.close();\n    if (this.menu) {\n      this.menu.destroy();\n      this.menu = null;\n    }\n    this.unregisterShortcuts();\n    super.disablePlugin();\n  }\n\n  /**\n   * Register shortcuts responsible for toggling context menu.\n   *\n   * @private\n   */\n  registerShortcuts() {\n    this.hot.getShortcutManager().getContext('grid').addShortcut({\n      keys: [['Control/Meta', 'Shift', 'Backslash'], ['Shift', 'F10']],\n      callback: () => {\n        const {\n          highlight\n        } = this.hot.getSelectedRangeLast();\n        this.hot.scrollToFocusedCell();\n        const rect = this.hot.getCell(highlight.row, highlight.col, true).getBoundingClientRect();\n        const offset = getDocumentOffsetByElement(this.menu.container, this.hot.rootDocument);\n        this.open({\n          left: rect.left + offset.left,\n          top: rect.top + offset.top - 1 + rect.height\n        }, {\n          left: rect.width,\n          above: -rect.height\n        });\n        // Make sure the first item is selected (role=menuitem). Otherwise, screen readers\n        // will block the Esc key for the whole menu.\n        this.menu.getNavigator().toFirstItem();\n      },\n      runOnlyIf: () => {\n        var _this$hot$getSelected;\n        const highlight = (_this$hot$getSelected = this.hot.getSelectedRangeLast()) === null || _this$hot$getSelected === void 0 ? void 0 : _this$hot$getSelected.highlight;\n        return highlight && this.hot.selection.isCellVisible(highlight) && !this.menu.isOpened();\n      },\n      group: SHORTCUTS_GROUP\n    });\n  }\n\n  /**\n   * Unregister shortcuts responsible for toggling context menu.\n   *\n   * @private\n   */\n  unregisterShortcuts() {\n    this.hot.getShortcutManager().getContext('grid').removeShortcutsByGroup(SHORTCUTS_GROUP);\n  }\n\n  /**\n   * Opens menu and re-position it based on the passed coordinates.\n   *\n   * @param {{ top: number, left: number }|Event} position An object with `top` and `left` properties\n   * which contains coordinates relative to the browsers viewport (without included scroll offsets).\n   * Or if the native event is passed the menu will be positioned based on the `pageX` and `pageY`\n   * coordinates.\n   * @param {{ above: number, below: number, left: number, right: number }} offset An object allows applying\n   * the offset to the menu position.\n   * @fires Hooks#beforeContextMenuShow\n   * @fires Hooks#afterContextMenuShow\n   */\n  open(position) {\n    var _this$menu;\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      above: 0,\n      below: 0,\n      left: 0,\n      right: 0\n    };\n    if ((_this$menu = this.menu) !== null && _this$menu !== void 0 && _this$menu.isOpened()) {\n      return;\n    }\n    this.prepareMenuItems();\n    this.menu.open();\n    objectEach(offset, (value, key) => {\n      this.menu.setOffset(key, value);\n    });\n    this.menu.setPosition(position);\n  }\n\n  /**\n   * Closes the menu.\n   */\n  close() {\n    var _this$menu2;\n    (_this$menu2 = this.menu) === null || _this$menu2 === void 0 || _this$menu2.close();\n    this.itemsFactory = null;\n  }\n\n  /**\n   * Execute context menu command.\n   *\n   * The `executeCommand()` method works only for selected cells.\n   *\n   * When no cells are selected, `executeCommand()` doesn't do anything.\n   *\n   * You can execute all predefined commands:\n   *  * `'row_above'` - Insert row above\n   *  * `'row_below'` - Insert row below\n   *  * `'col_left'` - Insert column left\n   *  * `'col_right'` - Insert column right\n   *  * `'clear_column'` - Clear selected column\n   *  * `'remove_row'` - Remove row\n   *  * `'remove_col'` - Remove column\n   *  * `'undo'` - Undo last action\n   *  * `'redo'` - Redo last action\n   *  * `'make_read_only'` - Make cell read only\n   *  * `'alignment:left'` - Alignment to the left\n   *  * `'alignment:top'` - Alignment to the top\n   *  * `'alignment:right'` - Alignment to the right\n   *  * `'alignment:bottom'` - Alignment to the bottom\n   *  * `'alignment:middle'` - Alignment to the middle\n   *  * `'alignment:center'` - Alignment to the center (justify).\n   *\n   * Or you can execute command registered in settings where `key` is your command name.\n   *\n   * @param {string} commandName The command name to be executed.\n   * @param {*} params Additional parameters passed to command executor module.\n   */\n  executeCommand(commandName) {\n    if (this.itemsFactory === null) {\n      this.prepareMenuItems();\n    }\n    for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      params[_key2 - 1] = arguments[_key2];\n    }\n    this.commandExecutor.execute(commandName, ...params);\n  }\n\n  /**\n   * Prepares available contextMenu's items list and registers them in commandExecutor.\n   *\n   * @private\n   * @fires Hooks#afterContextMenuDefaultOptions\n   * @fires Hooks#beforeContextMenuSetItems\n   */\n  prepareMenuItems() {\n    this.itemsFactory = new ItemsFactory(this.hot, ContextMenu.DEFAULT_ITEMS);\n    const settings = this.hot.getSettings()[PLUGIN_KEY];\n    const predefinedItems = {\n      items: this.itemsFactory.getItems(settings)\n    };\n    this.hot.runHooks('afterContextMenuDefaultOptions', predefinedItems);\n    this.itemsFactory.setPredefinedItems(predefinedItems.items);\n    const menuItems = this.itemsFactory.getItems(settings);\n    this.hot.runHooks('beforeContextMenuSetItems', menuItems);\n    this.menu.setMenuItems(menuItems);\n\n    // Register all commands. Predefined and added by user or by plugins\n    arrayEach(menuItems, command => this.commandExecutor.registerCommand(command.key, command));\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    this.close();\n    if (this.menu) {\n      this.menu.destroy();\n    }\n    super.destroy();\n  }\n}\nfunction _onAfterOnCellContextMenu(event) {\n  const settings = this.hot.getSettings();\n  const showRowHeaders = settings.rowHeaders;\n  const showColHeaders = settings.colHeaders;\n\n  /**\n   * @private\n   * @param {HTMLElement} element The element to validate.\n   * @returns {boolean}\n   */\n  function isValidElement(element) {\n    return element.nodeName === 'TD' || element.parentNode.nodeName === 'TD';\n  }\n  const element = event.target;\n  this.close();\n  if (hasClass(element, 'handsontableInput')) {\n    return;\n  }\n  event.preventDefault();\n  event.stopPropagation();\n  if (!(showRowHeaders || showColHeaders)) {\n    if (!isValidElement(element) && !(hasClass(element, 'current') && hasClass(element, 'wtBorder'))) {\n      return;\n    }\n  }\n  const offset = getDocumentOffsetByElement(this.menu.container, this.hot.rootDocument);\n  this.open({\n    top: event.clientY + offset.top,\n    left: event.clientX + offset.left\n  });\n}\n/**\n * On menu before open listener.\n */\nfunction _onMenuBeforeOpen() {\n  this.hot.runHooks('beforeContextMenuShow', this);\n}\n/**\n * On menu after open listener.\n */\nfunction _onMenuAfterOpen() {\n  this.hot.runHooks('afterContextMenuShow', this);\n}\n/**\n * On menu after close listener.\n */\nfunction _onMenuAfterClose() {\n  this.hot.listen();\n  this.hot.runHooks('afterContextMenuHide', this);\n}\nContextMenu.SEPARATOR = {\n  name: SEPARATOR\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}