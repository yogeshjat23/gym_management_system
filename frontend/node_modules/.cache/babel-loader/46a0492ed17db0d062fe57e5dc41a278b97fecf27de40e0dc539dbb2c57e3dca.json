{"ast":null,"code":"/**\n * Utility to register plugins and common namespace for keeping the reference to all plugins classes.\n */\nimport { toUpperCaseFirst } from \"../helpers/string.mjs\";\nimport { createPriorityMap } from \"../utils/dataStructures/priorityMap.mjs\";\nimport { createUniqueMap } from \"../utils/dataStructures/uniqueMap.mjs\";\nimport { createUniqueSet } from \"../utils/dataStructures/uniqueSet.mjs\";\nconst ERROR_PLUGIN_REGISTERED = pluginName => `There is already registered \"${pluginName}\" plugin.`;\nconst ERROR_PRIORITY_REGISTERED = priority => `There is already registered plugin on priority \"${priority}\".`;\nconst ERROR_PRIORITY_NAN = priority => `The priority \"${priority}\" is not a number.`;\n\n/**\n * Stores plugins' names' queue with their priorities.\n */\nconst priorityPluginsQueue = createPriorityMap({\n  errorPriorityExists: ERROR_PRIORITY_REGISTERED,\n  errorPriorityNaN: ERROR_PRIORITY_NAN\n});\n/**\n * Stores plugins names' queue by registration order.\n */\nconst uniquePluginsQueue = createUniqueSet({\n  errorItemExists: ERROR_PLUGIN_REGISTERED\n});\n/**\n * Stores plugins references between their name and class.\n */\nconst uniquePluginsList = createUniqueMap({\n  errorIdExists: ERROR_PLUGIN_REGISTERED\n});\n\n/**\n * Gets registered plugins' names in the following order:\n * 1) Plugins registered with a defined priority attribute, in the ascending order of priority.\n * 2) Plugins registered without a defined priority attribute, in the registration order.\n *\n * @returns {string[]}\n */\nexport function getPluginsNames() {\n  return [...priorityPluginsQueue.getItems(), ...uniquePluginsQueue.getItems()];\n}\n\n/**\n * Gets registered plugin's class based on the given name.\n *\n * @param {string} pluginName Plugin's name.\n * @returns {BasePlugin}\n */\nexport function getPlugin(pluginName) {\n  const unifiedPluginName = toUpperCaseFirst(pluginName);\n  return uniquePluginsList.getItem(unifiedPluginName);\n}\n\n/**\n * Checks if the plugin under the name is already registered.\n *\n * @param {string} pluginName Plugin's name.\n * @returns {boolean}\n */\nexport function hasPlugin(pluginName) {\n  /* eslint-disable no-unneeded-ternary */\n  return getPlugin(pluginName) ? true : false;\n}\n\n/**\n * Registers plugin under the given name only once.\n *\n * @param {string|Function} pluginName The plugin name or plugin class.\n * @param {Function} [pluginClass] The plugin class.\n * @param {number} [priority] The plugin priority.\n */\nexport function registerPlugin(pluginName, pluginClass, priority) {\n  [pluginName, pluginClass, priority] = unifyPluginArguments(pluginName, pluginClass, priority);\n  if (getPlugin(pluginName) === undefined) {\n    _registerPlugin(pluginName, pluginClass, priority);\n  }\n}\n\n/**\n * Registers plugin under the given name.\n *\n * @param {string|Function} pluginName The plugin name or plugin class.\n * @param {Function} [pluginClass] The plugin class.\n * @param {number} [priority] The plugin priority.\n */\nfunction _registerPlugin(pluginName, pluginClass, priority) {\n  const unifiedPluginName = toUpperCaseFirst(pluginName);\n  if (uniquePluginsList.hasItem(unifiedPluginName)) {\n    throw new Error(ERROR_PLUGIN_REGISTERED(unifiedPluginName));\n  }\n  if (priority === undefined) {\n    uniquePluginsQueue.addItem(unifiedPluginName);\n  } else {\n    priorityPluginsQueue.addItem(priority, unifiedPluginName);\n  }\n  uniquePluginsList.addItem(unifiedPluginName, pluginClass);\n}\n\n/**\n * Unifies arguments to register the plugin.\n *\n * @param {string|Function} pluginName The plugin name or plugin class.\n * @param {Function} [pluginClass] The plugin class.\n * @param {number} [priority] The plugin priority.\n * @returns {Array}\n */\nfunction unifyPluginArguments(pluginName, pluginClass, priority) {\n  if (typeof pluginName === 'function') {\n    pluginClass = pluginName;\n    pluginName = pluginClass.PLUGIN_KEY;\n    priority = pluginClass.PLUGIN_PRIORITY;\n  }\n  return [pluginName, pluginClass, priority];\n}","map":{"version":3,"names":["toUpperCaseFirst","createPriorityMap","createUniqueMap","createUniqueSet","ERROR_PLUGIN_REGISTERED","pluginName","ERROR_PRIORITY_REGISTERED","priority","ERROR_PRIORITY_NAN","priorityPluginsQueue","errorPriorityExists","errorPriorityNaN","uniquePluginsQueue","errorItemExists","uniquePluginsList","errorIdExists","getPluginsNames","getItems","getPlugin","unifiedPluginName","getItem","hasPlugin","registerPlugin","pluginClass","unifyPluginArguments","undefined","_registerPlugin","hasItem","Error","addItem","PLUGIN_KEY","PLUGIN_PRIORITY"],"sources":["D:/gym-project/frontend/node_modules/handsontable/plugins/registry.mjs"],"sourcesContent":["import \"core-js/modules/es.error.cause.js\";\n/**\n * Utility to register plugins and common namespace for keeping the reference to all plugins classes.\n */\nimport { toUpperCaseFirst } from \"../helpers/string.mjs\";\nimport { createPriorityMap } from \"../utils/dataStructures/priorityMap.mjs\";\nimport { createUniqueMap } from \"../utils/dataStructures/uniqueMap.mjs\";\nimport { createUniqueSet } from \"../utils/dataStructures/uniqueSet.mjs\";\nconst ERROR_PLUGIN_REGISTERED = pluginName => `There is already registered \"${pluginName}\" plugin.`;\nconst ERROR_PRIORITY_REGISTERED = priority => `There is already registered plugin on priority \"${priority}\".`;\nconst ERROR_PRIORITY_NAN = priority => `The priority \"${priority}\" is not a number.`;\n\n/**\n * Stores plugins' names' queue with their priorities.\n */\nconst priorityPluginsQueue = createPriorityMap({\n  errorPriorityExists: ERROR_PRIORITY_REGISTERED,\n  errorPriorityNaN: ERROR_PRIORITY_NAN\n});\n/**\n * Stores plugins names' queue by registration order.\n */\nconst uniquePluginsQueue = createUniqueSet({\n  errorItemExists: ERROR_PLUGIN_REGISTERED\n});\n/**\n * Stores plugins references between their name and class.\n */\nconst uniquePluginsList = createUniqueMap({\n  errorIdExists: ERROR_PLUGIN_REGISTERED\n});\n\n/**\n * Gets registered plugins' names in the following order:\n * 1) Plugins registered with a defined priority attribute, in the ascending order of priority.\n * 2) Plugins registered without a defined priority attribute, in the registration order.\n *\n * @returns {string[]}\n */\nexport function getPluginsNames() {\n  return [...priorityPluginsQueue.getItems(), ...uniquePluginsQueue.getItems()];\n}\n\n/**\n * Gets registered plugin's class based on the given name.\n *\n * @param {string} pluginName Plugin's name.\n * @returns {BasePlugin}\n */\nexport function getPlugin(pluginName) {\n  const unifiedPluginName = toUpperCaseFirst(pluginName);\n  return uniquePluginsList.getItem(unifiedPluginName);\n}\n\n/**\n * Checks if the plugin under the name is already registered.\n *\n * @param {string} pluginName Plugin's name.\n * @returns {boolean}\n */\nexport function hasPlugin(pluginName) {\n  /* eslint-disable no-unneeded-ternary */\n  return getPlugin(pluginName) ? true : false;\n}\n\n/**\n * Registers plugin under the given name only once.\n *\n * @param {string|Function} pluginName The plugin name or plugin class.\n * @param {Function} [pluginClass] The plugin class.\n * @param {number} [priority] The plugin priority.\n */\nexport function registerPlugin(pluginName, pluginClass, priority) {\n  [pluginName, pluginClass, priority] = unifyPluginArguments(pluginName, pluginClass, priority);\n  if (getPlugin(pluginName) === undefined) {\n    _registerPlugin(pluginName, pluginClass, priority);\n  }\n}\n\n/**\n * Registers plugin under the given name.\n *\n * @param {string|Function} pluginName The plugin name or plugin class.\n * @param {Function} [pluginClass] The plugin class.\n * @param {number} [priority] The plugin priority.\n */\nfunction _registerPlugin(pluginName, pluginClass, priority) {\n  const unifiedPluginName = toUpperCaseFirst(pluginName);\n  if (uniquePluginsList.hasItem(unifiedPluginName)) {\n    throw new Error(ERROR_PLUGIN_REGISTERED(unifiedPluginName));\n  }\n  if (priority === undefined) {\n    uniquePluginsQueue.addItem(unifiedPluginName);\n  } else {\n    priorityPluginsQueue.addItem(priority, unifiedPluginName);\n  }\n  uniquePluginsList.addItem(unifiedPluginName, pluginClass);\n}\n\n/**\n * Unifies arguments to register the plugin.\n *\n * @param {string|Function} pluginName The plugin name or plugin class.\n * @param {Function} [pluginClass] The plugin class.\n * @param {number} [priority] The plugin priority.\n * @returns {Array}\n */\nfunction unifyPluginArguments(pluginName, pluginClass, priority) {\n  if (typeof pluginName === 'function') {\n    pluginClass = pluginName;\n    pluginName = pluginClass.PLUGIN_KEY;\n    priority = pluginClass.PLUGIN_PRIORITY;\n  }\n  return [pluginName, pluginClass, priority];\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}