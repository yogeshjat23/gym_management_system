{"ast":null,"code":"export const command = {\n  name: 'extendCellsSelectionToMostTop',\n  callback(hot) {\n    const {\n      selection,\n      rowIndexMapper\n    } = hot;\n    const {\n      highlight,\n      from,\n      to\n    } = hot.getSelectedRangeLast();\n    const isFocusHighlightedByHeader = highlight.isHeader() && hot.selection.isSelectedByRowHeader();\n    if (highlight.isCell() || isFocusHighlightedByHeader) {\n      const row = rowIndexMapper.getNearestNotHiddenIndex(0, 1);\n      const newFrom = from.clone();\n      newFrom.row = highlight.row;\n      selection.setRangeStart(newFrom, undefined, false, highlight.clone());\n\n      // Restore the row highlight by header flag after setting up a new selection.\n      if (isFocusHighlightedByHeader) {\n        selection.selectedByRowHeader.add(selection.getLayerLevel());\n      }\n      selection.setRangeEnd(hot._createCellCoords(row, to.col));\n    }\n  }\n};","map":{"version":3,"names":["command","name","callback","hot","selection","rowIndexMapper","highlight","from","to","getSelectedRangeLast","isFocusHighlightedByHeader","isHeader","isSelectedByRowHeader","isCell","row","getNearestNotHiddenIndex","newFrom","clone","setRangeStart","undefined","selectedByRowHeader","add","getLayerLevel","setRangeEnd","_createCellCoords","col"],"sources":["D:/gym-project/frontend/node_modules/handsontable/shortcutContexts/commands/extendCellsSelection/toMostTop.mjs"],"sourcesContent":["export const command = {\n  name: 'extendCellsSelectionToMostTop',\n  callback(hot) {\n    const {\n      selection,\n      rowIndexMapper\n    } = hot;\n    const {\n      highlight,\n      from,\n      to\n    } = hot.getSelectedRangeLast();\n    const isFocusHighlightedByHeader = highlight.isHeader() && hot.selection.isSelectedByRowHeader();\n    if (highlight.isCell() || isFocusHighlightedByHeader) {\n      const row = rowIndexMapper.getNearestNotHiddenIndex(0, 1);\n      const newFrom = from.clone();\n      newFrom.row = highlight.row;\n      selection.setRangeStart(newFrom, undefined, false, highlight.clone());\n\n      // Restore the row highlight by header flag after setting up a new selection.\n      if (isFocusHighlightedByHeader) {\n        selection.selectedByRowHeader.add(selection.getLayerLevel());\n      }\n      selection.setRangeEnd(hot._createCellCoords(row, to.col));\n    }\n  }\n};"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG;EACrBC,IAAI,EAAE,+BAA+B;EACrCC,QAAQA,CAACC,GAAG,EAAE;IACZ,MAAM;MACJC,SAAS;MACTC;IACF,CAAC,GAAGF,GAAG;IACP,MAAM;MACJG,SAAS;MACTC,IAAI;MACJC;IACF,CAAC,GAAGL,GAAG,CAACM,oBAAoB,CAAC,CAAC;IAC9B,MAAMC,0BAA0B,GAAGJ,SAAS,CAACK,QAAQ,CAAC,CAAC,IAAIR,GAAG,CAACC,SAAS,CAACQ,qBAAqB,CAAC,CAAC;IAChG,IAAIN,SAAS,CAACO,MAAM,CAAC,CAAC,IAAIH,0BAA0B,EAAE;MACpD,MAAMI,GAAG,GAAGT,cAAc,CAACU,wBAAwB,CAAC,CAAC,EAAE,CAAC,CAAC;MACzD,MAAMC,OAAO,GAAGT,IAAI,CAACU,KAAK,CAAC,CAAC;MAC5BD,OAAO,CAACF,GAAG,GAAGR,SAAS,CAACQ,GAAG;MAC3BV,SAAS,CAACc,aAAa,CAACF,OAAO,EAAEG,SAAS,EAAE,KAAK,EAAEb,SAAS,CAACW,KAAK,CAAC,CAAC,CAAC;;MAErE;MACA,IAAIP,0BAA0B,EAAE;QAC9BN,SAAS,CAACgB,mBAAmB,CAACC,GAAG,CAACjB,SAAS,CAACkB,aAAa,CAAC,CAAC,CAAC;MAC9D;MACAlB,SAAS,CAACmB,WAAW,CAACpB,GAAG,CAACqB,iBAAiB,CAACV,GAAG,EAAEN,EAAE,CAACiB,GAAG,CAAC,CAAC;IAC3D;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}