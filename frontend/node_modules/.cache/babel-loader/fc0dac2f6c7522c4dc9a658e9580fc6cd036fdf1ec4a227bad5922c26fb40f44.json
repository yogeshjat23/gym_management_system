{"ast":null,"code":"/**\n * Creates a keyboard shortcuts list with default keyboards binds.\n *\n * @param {Menu} menu The main menu instance.\n * @returns {KeyboardShortcut[]}\n */\nexport function createDefaultShortcutsList(menu) {\n  const {\n    hot,\n    hotMenu\n  } = menu;\n  return [{\n    keys: [['Control/Meta', 'A']],\n    forwardToContext: hot.getShortcutManager().getContext('grid'),\n    callback: () => menu.close(true)\n  }, {\n    keys: [['Tab'], ['Shift', 'Tab']],\n    callback: (event, keys) => {\n      const settings = hot.getSettings();\n      const tabMoves = typeof settings.tabMoves === 'function' ? settings.tabMoves(event) : settings.tabMoves;\n      if (keys.includes('shift')) {\n        hot.selection.transformStart(-tabMoves.row, -tabMoves.col);\n      } else {\n        hot.selection.transformStart(tabMoves.row, tabMoves.col);\n      }\n      menu.close(true);\n    }\n  }, {\n    keys: [['Escape']],\n    callback: () => menu.close()\n  }, {\n    keys: [['ArrowDown']],\n    callback: () => menu.getNavigator().toNextItem()\n  }, {\n    keys: [['ArrowUp']],\n    callback: () => menu.getNavigator().toPreviousItem()\n  }, {\n    keys: [['ArrowRight']],\n    callback: () => {\n      const selection = hotMenu.getSelectedLast();\n      if (selection) {\n        const subMenu = menu.openSubMenu(selection[0]);\n        if (subMenu) {\n          subMenu.getNavigator().toFirstItem();\n        }\n      }\n    }\n  }, {\n    keys: [['ArrowLeft']],\n    callback: () => {\n      const selection = hotMenu.getSelectedLast();\n      if (selection && menu.isSubMenu()) {\n        menu.close();\n        if (menu.isSubMenu()) {\n          menu.parentMenu.hotMenu.listen();\n        }\n      }\n    }\n  }, {\n    keys: [['Control/Meta', 'ArrowUp'], ['Home']],\n    callback: () => menu.getNavigator().toFirstItem()\n  }, {\n    keys: [['Control/Meta', 'ArrowDown'], ['End']],\n    callback: () => menu.getNavigator().toLastItem()\n  }, {\n    keys: [['Enter'], ['Space']],\n    callback: event => {\n      const selection = hotMenu.getSelectedLast();\n      if (!selection) {\n        return;\n      }\n      if (hotMenu.getSourceDataAtRow(selection[0]).submenu) {\n        menu.openSubMenu(selection[0]).getNavigator().toFirstItem();\n      } else {\n        menu.executeCommand(event);\n        menu.close(true);\n      }\n    }\n  }, {\n    keys: [['PageUp']],\n    callback: () => {\n      const selection = hotMenu.getSelectedLast();\n      if (selection) {\n        hotMenu.selection.transformStart(-hotMenu.countVisibleRows(), 0);\n      } else {\n        menu.getNavigator().toFirstItem();\n      }\n    }\n  }, {\n    keys: [['PageDown']],\n    callback: () => {\n      const selection = hotMenu.getSelectedLast();\n      if (selection) {\n        hotMenu.selection.transformStart(hotMenu.countVisibleRows(), 0);\n      } else {\n        menu.getNavigator().toLastItem();\n      }\n    }\n  }];\n}","map":{"version":3,"names":["createDefaultShortcutsList","menu","hot","hotMenu","keys","forwardToContext","getShortcutManager","getContext","callback","close","event","settings","getSettings","tabMoves","includes","selection","transformStart","row","col","getNavigator","toNextItem","toPreviousItem","getSelectedLast","subMenu","openSubMenu","toFirstItem","isSubMenu","parentMenu","listen","toLastItem","getSourceDataAtRow","submenu","executeCommand","countVisibleRows"],"sources":["D:/gym-project/frontend/node_modules/handsontable/plugins/contextMenu/menu/defaultShortcutsList.mjs"],"sourcesContent":["/**\n * Creates a keyboard shortcuts list with default keyboards binds.\n *\n * @param {Menu} menu The main menu instance.\n * @returns {KeyboardShortcut[]}\n */\nexport function createDefaultShortcutsList(menu) {\n  const {\n    hot,\n    hotMenu\n  } = menu;\n  return [{\n    keys: [['Control/Meta', 'A']],\n    forwardToContext: hot.getShortcutManager().getContext('grid'),\n    callback: () => menu.close(true)\n  }, {\n    keys: [['Tab'], ['Shift', 'Tab']],\n    callback: (event, keys) => {\n      const settings = hot.getSettings();\n      const tabMoves = typeof settings.tabMoves === 'function' ? settings.tabMoves(event) : settings.tabMoves;\n      if (keys.includes('shift')) {\n        hot.selection.transformStart(-tabMoves.row, -tabMoves.col);\n      } else {\n        hot.selection.transformStart(tabMoves.row, tabMoves.col);\n      }\n      menu.close(true);\n    }\n  }, {\n    keys: [['Escape']],\n    callback: () => menu.close()\n  }, {\n    keys: [['ArrowDown']],\n    callback: () => menu.getNavigator().toNextItem()\n  }, {\n    keys: [['ArrowUp']],\n    callback: () => menu.getNavigator().toPreviousItem()\n  }, {\n    keys: [['ArrowRight']],\n    callback: () => {\n      const selection = hotMenu.getSelectedLast();\n      if (selection) {\n        const subMenu = menu.openSubMenu(selection[0]);\n        if (subMenu) {\n          subMenu.getNavigator().toFirstItem();\n        }\n      }\n    }\n  }, {\n    keys: [['ArrowLeft']],\n    callback: () => {\n      const selection = hotMenu.getSelectedLast();\n      if (selection && menu.isSubMenu()) {\n        menu.close();\n        if (menu.isSubMenu()) {\n          menu.parentMenu.hotMenu.listen();\n        }\n      }\n    }\n  }, {\n    keys: [['Control/Meta', 'ArrowUp'], ['Home']],\n    callback: () => menu.getNavigator().toFirstItem()\n  }, {\n    keys: [['Control/Meta', 'ArrowDown'], ['End']],\n    callback: () => menu.getNavigator().toLastItem()\n  }, {\n    keys: [['Enter'], ['Space']],\n    callback: event => {\n      const selection = hotMenu.getSelectedLast();\n      if (!selection) {\n        return;\n      }\n      if (hotMenu.getSourceDataAtRow(selection[0]).submenu) {\n        menu.openSubMenu(selection[0]).getNavigator().toFirstItem();\n      } else {\n        menu.executeCommand(event);\n        menu.close(true);\n      }\n    }\n  }, {\n    keys: [['PageUp']],\n    callback: () => {\n      const selection = hotMenu.getSelectedLast();\n      if (selection) {\n        hotMenu.selection.transformStart(-hotMenu.countVisibleRows(), 0);\n      } else {\n        menu.getNavigator().toFirstItem();\n      }\n    }\n  }, {\n    keys: [['PageDown']],\n    callback: () => {\n      const selection = hotMenu.getSelectedLast();\n      if (selection) {\n        hotMenu.selection.transformStart(hotMenu.countVisibleRows(), 0);\n      } else {\n        menu.getNavigator().toLastItem();\n      }\n    }\n  }];\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}