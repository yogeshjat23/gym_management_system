{"ast":null,"code":"import Event from \"../event.mjs\";\nimport Overlays from \"../overlays.mjs\";\nimport { CLONE_TYPES } from \"../overlay/index.mjs\";\nimport Settings from \"../settings.mjs\";\nimport MasterTable from \"../table/master.mjs\";\nimport Viewport from \"../viewport.mjs\";\nimport CoreAbstract from \"./_base.mjs\";\nimport { SelectionManager } from \"../selection/manager.mjs\";\nimport { objectEach } from \"../../../../helpers/object.mjs\";\nimport { addClass, removeClass } from \"../../../../helpers/dom/element.mjs\";\n/**\n * @class Walkontable\n */\nexport default class Walkontable extends CoreAbstract {\n  /**\n   * @param {HTMLTableElement} table Main table.\n   * @param {SettingsPure} settings The Walkontable settings.\n   */\n  constructor(table, settings) {\n    super(table, new Settings(settings));\n    const facadeGetter = this.wtSettings.getSetting('facade', this); // todo rethink. I would like to have no access to facade from the internal scope.\n\n    this.wtTable = new MasterTable(this.getTableDao(), facadeGetter, this.domBindings, this.wtSettings);\n    this.wtViewport = new Viewport(this.getViewportDao(), this.domBindings, this.wtSettings, this.eventManager, this.wtTable);\n    this.selectionManager = new SelectionManager(this.wtSettings.getSetting('selections'));\n    this.wtEvent = new Event(facadeGetter, this.domBindings, this.wtSettings, this.eventManager, this.wtTable, this.selectionManager);\n    this.wtOverlays = new Overlays(\n    // TODO create DAO and remove reference to the Walkontable instance.\n    this, facadeGetter, this.domBindings, this.wtSettings, this.eventManager, this.wtTable);\n    this.exportSettingsAsClassNames();\n    this.findOriginalHeaders();\n  }\n\n  /**\n   * Export settings as class names added to the parent element of the table.\n   */\n  exportSettingsAsClassNames() {\n    const toExport = {\n      rowHeaders: 'htRowHeaders',\n      columnHeaders: 'htColumnHeaders'\n    };\n    const allClassNames = [];\n    const newClassNames = [];\n    objectEach(toExport, (className, key) => {\n      if (this.wtSettings.getSetting(key).length) {\n        newClassNames.push(className);\n      }\n      allClassNames.push(className);\n    });\n    removeClass(this.wtTable.wtRootElement.parentNode, allClassNames);\n    addClass(this.wtTable.wtRootElement.parentNode, newClassNames);\n  }\n\n  /**\n   * Gets the overlay instance by its name.\n   *\n   * @param {'inline_start'|'top'|'top_inline_start_corner'|'bottom'|'bottom_inline_start_corner'} overlayName The overlay name.\n   * @returns {Overlay | null}\n   */\n  getOverlayByName(overlayName) {\n    var _this$wtOverlays;\n    if (!CLONE_TYPES.includes(overlayName)) {\n      return null;\n    }\n    const camelCaseOverlay = overlayName.replace(/_([a-z])/g, match => match[1].toUpperCase());\n    return (_this$wtOverlays = this.wtOverlays[`${camelCaseOverlay}Overlay`]) !== null && _this$wtOverlays !== void 0 ? _this$wtOverlays : null;\n  }\n\n  /**\n   * @returns {ViewportDao}\n   */\n  getViewportDao() {\n    const wot = this;\n    return {\n      get wot() {\n        return wot;\n      },\n      get topOverlayTrimmingContainer() {\n        return wot.wtOverlays.topOverlay.trimmingContainer;\n      },\n      get inlineStartOverlayTrimmingContainer() {\n        return wot.wtOverlays.inlineStartOverlay.trimmingContainer;\n      },\n      get topScrollPosition() {\n        return wot.wtOverlays.topOverlay.getScrollPosition();\n      },\n      get topParentOffset() {\n        return wot.wtOverlays.topOverlay.getTableParentOffset();\n      },\n      get inlineStartScrollPosition() {\n        return wot.wtOverlays.inlineStartOverlay.getScrollPosition();\n      },\n      get inlineStartParentOffset() {\n        return wot.wtOverlays.inlineStartOverlay.getTableParentOffset();\n      },\n      get topOverlay() {\n        return wot.wtOverlays.topOverlay; // TODO refactoring: move outside dao, use IOC\n      },\n      get inlineStartOverlay() {\n        return wot.wtOverlays.inlineStartOverlay; // TODO refactoring: move outside dao, use IOC\n      },\n      get bottomOverlay() {\n        return wot.wtOverlays.bottomOverlay; // TODO refactoring: move outside dao, use IOC\n      }\n    };\n  }\n}","map":{"version":3,"names":["Event","Overlays","CLONE_TYPES","Settings","MasterTable","Viewport","CoreAbstract","SelectionManager","objectEach","addClass","removeClass","Walkontable","constructor","table","settings","facadeGetter","wtSettings","getSetting","wtTable","getTableDao","domBindings","wtViewport","getViewportDao","eventManager","selectionManager","wtEvent","wtOverlays","exportSettingsAsClassNames","findOriginalHeaders","toExport","rowHeaders","columnHeaders","allClassNames","newClassNames","className","key","length","push","wtRootElement","parentNode","getOverlayByName","overlayName","_this$wtOverlays","includes","camelCaseOverlay","replace","match","toUpperCase","wot","topOverlayTrimmingContainer","topOverlay","trimmingContainer","inlineStartOverlayTrimmingContainer","inlineStartOverlay","topScrollPosition","getScrollPosition","topParentOffset","getTableParentOffset","inlineStartScrollPosition","inlineStartParentOffset","bottomOverlay"],"sources":["D:/gym-project/frontend/node_modules/handsontable/3rdparty/walkontable/src/core/core.mjs"],"sourcesContent":["import \"core-js/modules/es.array.push.js\";\nimport Event from \"../event.mjs\";\nimport Overlays from \"../overlays.mjs\";\nimport { CLONE_TYPES } from \"../overlay/index.mjs\";\nimport Settings from \"../settings.mjs\";\nimport MasterTable from \"../table/master.mjs\";\nimport Viewport from \"../viewport.mjs\";\nimport CoreAbstract from \"./_base.mjs\";\nimport { SelectionManager } from \"../selection/manager.mjs\";\nimport { objectEach } from \"../../../../helpers/object.mjs\";\nimport { addClass, removeClass } from \"../../../../helpers/dom/element.mjs\";\n/**\n * @class Walkontable\n */\nexport default class Walkontable extends CoreAbstract {\n  /**\n   * @param {HTMLTableElement} table Main table.\n   * @param {SettingsPure} settings The Walkontable settings.\n   */\n  constructor(table, settings) {\n    super(table, new Settings(settings));\n    const facadeGetter = this.wtSettings.getSetting('facade', this); // todo rethink. I would like to have no access to facade from the internal scope.\n\n    this.wtTable = new MasterTable(this.getTableDao(), facadeGetter, this.domBindings, this.wtSettings);\n    this.wtViewport = new Viewport(this.getViewportDao(), this.domBindings, this.wtSettings, this.eventManager, this.wtTable);\n    this.selectionManager = new SelectionManager(this.wtSettings.getSetting('selections'));\n    this.wtEvent = new Event(facadeGetter, this.domBindings, this.wtSettings, this.eventManager, this.wtTable, this.selectionManager);\n    this.wtOverlays = new Overlays(\n    // TODO create DAO and remove reference to the Walkontable instance.\n    this, facadeGetter, this.domBindings, this.wtSettings, this.eventManager, this.wtTable);\n    this.exportSettingsAsClassNames();\n    this.findOriginalHeaders();\n  }\n\n  /**\n   * Export settings as class names added to the parent element of the table.\n   */\n  exportSettingsAsClassNames() {\n    const toExport = {\n      rowHeaders: 'htRowHeaders',\n      columnHeaders: 'htColumnHeaders'\n    };\n    const allClassNames = [];\n    const newClassNames = [];\n    objectEach(toExport, (className, key) => {\n      if (this.wtSettings.getSetting(key).length) {\n        newClassNames.push(className);\n      }\n      allClassNames.push(className);\n    });\n    removeClass(this.wtTable.wtRootElement.parentNode, allClassNames);\n    addClass(this.wtTable.wtRootElement.parentNode, newClassNames);\n  }\n\n  /**\n   * Gets the overlay instance by its name.\n   *\n   * @param {'inline_start'|'top'|'top_inline_start_corner'|'bottom'|'bottom_inline_start_corner'} overlayName The overlay name.\n   * @returns {Overlay | null}\n   */\n  getOverlayByName(overlayName) {\n    var _this$wtOverlays;\n    if (!CLONE_TYPES.includes(overlayName)) {\n      return null;\n    }\n    const camelCaseOverlay = overlayName.replace(/_([a-z])/g, match => match[1].toUpperCase());\n    return (_this$wtOverlays = this.wtOverlays[`${camelCaseOverlay}Overlay`]) !== null && _this$wtOverlays !== void 0 ? _this$wtOverlays : null;\n  }\n\n  /**\n   * @returns {ViewportDao}\n   */\n  getViewportDao() {\n    const wot = this;\n    return {\n      get wot() {\n        return wot;\n      },\n      get topOverlayTrimmingContainer() {\n        return wot.wtOverlays.topOverlay.trimmingContainer;\n      },\n      get inlineStartOverlayTrimmingContainer() {\n        return wot.wtOverlays.inlineStartOverlay.trimmingContainer;\n      },\n      get topScrollPosition() {\n        return wot.wtOverlays.topOverlay.getScrollPosition();\n      },\n      get topParentOffset() {\n        return wot.wtOverlays.topOverlay.getTableParentOffset();\n      },\n      get inlineStartScrollPosition() {\n        return wot.wtOverlays.inlineStartOverlay.getScrollPosition();\n      },\n      get inlineStartParentOffset() {\n        return wot.wtOverlays.inlineStartOverlay.getTableParentOffset();\n      },\n      get topOverlay() {\n        return wot.wtOverlays.topOverlay; // TODO refactoring: move outside dao, use IOC\n      },\n      get inlineStartOverlay() {\n        return wot.wtOverlays.inlineStartOverlay; // TODO refactoring: move outside dao, use IOC\n      },\n      get bottomOverlay() {\n        return wot.wtOverlays.bottomOverlay; // TODO refactoring: move outside dao, use IOC\n      }\n    };\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}