{"ast":null,"code":"function _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n/**\n * Row utils class contains all necessary information about sizes of the rows.\n *\n * @class {RowUtils}\n */\nexport default class RowUtils {\n  /**\n   * @param {TableDao} dataAccessObject The table Data Access Object.\n   * @param {Settings} wtSettings The walkontable settings.\n   */\n  constructor(dataAccessObject, wtSettings) {\n    /**\n     * @type {TableDao}\n     */\n    _defineProperty(this, \"dataAccessObject\", void 0);\n    /**\n     * @type {Settings}\n     */\n    _defineProperty(this, \"wtSettings\", void 0);\n    this.dataAccessObject = dataAccessObject;\n    this.wtSettings = wtSettings;\n  }\n\n  /**\n   * Returns row height based on passed source index.\n   *\n   * @param {number} sourceIndex Row source index.\n   * @returns {number}\n   */\n  getHeight(sourceIndex) {\n    let height = this.wtSettings.getSetting('rowHeight', sourceIndex);\n    const oversizedHeight = this.dataAccessObject.wtViewport.oversizedRows[sourceIndex];\n    if (oversizedHeight !== undefined) {\n      height = height === undefined ? oversizedHeight : Math.max(height, oversizedHeight);\n    }\n    return height;\n  }\n\n  /**\n   * Returns row height based on passed source index for the specified overlay type.\n   *\n   * @param {number} sourceIndex Row source index.\n   * @param {'inline_start'|'top'|'top_inline_start_corner'|'bottom'|'bottom_inline_start_corner'|'master'} overlayName The overlay name.\n   * @returns {number}\n   */\n  getHeightByOverlayName(sourceIndex, overlayName) {\n    let height = this.wtSettings.getSetting('rowHeightByOverlayName', sourceIndex, overlayName);\n    const oversizedHeight = this.dataAccessObject.wtViewport.oversizedRows[sourceIndex];\n    if (oversizedHeight !== undefined) {\n      height = height === undefined ? oversizedHeight : Math.max(height, oversizedHeight);\n    }\n    return height;\n  }\n}","map":{"version":3,"names":["_defineProperty","e","r","t","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","RowUtils","constructor","dataAccessObject","wtSettings","getHeight","sourceIndex","height","getSetting","oversizedHeight","wtViewport","oversizedRows","undefined","Math","max","getHeightByOverlayName","overlayName"],"sources":["D:/gym-project/frontend/node_modules/handsontable/3rdparty/walkontable/src/utils/row.mjs"],"sourcesContent":["import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * Row utils class contains all necessary information about sizes of the rows.\n *\n * @class {RowUtils}\n */\nexport default class RowUtils {\n  /**\n   * @param {TableDao} dataAccessObject The table Data Access Object.\n   * @param {Settings} wtSettings The walkontable settings.\n   */\n  constructor(dataAccessObject, wtSettings) {\n    /**\n     * @type {TableDao}\n     */\n    _defineProperty(this, \"dataAccessObject\", void 0);\n    /**\n     * @type {Settings}\n     */\n    _defineProperty(this, \"wtSettings\", void 0);\n    this.dataAccessObject = dataAccessObject;\n    this.wtSettings = wtSettings;\n  }\n\n  /**\n   * Returns row height based on passed source index.\n   *\n   * @param {number} sourceIndex Row source index.\n   * @returns {number}\n   */\n  getHeight(sourceIndex) {\n    let height = this.wtSettings.getSetting('rowHeight', sourceIndex);\n    const oversizedHeight = this.dataAccessObject.wtViewport.oversizedRows[sourceIndex];\n    if (oversizedHeight !== undefined) {\n      height = height === undefined ? oversizedHeight : Math.max(height, oversizedHeight);\n    }\n    return height;\n  }\n\n  /**\n   * Returns row height based on passed source index for the specified overlay type.\n   *\n   * @param {number} sourceIndex Row source index.\n   * @param {'inline_start'|'top'|'top_inline_start_corner'|'bottom'|'bottom_inline_start_corner'|'master'} overlayName The overlay name.\n   * @returns {number}\n   */\n  getHeightByOverlayName(sourceIndex, overlayName) {\n    let height = this.wtSettings.getSetting('rowHeightByOverlayName', sourceIndex, overlayName);\n    const oversizedHeight = this.dataAccessObject.wtViewport.oversizedRows[sourceIndex];\n    if (oversizedHeight !== undefined) {\n      height = height === undefined ? oversizedHeight : Math.max(height, oversizedHeight);\n    }\n    return height;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}