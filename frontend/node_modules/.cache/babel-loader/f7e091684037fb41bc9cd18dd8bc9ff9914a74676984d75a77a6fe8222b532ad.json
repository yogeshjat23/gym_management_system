{"ast":null,"code":"/**\n * Prevent other listeners of the same event from being called.\n *\n * @param {Event} event The mouse event object.\n */\nexport function stopImmediatePropagation(event) {\n  event.isImmediatePropagationEnabled = false;\n  event.cancelBubble = true;\n}\n\n/**\n * Check if event was stopped by `stopImmediatePropagation`.\n *\n * @param {Event} event The mouse event object.\n * @returns {boolean}\n */\nexport function isImmediatePropagationStopped(event) {\n  return event.isImmediatePropagationEnabled === false;\n}\n\n/**\n * Check if provided event was triggered by clicking the right mouse button.\n *\n * @param {Event} event The mouse event object.\n * @returns {boolean}\n */\nexport function isRightClick(event) {\n  return event.button === 2;\n}\n\n/**\n * Check if provided event was triggered by clicking the left mouse button.\n *\n * @param {Event} event The mouse event object.\n * @returns {boolean}\n */\nexport function isLeftClick(event) {\n  return event.button === 0;\n}\n\n/**\n * Check if the provided event is a touch event.\n *\n * @param {Event} event The event object.\n * @returns {boolean}\n */\nexport function isTouchEvent(event) {\n  return event instanceof TouchEvent;\n}\n\n/**\n * Calculates the event offset until reaching the element defined by `relativeElement` argument.\n *\n * @param {Event} event The mouse event object.\n * @param {HTMLElement|undefined} [untilElement] The element to which the offset will be calculated.\n * @returns {{ x: number, y: number }}\n */\nexport function offsetRelativeTo(event, untilElement) {\n  const offset = {\n    x: event.offsetX,\n    y: event.offsetY\n  };\n  let element = event.target;\n  if (!(untilElement instanceof HTMLElement) || element !== untilElement && element.contains(untilElement)) {\n    return offset;\n  }\n  while (element !== untilElement) {\n    offset.x += element.offsetLeft;\n    offset.y += element.offsetTop;\n    element = element.offsetParent;\n  }\n  return offset;\n}","map":{"version":3,"names":["stopImmediatePropagation","event","isImmediatePropagationEnabled","cancelBubble","isImmediatePropagationStopped","isRightClick","button","isLeftClick","isTouchEvent","TouchEvent","offsetRelativeTo","untilElement","offset","x","offsetX","y","offsetY","element","target","HTMLElement","contains","offsetLeft","offsetTop","offsetParent"],"sources":["D:/gym-project/frontend/node_modules/handsontable/helpers/dom/event.mjs"],"sourcesContent":["/**\n * Prevent other listeners of the same event from being called.\n *\n * @param {Event} event The mouse event object.\n */\nexport function stopImmediatePropagation(event) {\n  event.isImmediatePropagationEnabled = false;\n  event.cancelBubble = true;\n}\n\n/**\n * Check if event was stopped by `stopImmediatePropagation`.\n *\n * @param {Event} event The mouse event object.\n * @returns {boolean}\n */\nexport function isImmediatePropagationStopped(event) {\n  return event.isImmediatePropagationEnabled === false;\n}\n\n/**\n * Check if provided event was triggered by clicking the right mouse button.\n *\n * @param {Event} event The mouse event object.\n * @returns {boolean}\n */\nexport function isRightClick(event) {\n  return event.button === 2;\n}\n\n/**\n * Check if provided event was triggered by clicking the left mouse button.\n *\n * @param {Event} event The mouse event object.\n * @returns {boolean}\n */\nexport function isLeftClick(event) {\n  return event.button === 0;\n}\n\n/**\n * Check if the provided event is a touch event.\n *\n * @param {Event} event The event object.\n * @returns {boolean}\n */\nexport function isTouchEvent(event) {\n  return event instanceof TouchEvent;\n}\n\n/**\n * Calculates the event offset until reaching the element defined by `relativeElement` argument.\n *\n * @param {Event} event The mouse event object.\n * @param {HTMLElement|undefined} [untilElement] The element to which the offset will be calculated.\n * @returns {{ x: number, y: number }}\n */\nexport function offsetRelativeTo(event, untilElement) {\n  const offset = {\n    x: event.offsetX,\n    y: event.offsetY\n  };\n  let element = event.target;\n  if (!(untilElement instanceof HTMLElement) || element !== untilElement && element.contains(untilElement)) {\n    return offset;\n  }\n  while (element !== untilElement) {\n    offset.x += element.offsetLeft;\n    offset.y += element.offsetTop;\n    element = element.offsetParent;\n  }\n  return offset;\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,wBAAwBA,CAACC,KAAK,EAAE;EAC9CA,KAAK,CAACC,6BAA6B,GAAG,KAAK;EAC3CD,KAAK,CAACE,YAAY,GAAG,IAAI;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,6BAA6BA,CAACH,KAAK,EAAE;EACnD,OAAOA,KAAK,CAACC,6BAA6B,KAAK,KAAK;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,YAAYA,CAACJ,KAAK,EAAE;EAClC,OAAOA,KAAK,CAACK,MAAM,KAAK,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAWA,CAACN,KAAK,EAAE;EACjC,OAAOA,KAAK,CAACK,MAAM,KAAK,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,YAAYA,CAACP,KAAK,EAAE;EAClC,OAAOA,KAAK,YAAYQ,UAAU;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAACT,KAAK,EAAEU,YAAY,EAAE;EACpD,MAAMC,MAAM,GAAG;IACbC,CAAC,EAAEZ,KAAK,CAACa,OAAO;IAChBC,CAAC,EAAEd,KAAK,CAACe;EACX,CAAC;EACD,IAAIC,OAAO,GAAGhB,KAAK,CAACiB,MAAM;EAC1B,IAAI,EAAEP,YAAY,YAAYQ,WAAW,CAAC,IAAIF,OAAO,KAAKN,YAAY,IAAIM,OAAO,CAACG,QAAQ,CAACT,YAAY,CAAC,EAAE;IACxG,OAAOC,MAAM;EACf;EACA,OAAOK,OAAO,KAAKN,YAAY,EAAE;IAC/BC,MAAM,CAACC,CAAC,IAAII,OAAO,CAACI,UAAU;IAC9BT,MAAM,CAACG,CAAC,IAAIE,OAAO,CAACK,SAAS;IAC7BL,OAAO,GAAGA,OAAO,CAACM,YAAY;EAChC;EACA,OAAOX,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}