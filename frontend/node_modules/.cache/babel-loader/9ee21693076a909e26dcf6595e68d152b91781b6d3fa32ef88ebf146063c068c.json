{"ast":null,"code":"/**\n * Scroll strategy for single cell selection.\n *\n * @param {Core} hot Handsontable instance.\n * @returns {function(): function(CellCoords): { row: number, col: number } | void }\n */\nexport function singleScrollStrategy(hot) {\n  return cellCoords => {\n    const selectionSource = hot.selection.getSelectionSource();\n    const {\n      row,\n      col\n    } = cellCoords;\n\n    // navigating through the column headers (when `navigableHeaders` is enabled)\n    // scrolls the viewport horizontally only\n    if (row < 0 && col >= 0) {\n      hot.scrollViewportTo({\n        col\n      });\n\n      // navigating through the row headers (when `navigableHeaders` is enabled)\n      // scrolls the viewport vertically only\n    } else if (col < 0 && row >= 0) {\n      hot.scrollViewportTo({\n        row\n      });\n\n      // navigating through the cells\n    } else {\n      if (selectionSource === 'mouse') {\n        if (col === hot.view.getLastPartiallyVisibleColumn() || row === hot.view.getLastPartiallyVisibleRow()) {\n          return;\n        }\n      }\n      hot.scrollViewportTo({\n        row,\n        col\n      });\n    }\n  };\n}","map":{"version":3,"names":["singleScrollStrategy","hot","cellCoords","selectionSource","selection","getSelectionSource","row","col","scrollViewportTo","view","getLastPartiallyVisibleColumn","getLastPartiallyVisibleRow"],"sources":["D:/gym-project/frontend/node_modules/handsontable/core/viewportScroll/scrollStrategies/singleScroll.mjs"],"sourcesContent":["/**\n * Scroll strategy for single cell selection.\n *\n * @param {Core} hot Handsontable instance.\n * @returns {function(): function(CellCoords): { row: number, col: number } | void }\n */\nexport function singleScrollStrategy(hot) {\n  return cellCoords => {\n    const selectionSource = hot.selection.getSelectionSource();\n    const {\n      row,\n      col\n    } = cellCoords;\n\n    // navigating through the column headers (when `navigableHeaders` is enabled)\n    // scrolls the viewport horizontally only\n    if (row < 0 && col >= 0) {\n      hot.scrollViewportTo({\n        col\n      });\n\n      // navigating through the row headers (when `navigableHeaders` is enabled)\n      // scrolls the viewport vertically only\n    } else if (col < 0 && row >= 0) {\n      hot.scrollViewportTo({\n        row\n      });\n\n      // navigating through the cells\n    } else {\n      if (selectionSource === 'mouse') {\n        if (col === hot.view.getLastPartiallyVisibleColumn() || row === hot.view.getLastPartiallyVisibleRow()) {\n          return;\n        }\n      }\n      hot.scrollViewportTo({\n        row,\n        col\n      });\n    }\n  };\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,oBAAoBA,CAACC,GAAG,EAAE;EACxC,OAAOC,UAAU,IAAI;IACnB,MAAMC,eAAe,GAAGF,GAAG,CAACG,SAAS,CAACC,kBAAkB,CAAC,CAAC;IAC1D,MAAM;MACJC,GAAG;MACHC;IACF,CAAC,GAAGL,UAAU;;IAEd;IACA;IACA,IAAII,GAAG,GAAG,CAAC,IAAIC,GAAG,IAAI,CAAC,EAAE;MACvBN,GAAG,CAACO,gBAAgB,CAAC;QACnBD;MACF,CAAC,CAAC;;MAEF;MACA;IACF,CAAC,MAAM,IAAIA,GAAG,GAAG,CAAC,IAAID,GAAG,IAAI,CAAC,EAAE;MAC9BL,GAAG,CAACO,gBAAgB,CAAC;QACnBF;MACF,CAAC,CAAC;;MAEF;IACF,CAAC,MAAM;MACL,IAAIH,eAAe,KAAK,OAAO,EAAE;QAC/B,IAAII,GAAG,KAAKN,GAAG,CAACQ,IAAI,CAACC,6BAA6B,CAAC,CAAC,IAAIJ,GAAG,KAAKL,GAAG,CAACQ,IAAI,CAACE,0BAA0B,CAAC,CAAC,EAAE;UACrG;QACF;MACF;MACAV,GAAG,CAACO,gBAAgB,CAAC;QACnBF,GAAG;QACHC;MACF,CAAC,CAAC;IACJ;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}