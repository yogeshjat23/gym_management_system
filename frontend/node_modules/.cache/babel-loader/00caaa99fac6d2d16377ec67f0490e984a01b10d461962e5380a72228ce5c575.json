{"ast":null,"code":"import * as C from \"../../../i18n/constants.mjs\";\nimport MergedCellCoords from \"../cellCoords.mjs\";\n/**\n * @param {*} plugin The plugin instance.\n * @returns {object}\n */\nexport default function toggleMergeItem(plugin) {\n  return {\n    key: 'mergeCells',\n    name() {\n      const sel = this.getSelectedLast();\n      if (sel) {\n        const info = plugin.mergedCellsCollection.get(sel[0], sel[1]);\n        if (info.row === sel[0] && info.col === sel[1] && info.row + info.rowspan - 1 === sel[2] && info.col + info.colspan - 1 === sel[3]) {\n          return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_UNMERGE_CELLS);\n        }\n      }\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_MERGE_CELLS);\n    },\n    callback() {\n      const currentRange = this.getSelectedRangeLast();\n      if (!currentRange) {\n        return;\n      }\n      currentRange.setDirection(this.isRtl() ? 'NE-SW' : 'NW-SE');\n      const {\n        from,\n        to\n      } = currentRange;\n      plugin.toggleMerge(currentRange);\n      this.selectCell(from.row, from.col, to.row, to.col, false);\n    },\n    disabled() {\n      const sel = this.getSelectedLast();\n      if (!sel) {\n        return true;\n      }\n      const isSingleCell = MergedCellCoords.isSingleCell({\n        row: sel[0],\n        col: sel[1],\n        rowspan: sel[2] - sel[0] + 1,\n        colspan: sel[3] - sel[1] + 1\n      });\n      return isSingleCell || this.selection.isSelectedByCorner();\n    },\n    hidden: false\n  };\n}","map":{"version":3,"names":["C","MergedCellCoords","toggleMergeItem","plugin","key","name","sel","getSelectedLast","info","mergedCellsCollection","get","row","col","rowspan","colspan","getTranslatedPhrase","CONTEXTMENU_ITEMS_UNMERGE_CELLS","CONTEXTMENU_ITEMS_MERGE_CELLS","callback","currentRange","getSelectedRangeLast","setDirection","isRtl","from","to","toggleMerge","selectCell","disabled","isSingleCell","selection","isSelectedByCorner","hidden"],"sources":["D:/gym-project/frontend/node_modules/handsontable/plugins/mergeCells/contextMenuItem/toggleMerge.mjs"],"sourcesContent":["import * as C from \"../../../i18n/constants.mjs\";\nimport MergedCellCoords from \"../cellCoords.mjs\";\n/**\n * @param {*} plugin The plugin instance.\n * @returns {object}\n */\nexport default function toggleMergeItem(plugin) {\n  return {\n    key: 'mergeCells',\n    name() {\n      const sel = this.getSelectedLast();\n      if (sel) {\n        const info = plugin.mergedCellsCollection.get(sel[0], sel[1]);\n        if (info.row === sel[0] && info.col === sel[1] && info.row + info.rowspan - 1 === sel[2] && info.col + info.colspan - 1 === sel[3]) {\n          return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_UNMERGE_CELLS);\n        }\n      }\n      return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_MERGE_CELLS);\n    },\n    callback() {\n      const currentRange = this.getSelectedRangeLast();\n      if (!currentRange) {\n        return;\n      }\n      currentRange.setDirection(this.isRtl() ? 'NE-SW' : 'NW-SE');\n      const {\n        from,\n        to\n      } = currentRange;\n      plugin.toggleMerge(currentRange);\n      this.selectCell(from.row, from.col, to.row, to.col, false);\n    },\n    disabled() {\n      const sel = this.getSelectedLast();\n      if (!sel) {\n        return true;\n      }\n      const isSingleCell = MergedCellCoords.isSingleCell({\n        row: sel[0],\n        col: sel[1],\n        rowspan: sel[2] - sel[0] + 1,\n        colspan: sel[3] - sel[1] + 1\n      });\n      return isSingleCell || this.selection.isSelectedByCorner();\n    },\n    hidden: false\n  };\n}"],"mappings":"AAAA,OAAO,KAAKA,CAAC,MAAM,6BAA6B;AAChD,OAAOC,gBAAgB,MAAM,mBAAmB;AAChD;AACA;AACA;AACA;AACA,eAAe,SAASC,eAAeA,CAACC,MAAM,EAAE;EAC9C,OAAO;IACLC,GAAG,EAAE,YAAY;IACjBC,IAAIA,CAAA,EAAG;MACL,MAAMC,GAAG,GAAG,IAAI,CAACC,eAAe,CAAC,CAAC;MAClC,IAAID,GAAG,EAAE;QACP,MAAME,IAAI,GAAGL,MAAM,CAACM,qBAAqB,CAACC,GAAG,CAACJ,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,CAAC;QAC7D,IAAIE,IAAI,CAACG,GAAG,KAAKL,GAAG,CAAC,CAAC,CAAC,IAAIE,IAAI,CAACI,GAAG,KAAKN,GAAG,CAAC,CAAC,CAAC,IAAIE,IAAI,CAACG,GAAG,GAAGH,IAAI,CAACK,OAAO,GAAG,CAAC,KAAKP,GAAG,CAAC,CAAC,CAAC,IAAIE,IAAI,CAACI,GAAG,GAAGJ,IAAI,CAACM,OAAO,GAAG,CAAC,KAAKR,GAAG,CAAC,CAAC,CAAC,EAAE;UAClI,OAAO,IAAI,CAACS,mBAAmB,CAACf,CAAC,CAACgB,+BAA+B,CAAC;QACpE;MACF;MACA,OAAO,IAAI,CAACD,mBAAmB,CAACf,CAAC,CAACiB,6BAA6B,CAAC;IAClE,CAAC;IACDC,QAAQA,CAAA,EAAG;MACT,MAAMC,YAAY,GAAG,IAAI,CAACC,oBAAoB,CAAC,CAAC;MAChD,IAAI,CAACD,YAAY,EAAE;QACjB;MACF;MACAA,YAAY,CAACE,YAAY,CAAC,IAAI,CAACC,KAAK,CAAC,CAAC,GAAG,OAAO,GAAG,OAAO,CAAC;MAC3D,MAAM;QACJC,IAAI;QACJC;MACF,CAAC,GAAGL,YAAY;MAChBhB,MAAM,CAACsB,WAAW,CAACN,YAAY,CAAC;MAChC,IAAI,CAACO,UAAU,CAACH,IAAI,CAACZ,GAAG,EAAEY,IAAI,CAACX,GAAG,EAAEY,EAAE,CAACb,GAAG,EAAEa,EAAE,CAACZ,GAAG,EAAE,KAAK,CAAC;IAC5D,CAAC;IACDe,QAAQA,CAAA,EAAG;MACT,MAAMrB,GAAG,GAAG,IAAI,CAACC,eAAe,CAAC,CAAC;MAClC,IAAI,CAACD,GAAG,EAAE;QACR,OAAO,IAAI;MACb;MACA,MAAMsB,YAAY,GAAG3B,gBAAgB,CAAC2B,YAAY,CAAC;QACjDjB,GAAG,EAAEL,GAAG,CAAC,CAAC,CAAC;QACXM,GAAG,EAAEN,GAAG,CAAC,CAAC,CAAC;QACXO,OAAO,EAAEP,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QAC5BQ,OAAO,EAAER,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAG;MAC7B,CAAC,CAAC;MACF,OAAOsB,YAAY,IAAI,IAAI,CAACC,SAAS,CAACC,kBAAkB,CAAC,CAAC;IAC5D,CAAC;IACDC,MAAM,EAAE;EACV,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}