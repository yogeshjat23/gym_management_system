{"ast":null,"code":"function _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { SharedOrderView } from \"./../utils/orderView/index.mjs\";\nimport BaseRenderer from \"./_base.mjs\";\nimport { setAttribute, removeAttribute } from \"../../../../helpers/dom/element.mjs\";\nimport { A11Y_COLINDEX, A11Y_ROWHEADER, A11Y_SCOPE_ROW, A11Y_TABINDEX } from \"../../../../helpers/a11y.mjs\";\n/**\n * Row headers renderer responsible for managing (inserting, tracking, rendering) TR elements belongs to TR.\n *\n *   <tr> (root node)\n *     ├ <th>   --- RowHeadersRenderer\n *     ├ <td>   \\\n *     ├ <td>    \\\n *     ├ <td>     - CellsRenderer\n *     ├ <td>    /\n *     └ <td>   /.\n *\n * @class {CellsRenderer}\n */\nexport default class RowHeadersRenderer extends BaseRenderer {\n  constructor() {\n    super('TH');\n    /**\n     * Cache for OrderView classes connected to specified node.\n     *\n     * @type {WeakMap}\n     */\n    _defineProperty(this, \"orderViews\", new WeakMap());\n    /**\n     * Row index which specifies the row position of the processed row header.\n     *\n     * @type {number}\n     */\n    _defineProperty(this, \"sourceRowIndex\", 0);\n  }\n\n  /**\n   * Obtains the instance of the SharedOrderView class which is responsible for rendering the nodes to the root node.\n   *\n   * @param {HTMLTableRowElement} rootNode The TR element, which is root element for row headers (TH).\n   * @returns {SharedOrderView}\n   */\n  obtainOrderView(rootNode) {\n    let orderView;\n    if (this.orderViews.has(rootNode)) {\n      orderView = this.orderViews.get(rootNode);\n    } else {\n      orderView = new SharedOrderView(rootNode, sourceColumnIndex => this.nodesPool.obtain(this.sourceRowIndex, sourceColumnIndex), this.nodeType);\n      this.orderViews.set(rootNode, orderView);\n    }\n    return orderView;\n  }\n\n  /**\n   * Renders the cells.\n   */\n  render() {\n    const {\n      rowsToRender,\n      rowHeaderFunctions,\n      rowHeadersCount,\n      rows,\n      cells\n    } = this.table;\n    for (let visibleRowIndex = 0; visibleRowIndex < rowsToRender; visibleRowIndex++) {\n      const sourceRowIndex = this.table.renderedRowToSource(visibleRowIndex);\n      const TR = rows.getRenderedNode(visibleRowIndex);\n      this.sourceRowIndex = sourceRowIndex;\n      const orderView = this.obtainOrderView(TR);\n      const cellsView = cells.obtainOrderView(TR);\n      orderView.appendView(cellsView).setSize(rowHeadersCount).setOffset(this.table.renderedColumnToSource(0)).start();\n      for (let visibleColumnIndex = 0; visibleColumnIndex < rowHeadersCount; visibleColumnIndex++) {\n        orderView.render();\n        const TH = orderView.getCurrentNode();\n        TH.className = '';\n        TH.removeAttribute('style');\n\n        // Remove all accessibility-related attributes for the header to start fresh.\n        removeAttribute(TH, [new RegExp('aria-(.*)'), new RegExp('role')]);\n        if (this.table.isAriaEnabled()) {\n          setAttribute(TH, [A11Y_ROWHEADER(), A11Y_SCOPE_ROW(), A11Y_COLINDEX(visibleColumnIndex + 1), A11Y_TABINDEX(-1)]);\n        }\n        rowHeaderFunctions[visibleColumnIndex](sourceRowIndex, TH, visibleColumnIndex);\n      }\n      orderView.end();\n    }\n  }\n}","map":{"version":3,"names":["_defineProperty","e","r","t","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","SharedOrderView","BaseRenderer","setAttribute","removeAttribute","A11Y_COLINDEX","A11Y_ROWHEADER","A11Y_SCOPE_ROW","A11Y_TABINDEX","RowHeadersRenderer","constructor","WeakMap","obtainOrderView","rootNode","orderView","orderViews","has","get","sourceColumnIndex","nodesPool","obtain","sourceRowIndex","nodeType","set","render","rowsToRender","rowHeaderFunctions","rowHeadersCount","rows","cells","table","visibleRowIndex","renderedRowToSource","TR","getRenderedNode","cellsView","appendView","setSize","setOffset","renderedColumnToSource","start","visibleColumnIndex","TH","getCurrentNode","className","RegExp","isAriaEnabled","end"],"sources":["D:/gym-project/frontend/node_modules/handsontable/3rdparty/walkontable/src/renderer/rowHeaders.mjs"],"sourcesContent":["import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { SharedOrderView } from \"./../utils/orderView/index.mjs\";\nimport BaseRenderer from \"./_base.mjs\";\nimport { setAttribute, removeAttribute } from \"../../../../helpers/dom/element.mjs\";\nimport { A11Y_COLINDEX, A11Y_ROWHEADER, A11Y_SCOPE_ROW, A11Y_TABINDEX } from \"../../../../helpers/a11y.mjs\";\n/**\n * Row headers renderer responsible for managing (inserting, tracking, rendering) TR elements belongs to TR.\n *\n *   <tr> (root node)\n *     ├ <th>   --- RowHeadersRenderer\n *     ├ <td>   \\\n *     ├ <td>    \\\n *     ├ <td>     - CellsRenderer\n *     ├ <td>    /\n *     └ <td>   /.\n *\n * @class {CellsRenderer}\n */\nexport default class RowHeadersRenderer extends BaseRenderer {\n  constructor() {\n    super('TH');\n    /**\n     * Cache for OrderView classes connected to specified node.\n     *\n     * @type {WeakMap}\n     */\n    _defineProperty(this, \"orderViews\", new WeakMap());\n    /**\n     * Row index which specifies the row position of the processed row header.\n     *\n     * @type {number}\n     */\n    _defineProperty(this, \"sourceRowIndex\", 0);\n  }\n\n  /**\n   * Obtains the instance of the SharedOrderView class which is responsible for rendering the nodes to the root node.\n   *\n   * @param {HTMLTableRowElement} rootNode The TR element, which is root element for row headers (TH).\n   * @returns {SharedOrderView}\n   */\n  obtainOrderView(rootNode) {\n    let orderView;\n    if (this.orderViews.has(rootNode)) {\n      orderView = this.orderViews.get(rootNode);\n    } else {\n      orderView = new SharedOrderView(rootNode, sourceColumnIndex => this.nodesPool.obtain(this.sourceRowIndex, sourceColumnIndex), this.nodeType);\n      this.orderViews.set(rootNode, orderView);\n    }\n    return orderView;\n  }\n\n  /**\n   * Renders the cells.\n   */\n  render() {\n    const {\n      rowsToRender,\n      rowHeaderFunctions,\n      rowHeadersCount,\n      rows,\n      cells\n    } = this.table;\n    for (let visibleRowIndex = 0; visibleRowIndex < rowsToRender; visibleRowIndex++) {\n      const sourceRowIndex = this.table.renderedRowToSource(visibleRowIndex);\n      const TR = rows.getRenderedNode(visibleRowIndex);\n      this.sourceRowIndex = sourceRowIndex;\n      const orderView = this.obtainOrderView(TR);\n      const cellsView = cells.obtainOrderView(TR);\n      orderView.appendView(cellsView).setSize(rowHeadersCount).setOffset(this.table.renderedColumnToSource(0)).start();\n      for (let visibleColumnIndex = 0; visibleColumnIndex < rowHeadersCount; visibleColumnIndex++) {\n        orderView.render();\n        const TH = orderView.getCurrentNode();\n        TH.className = '';\n        TH.removeAttribute('style');\n\n        // Remove all accessibility-related attributes for the header to start fresh.\n        removeAttribute(TH, [new RegExp('aria-(.*)'), new RegExp('role')]);\n        if (this.table.isAriaEnabled()) {\n          setAttribute(TH, [A11Y_ROWHEADER(), A11Y_SCOPE_ROW(), A11Y_COLINDEX(visibleColumnIndex + 1), A11Y_TABINDEX(-1)]);\n        }\n        rowHeaderFunctions[visibleColumnIndex](sourceRowIndex, TH, visibleColumnIndex);\n      }\n      orderView.end();\n    }\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}