{"ast":null,"code":"export const command = {\n  name: 'moveCellSelectionToMostInlineStart',\n  callback(hot) {\n    const {\n      selection,\n      columnIndexMapper\n    } = hot;\n    const fixedColumns = parseInt(hot.getSettings().fixedColumnsStart, 10);\n    const row = hot.getSelectedRangeLast().highlight.row;\n    const column = columnIndexMapper.getNearestNotHiddenIndex(fixedColumns, 1);\n    selection.setRangeStart(hot._createCellCoords(row, column));\n  }\n};","map":{"version":3,"names":["command","name","callback","hot","selection","columnIndexMapper","fixedColumns","parseInt","getSettings","fixedColumnsStart","row","getSelectedRangeLast","highlight","column","getNearestNotHiddenIndex","setRangeStart","_createCellCoords"],"sources":["D:/gym-project/frontend/node_modules/handsontable/shortcutContexts/commands/moveCellSelection/toMostInlineStart.mjs"],"sourcesContent":["export const command = {\n  name: 'moveCellSelectionToMostInlineStart',\n  callback(hot) {\n    const {\n      selection,\n      columnIndexMapper\n    } = hot;\n    const fixedColumns = parseInt(hot.getSettings().fixedColumnsStart, 10);\n    const row = hot.getSelectedRangeLast().highlight.row;\n    const column = columnIndexMapper.getNearestNotHiddenIndex(fixedColumns, 1);\n    selection.setRangeStart(hot._createCellCoords(row, column));\n  }\n};"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG;EACrBC,IAAI,EAAE,oCAAoC;EAC1CC,QAAQA,CAACC,GAAG,EAAE;IACZ,MAAM;MACJC,SAAS;MACTC;IACF,CAAC,GAAGF,GAAG;IACP,MAAMG,YAAY,GAAGC,QAAQ,CAACJ,GAAG,CAACK,WAAW,CAAC,CAAC,CAACC,iBAAiB,EAAE,EAAE,CAAC;IACtE,MAAMC,GAAG,GAAGP,GAAG,CAACQ,oBAAoB,CAAC,CAAC,CAACC,SAAS,CAACF,GAAG;IACpD,MAAMG,MAAM,GAAGR,iBAAiB,CAACS,wBAAwB,CAACR,YAAY,EAAE,CAAC,CAAC;IAC1EF,SAAS,CAACW,aAAa,CAACZ,GAAG,CAACa,iBAAiB,CAACN,GAAG,EAAEG,MAAM,CAAC,CAAC;EAC7D;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}