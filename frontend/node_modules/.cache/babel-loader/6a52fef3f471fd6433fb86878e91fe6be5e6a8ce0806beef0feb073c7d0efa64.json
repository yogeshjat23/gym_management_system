{"ast":null,"code":"function _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport BaseRenderer from \"./_base.mjs\";\nimport { warn } from \"./../../../../helpers/console.mjs\";\nimport { toSingleLine } from \"./../../../../helpers/templateLiteralTag.mjs\";\nimport { OrderView } from \"./../utils/orderView/index.mjs\";\nimport { setAttribute } from \"../../../../helpers/dom/element.mjs\";\nimport { A11Y_ROW, A11Y_ROWGROUP, A11Y_ROWINDEX } from \"../../../../helpers/a11y.mjs\";\nlet performanceWarningAppeared = false;\n\n/**\n * Rows renderer responsible for managing (inserting, tracking, rendering) TR elements belongs to TBODY.\n *\n *   <tbody> (root node)\n *     ├ <tr>   \\\n *     ├ <tr>    \\\n *     ├ <tr>     - RowsRenderer\n *     ├ <tr>    /\n *     └ <tr>   /.\n *\n * @class {RowsRenderer}\n */\nexport default class RowsRenderer extends BaseRenderer {\n  constructor(rootNode) {\n    super('TR', rootNode);\n    /**\n     * Cache for OrderView classes connected to specified node.\n     *\n     * @type {WeakMap}\n     */\n    _defineProperty(this, \"orderView\", void 0);\n    this.orderView = new OrderView(rootNode, sourceRowIndex => this.nodesPool.obtain(sourceRowIndex), this.nodeType);\n  }\n\n  /**\n   * Returns currently rendered node.\n   *\n   * @param {string} visualIndex Visual index of the rendered node (it always goeas from 0 to N).\n   * @returns {HTMLTableRowElement}\n   */\n  getRenderedNode(visualIndex) {\n    return this.orderView.getNode(visualIndex);\n  }\n\n  /**\n   * Renders the cells.\n   */\n  render() {\n    const {\n      rowsToRender\n    } = this.table;\n    if (!performanceWarningAppeared && rowsToRender > 1000) {\n      performanceWarningAppeared = true;\n      warn(toSingleLine`Performance tip: Handsontable rendered more than 1000 visible rows.\\x20\n        Consider limiting the number of rendered rows by specifying the table height and/or\\x20\n        turning off the \"renderAllRows\" option.`);\n    }\n    if (this.table.isAriaEnabled()) {\n      setAttribute(this.rootNode, [A11Y_ROWGROUP()]);\n    }\n    this.orderView.setSize(rowsToRender).setOffset(this.table.renderedRowToSource(0)).start();\n    for (let visibleRowIndex = 0; visibleRowIndex < rowsToRender; visibleRowIndex++) {\n      this.orderView.render();\n      const TR = this.orderView.getCurrentNode();\n      const sourceRowIndex = this.table.renderedRowToSource(visibleRowIndex);\n      if (this.table.isAriaEnabled()) {\n        var _this$table$rowUtils$, _this$table$rowUtils;\n        setAttribute(TR, [A11Y_ROW(),\n        // `aria-rowindex` is incremented by both tbody and thead rows.\n        A11Y_ROWINDEX(sourceRowIndex + ((_this$table$rowUtils$ = (_this$table$rowUtils = this.table.rowUtils) === null || _this$table$rowUtils === void 0 || (_this$table$rowUtils = _this$table$rowUtils.dataAccessObject) === null || _this$table$rowUtils === void 0 ? void 0 : _this$table$rowUtils.columnHeaders.length) !== null && _this$table$rowUtils$ !== void 0 ? _this$table$rowUtils$ : 0) + 1)]);\n      }\n    }\n    this.orderView.end();\n  }\n}","map":{"version":3,"names":["_defineProperty","e","r","t","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","BaseRenderer","warn","toSingleLine","OrderView","setAttribute","A11Y_ROW","A11Y_ROWGROUP","A11Y_ROWINDEX","performanceWarningAppeared","RowsRenderer","constructor","rootNode","orderView","sourceRowIndex","nodesPool","obtain","nodeType","getRenderedNode","visualIndex","getNode","render","rowsToRender","table","isAriaEnabled","setSize","setOffset","renderedRowToSource","start","visibleRowIndex","TR","getCurrentNode","_this$table$rowUtils$","_this$table$rowUtils","rowUtils","dataAccessObject","columnHeaders","length","end"],"sources":["D:/gym-project/frontend/node_modules/handsontable/3rdparty/walkontable/src/renderer/rows.mjs"],"sourcesContent":["import \"core-js/modules/es.error.cause.js\";\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport BaseRenderer from \"./_base.mjs\";\nimport { warn } from \"./../../../../helpers/console.mjs\";\nimport { toSingleLine } from \"./../../../../helpers/templateLiteralTag.mjs\";\nimport { OrderView } from \"./../utils/orderView/index.mjs\";\nimport { setAttribute } from \"../../../../helpers/dom/element.mjs\";\nimport { A11Y_ROW, A11Y_ROWGROUP, A11Y_ROWINDEX } from \"../../../../helpers/a11y.mjs\";\nlet performanceWarningAppeared = false;\n\n/**\n * Rows renderer responsible for managing (inserting, tracking, rendering) TR elements belongs to TBODY.\n *\n *   <tbody> (root node)\n *     ├ <tr>   \\\n *     ├ <tr>    \\\n *     ├ <tr>     - RowsRenderer\n *     ├ <tr>    /\n *     └ <tr>   /.\n *\n * @class {RowsRenderer}\n */\nexport default class RowsRenderer extends BaseRenderer {\n  constructor(rootNode) {\n    super('TR', rootNode);\n    /**\n     * Cache for OrderView classes connected to specified node.\n     *\n     * @type {WeakMap}\n     */\n    _defineProperty(this, \"orderView\", void 0);\n    this.orderView = new OrderView(rootNode, sourceRowIndex => this.nodesPool.obtain(sourceRowIndex), this.nodeType);\n  }\n\n  /**\n   * Returns currently rendered node.\n   *\n   * @param {string} visualIndex Visual index of the rendered node (it always goeas from 0 to N).\n   * @returns {HTMLTableRowElement}\n   */\n  getRenderedNode(visualIndex) {\n    return this.orderView.getNode(visualIndex);\n  }\n\n  /**\n   * Renders the cells.\n   */\n  render() {\n    const {\n      rowsToRender\n    } = this.table;\n    if (!performanceWarningAppeared && rowsToRender > 1000) {\n      performanceWarningAppeared = true;\n      warn(toSingleLine`Performance tip: Handsontable rendered more than 1000 visible rows.\\x20\n        Consider limiting the number of rendered rows by specifying the table height and/or\\x20\n        turning off the \"renderAllRows\" option.`);\n    }\n    if (this.table.isAriaEnabled()) {\n      setAttribute(this.rootNode, [A11Y_ROWGROUP()]);\n    }\n    this.orderView.setSize(rowsToRender).setOffset(this.table.renderedRowToSource(0)).start();\n    for (let visibleRowIndex = 0; visibleRowIndex < rowsToRender; visibleRowIndex++) {\n      this.orderView.render();\n      const TR = this.orderView.getCurrentNode();\n      const sourceRowIndex = this.table.renderedRowToSource(visibleRowIndex);\n      if (this.table.isAriaEnabled()) {\n        var _this$table$rowUtils$, _this$table$rowUtils;\n        setAttribute(TR, [A11Y_ROW(),\n        // `aria-rowindex` is incremented by both tbody and thead rows.\n        A11Y_ROWINDEX(sourceRowIndex + ((_this$table$rowUtils$ = (_this$table$rowUtils = this.table.rowUtils) === null || _this$table$rowUtils === void 0 || (_this$table$rowUtils = _this$table$rowUtils.dataAccessObject) === null || _this$table$rowUtils === void 0 ? void 0 : _this$table$rowUtils.columnHeaders.length) !== null && _this$table$rowUtils$ !== void 0 ? _this$table$rowUtils$ : 0) + 1)]);\n      }\n    }\n    this.orderView.end();\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}