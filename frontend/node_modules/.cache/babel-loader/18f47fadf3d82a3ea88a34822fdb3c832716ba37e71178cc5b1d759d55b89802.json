{"ast":null,"code":"import { BaseEditor } from \"../baseEditor/index.mjs\";\nimport { hasClass } from \"../../helpers/dom/element.mjs\";\nexport const EDITOR_TYPE = 'checkbox';\n\n/**\n * @private\n * @class CheckboxEditor\n */\nexport class CheckboxEditor extends BaseEditor {\n  static get EDITOR_TYPE() {\n    return EDITOR_TYPE;\n  }\n  beginEditing(initialValue, event) {\n    // Just some events connected with the checkbox editor are delegated here. Some `keydown` events like `enter` and\n    // `space` key presses are handled inside `checkboxRenderer`. Some events come here from `editorManager`. The below\n    // `if` statement was created by the author for the purpose of handling only the `doubleclick` event on the TD\n    // element with a checkbox.\n\n    if (event && event.type === 'mouseup' && event.target.nodeName === 'TD') {\n      const checkbox = this.TD.querySelector('input[type=\"checkbox\"]');\n      if (!hasClass(checkbox, 'htBadValue')) {\n        checkbox.click();\n      }\n    }\n  }\n  finishEditing() {}\n  init() {}\n  open() {}\n  close() {}\n  getValue() {}\n  setValue() {}\n  focus() {}\n}","map":{"version":3,"names":["BaseEditor","hasClass","EDITOR_TYPE","CheckboxEditor","beginEditing","initialValue","event","type","target","nodeName","checkbox","TD","querySelector","click","finishEditing","init","open","close","getValue","setValue","focus"],"sources":["D:/gym-project/frontend/node_modules/handsontable/editors/checkboxEditor/checkboxEditor.mjs"],"sourcesContent":["import { BaseEditor } from \"../baseEditor/index.mjs\";\nimport { hasClass } from \"../../helpers/dom/element.mjs\";\nexport const EDITOR_TYPE = 'checkbox';\n\n/**\n * @private\n * @class CheckboxEditor\n */\nexport class CheckboxEditor extends BaseEditor {\n  static get EDITOR_TYPE() {\n    return EDITOR_TYPE;\n  }\n  beginEditing(initialValue, event) {\n    // Just some events connected with the checkbox editor are delegated here. Some `keydown` events like `enter` and\n    // `space` key presses are handled inside `checkboxRenderer`. Some events come here from `editorManager`. The below\n    // `if` statement was created by the author for the purpose of handling only the `doubleclick` event on the TD\n    // element with a checkbox.\n\n    if (event && event.type === 'mouseup' && event.target.nodeName === 'TD') {\n      const checkbox = this.TD.querySelector('input[type=\"checkbox\"]');\n      if (!hasClass(checkbox, 'htBadValue')) {\n        checkbox.click();\n      }\n    }\n  }\n  finishEditing() {}\n  init() {}\n  open() {}\n  close() {}\n  getValue() {}\n  setValue() {}\n  focus() {}\n}"],"mappings":"AAAA,SAASA,UAAU,QAAQ,yBAAyB;AACpD,SAASC,QAAQ,QAAQ,+BAA+B;AACxD,OAAO,MAAMC,WAAW,GAAG,UAAU;;AAErC;AACA;AACA;AACA;AACA,OAAO,MAAMC,cAAc,SAASH,UAAU,CAAC;EAC7C,WAAWE,WAAWA,CAAA,EAAG;IACvB,OAAOA,WAAW;EACpB;EACAE,YAAYA,CAACC,YAAY,EAAEC,KAAK,EAAE;IAChC;IACA;IACA;IACA;;IAEA,IAAIA,KAAK,IAAIA,KAAK,CAACC,IAAI,KAAK,SAAS,IAAID,KAAK,CAACE,MAAM,CAACC,QAAQ,KAAK,IAAI,EAAE;MACvE,MAAMC,QAAQ,GAAG,IAAI,CAACC,EAAE,CAACC,aAAa,CAAC,wBAAwB,CAAC;MAChE,IAAI,CAACX,QAAQ,CAACS,QAAQ,EAAE,YAAY,CAAC,EAAE;QACrCA,QAAQ,CAACG,KAAK,CAAC,CAAC;MAClB;IACF;EACF;EACAC,aAAaA,CAAA,EAAG,CAAC;EACjBC,IAAIA,CAAA,EAAG,CAAC;EACRC,IAAIA,CAAA,EAAG,CAAC;EACRC,KAAKA,CAAA,EAAG,CAAC;EACTC,QAAQA,CAAA,EAAG,CAAC;EACZC,QAAQA,CAAA,EAAG,CAAC;EACZC,KAAKA,CAAA,EAAG,CAAC;AACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}