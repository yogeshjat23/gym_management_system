{"ast":null,"code":"function _classPrivateMethodInitSpec(e, a) {\n  _checkPrivateRedeclaration(e, a), a.add(e);\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nimport { BasePlugin } from \"../base/index.mjs\";\nimport LooseBindsMap from \"./maps/looseBindsMap.mjs\";\nimport StrictBindsMap from \"./maps/strictBindsMap.mjs\";\nexport const PLUGIN_KEY = 'bindRowsWithHeaders';\nexport const PLUGIN_PRIORITY = 210;\nconst DEFAULT_BIND = 'loose';\nconst bindTypeToMapStrategy = new Map([['loose', LooseBindsMap], ['strict', StrictBindsMap]]);\n\n/**\n * @plugin BindRowsWithHeaders\n * @class BindRowsWithHeaders\n *\n * @description\n * Plugin allows binding the table rows with their headers.\n *\n * If the plugin is enabled, the table row headers will \"stick\" to the rows, when they are hidden/moved. Basically, if\n * at the initialization row 0 has a header titled \"A\", it will have it no matter what you do with the table.\n *\n * @example\n * ::: only-for javascript\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   // enable plugin\n *   bindRowsWithHeaders: true\n * });\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * <HotTable\n *   data={getData()}\n *   // enable plugin\n *   bindRowsWithHeaders={true}\n * />\n * ```\n * :::\n */\nvar _BindRowsWithHeaders_brand = /*#__PURE__*/new WeakSet();\nexport class BindRowsWithHeaders extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * On modify row header listener.\n     *\n     * @param {number} row Row index.\n     * @returns {number}\n     */\n    _classPrivateMethodInitSpec(this, _BindRowsWithHeaders_brand);\n    /**\n     * Plugin indexes cache.\n     *\n     * @private\n     * @type {null|IndexMap}\n     */\n    _defineProperty(this, \"headerIndexes\", null);\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link BindRowsWithHeaders#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return !!this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    if (this.enabled) {\n      return;\n    }\n    let bindType = this.hot.getSettings()[PLUGIN_KEY];\n    if (typeof bindType !== 'string') {\n      bindType = DEFAULT_BIND;\n    }\n    const MapStrategy = bindTypeToMapStrategy.get(bindType);\n    this.headerIndexes = this.hot.rowIndexMapper.registerMap('bindRowsWithHeaders', new MapStrategy());\n    this.addHook('modifyRowHeader', row => _assertClassBrand(_BindRowsWithHeaders_brand, this, _onModifyRowHeader).call(this, row));\n    super.enablePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    this.hot.rowIndexMapper.unregisterMap('bindRowsWithHeaders');\n    super.disablePlugin();\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    super.destroy();\n  }\n}\nfunction _onModifyRowHeader(row) {\n  return this.headerIndexes.getValueAtIndex(this.hot.toPhysicalRow(row));\n}","map":{"version":3,"names":["_classPrivateMethodInitSpec","e","a","_checkPrivateRedeclaration","add","t","has","TypeError","_defineProperty","r","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","String","Number","_assertClassBrand","n","arguments","length","BasePlugin","LooseBindsMap","StrictBindsMap","PLUGIN_KEY","PLUGIN_PRIORITY","DEFAULT_BIND","bindTypeToMapStrategy","Map","_BindRowsWithHeaders_brand","WeakSet","BindRowsWithHeaders","constructor","isEnabled","hot","getSettings","enablePlugin","enabled","bindType","MapStrategy","get","headerIndexes","rowIndexMapper","registerMap","addHook","row","_onModifyRowHeader","disablePlugin","unregisterMap","destroy","getValueAtIndex","toPhysicalRow"],"sources":["D:/gym-project/frontend/node_modules/handsontable/plugins/bindRowsWithHeaders/bindRowsWithHeaders.mjs"],"sourcesContent":["import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(e, a) { _checkPrivateRedeclaration(e, a), a.add(e); }\nfunction _checkPrivateRedeclaration(e, t) { if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _assertClassBrand(e, t, n) { if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n; throw new TypeError(\"Private element is not present on this object\"); }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport LooseBindsMap from \"./maps/looseBindsMap.mjs\";\nimport StrictBindsMap from \"./maps/strictBindsMap.mjs\";\nexport const PLUGIN_KEY = 'bindRowsWithHeaders';\nexport const PLUGIN_PRIORITY = 210;\nconst DEFAULT_BIND = 'loose';\nconst bindTypeToMapStrategy = new Map([['loose', LooseBindsMap], ['strict', StrictBindsMap]]);\n\n/**\n * @plugin BindRowsWithHeaders\n * @class BindRowsWithHeaders\n *\n * @description\n * Plugin allows binding the table rows with their headers.\n *\n * If the plugin is enabled, the table row headers will \"stick\" to the rows, when they are hidden/moved. Basically, if\n * at the initialization row 0 has a header titled \"A\", it will have it no matter what you do with the table.\n *\n * @example\n * ::: only-for javascript\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: getData(),\n *   // enable plugin\n *   bindRowsWithHeaders: true\n * });\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * <HotTable\n *   data={getData()}\n *   // enable plugin\n *   bindRowsWithHeaders={true}\n * />\n * ```\n * :::\n */\nvar _BindRowsWithHeaders_brand = /*#__PURE__*/new WeakSet();\nexport class BindRowsWithHeaders extends BasePlugin {\n  constructor() {\n    super(...arguments);\n    /**\n     * On modify row header listener.\n     *\n     * @param {number} row Row index.\n     * @returns {number}\n     */\n    _classPrivateMethodInitSpec(this, _BindRowsWithHeaders_brand);\n    /**\n     * Plugin indexes cache.\n     *\n     * @private\n     * @type {null|IndexMap}\n     */\n    _defineProperty(this, \"headerIndexes\", null);\n  }\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link BindRowsWithHeaders#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return !!this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   */\n  enablePlugin() {\n    if (this.enabled) {\n      return;\n    }\n    let bindType = this.hot.getSettings()[PLUGIN_KEY];\n    if (typeof bindType !== 'string') {\n      bindType = DEFAULT_BIND;\n    }\n    const MapStrategy = bindTypeToMapStrategy.get(bindType);\n    this.headerIndexes = this.hot.rowIndexMapper.registerMap('bindRowsWithHeaders', new MapStrategy());\n    this.addHook('modifyRowHeader', row => _assertClassBrand(_BindRowsWithHeaders_brand, this, _onModifyRowHeader).call(this, row));\n    super.enablePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    this.hot.rowIndexMapper.unregisterMap('bindRowsWithHeaders');\n    super.disablePlugin();\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    super.destroy();\n  }\n}\nfunction _onModifyRowHeader(row) {\n  return this.headerIndexes.getValueAtIndex(this.hot.toPhysicalRow(row));\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}