{"ast":null,"code":"function _classPrivateFieldInitSpec(e, t, a) {\n  _checkPrivateRedeclaration(e, t), t.set(e, a);\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _classPrivateFieldGet(s, a) {\n  return s.get(_assertClassBrand(s, a));\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nimport { HandsontableEditor } from \"../handsontableEditor/index.mjs\";\nimport { arrayMap, pivot } from \"../../helpers/array.mjs\";\nimport { addClass, getCaretPosition, getScrollbarWidth, getSelectionEndPosition, getTrimmingContainer, offset, outerHeight, outerWidth, setAttribute, setCaretPosition } from \"../../helpers/dom/element.mjs\";\nimport { isDefined, stringify } from \"../../helpers/mixed.mjs\";\nimport { stripTags } from \"../../helpers/string.mjs\";\nimport { KEY_CODES, isPrintableChar } from \"../../helpers/unicode.mjs\";\nimport { isMacOS } from \"../../helpers/browser.mjs\";\nimport { textRenderer } from \"../../renderers/textRenderer/index.mjs\";\nimport { A11Y_ACTIVEDESCENDANT, A11Y_AUTOCOMPLETE, A11Y_COMBOBOX, A11Y_CONTROLS, A11Y_EXPANDED, A11Y_HASPOPUP, A11Y_LISTBOX, A11Y_LIVE, A11Y_OPTION, A11Y_POSINSET, A11Y_PRESENTATION, A11Y_RELEVANT, A11Y_SELECTED, A11Y_SETSIZE, A11Y_TEXT } from \"../../helpers/a11y.mjs\";\nexport const EDITOR_TYPE = 'autocomplete';\n\n/**\n * @private\n * @class AutocompleteEditor\n */\nvar _idPrefix = /*#__PURE__*/new WeakMap();\nexport class AutocompleteEditor extends HandsontableEditor {\n  constructor() {\n    super(...arguments);\n    /**\n     * Query string to turn available values over.\n     *\n     * @type {string}\n     */\n    _defineProperty(this, \"query\", null);\n    /**\n     * Contains stripped choices.\n     *\n     * @type {string[]}\n     */\n    _defineProperty(this, \"strippedChoices\", []);\n    /**\n     * Contains raw choices.\n     *\n     * @type {Array}\n     */\n    _defineProperty(this, \"rawChoices\", []);\n    /**\n     * Holds the prefix of the editor's id.\n     *\n     * @type {string}\n     */\n    _classPrivateFieldInitSpec(this, _idPrefix, this.hot.guid.slice(0, 9));\n    /**\n     * Filters and sorts by relevance.\n     *\n     * @param {*} value The selected value.\n     * @param {string[]} choices The list of available choices.\n     * @param {boolean} caseSensitive Indicates if it's sorted by case.\n     * @returns {number[]} Array of indexes in original choices array.\n     */\n    _defineProperty(this, \"sortByRelevance\", function (value, choices, caseSensitive) {\n      const choicesRelevance = [];\n      const result = [];\n      const valueLength = value.length;\n      let choicesCount = choices.length;\n      let charsLeft;\n      let currentItem;\n      let i;\n      let valueIndex;\n      if (valueLength === 0) {\n        for (i = 0; i < choicesCount; i++) {\n          result.push(i);\n        }\n        return result;\n      }\n      for (i = 0; i < choicesCount; i++) {\n        currentItem = stripTags(stringify(choices[i]));\n        if (caseSensitive) {\n          valueIndex = currentItem.indexOf(value);\n        } else {\n          const locale = this.cellProperties.locale;\n          valueIndex = currentItem.toLocaleLowerCase(locale).indexOf(value.toLocaleLowerCase(locale));\n        }\n        if (valueIndex !== -1) {\n          charsLeft = currentItem.length - valueIndex - valueLength;\n          choicesRelevance.push({\n            baseIndex: i,\n            index: valueIndex,\n            charsLeft,\n            value: currentItem\n          });\n        }\n      }\n      choicesRelevance.sort((a, b) => {\n        if (b.index === -1) {\n          return -1;\n        }\n        if (a.index === -1) {\n          return 1;\n        }\n        if (a.index < b.index) {\n          return -1;\n        } else if (b.index < a.index) {\n          return 1;\n        } else if (a.index === b.index) {\n          if (a.charsLeft < b.charsLeft) {\n            return -1;\n          } else if (a.charsLeft > b.charsLeft) {\n            return 1;\n          }\n        }\n        return 0;\n      });\n      for (i = 0, choicesCount = choicesRelevance.length; i < choicesCount; i++) {\n        result.push(choicesRelevance[i].baseIndex);\n      }\n      return result;\n    });\n  }\n  static get EDITOR_TYPE() {\n    return EDITOR_TYPE;\n  }\n  /**\n   * Gets current value from editable element.\n   *\n   * @returns {string}\n   */\n  getValue() {\n    const selectedValue = this.rawChoices.find(value => {\n      const strippedValue = this.stripValueIfNeeded(value);\n      return strippedValue === this.TEXTAREA.value;\n    });\n    if (isDefined(selectedValue)) {\n      return selectedValue;\n    }\n    return this.TEXTAREA.value;\n  }\n\n  /**\n   * Creates an editor's elements and adds necessary CSS classnames.\n   */\n  createElements() {\n    super.createElements();\n    addClass(this.htContainer, 'autocompleteEditor');\n    addClass(this.htContainer, this.hot.rootWindow.navigator.platform.indexOf('Mac') === -1 ? '' : 'htMacScroll');\n    if (this.hot.getSettings().ariaTags) {\n      setAttribute(this.TEXTAREA, [A11Y_TEXT(), A11Y_COMBOBOX(), A11Y_HASPOPUP('listbox'), A11Y_AUTOCOMPLETE()]);\n    }\n  }\n\n  /**\n   * Prepares editor's metadata and configuration of the internal Handsontable's instance.\n   *\n   * @param {number} row The visual row index.\n   * @param {number} col The visual column index.\n   * @param {number|string} prop The column property (passed when datasource is an array of objects).\n   * @param {HTMLTableCellElement} td The rendered cell element.\n   * @param {*} value The rendered value.\n   * @param {object} cellProperties The cell meta object (see {@link Core#getCellMeta}).\n   */\n  prepare(row, col, prop, td, value, cellProperties) {\n    super.prepare(row, col, prop, td, value, cellProperties);\n    if (this.hot.getSettings().ariaTags) {\n      setAttribute(this.TEXTAREA, [A11Y_EXPANDED('false'), A11Y_CONTROLS(`${_classPrivateFieldGet(_idPrefix, this)}-listbox-${row}-${col}`)]);\n    }\n  }\n\n  /**\n   * Opens the editor and adjust its size and internal Handsontable's instance.\n   */\n  open() {\n    super.open();\n    const trimDropdown = this.cellProperties.trimDropdown === undefined ? true : this.cellProperties.trimDropdown;\n    const rootInstanceAriaTagsEnabled = this.hot.getSettings().ariaTags;\n    const sourceArray = Array.isArray(this.cellProperties.source) ? this.cellProperties.source : null;\n    const sourceSize = sourceArray === null || sourceArray === void 0 ? void 0 : sourceArray.length;\n    const {\n      row: rowIndex,\n      col: colIndex\n    } = this;\n    this.showEditableElement();\n    this.focus();\n    let scrollbarWidth = getScrollbarWidth();\n    if (scrollbarWidth === 0 && isMacOS()) {\n      scrollbarWidth += 15; // default scroll bar width if scroll bars are visible only when scrolling\n    }\n    this.addHook('beforeKeyDown', event => this.onBeforeKeyDown(event));\n    this.htEditor.updateSettings({\n      colWidths: trimDropdown ? [outerWidth(this.TEXTAREA) - 2] : undefined,\n      width: trimDropdown ? outerWidth(this.TEXTAREA) + scrollbarWidth : undefined,\n      autoColumnSize: true,\n      renderer: (hotInstance, TD, row, col, prop, value, cellProperties) => {\n        textRenderer(hotInstance, TD, row, col, prop, value, cellProperties);\n        const {\n          filteringCaseSensitive,\n          allowHtml,\n          locale\n        } = this.cellProperties;\n        const query = this.query;\n        let cellValue = stringify(value);\n        let indexOfMatch;\n        let match;\n        if (cellValue && !allowHtml) {\n          indexOfMatch = filteringCaseSensitive === true ? cellValue.indexOf(query) : cellValue.toLocaleLowerCase(locale).indexOf(query.toLocaleLowerCase(locale));\n          if (indexOfMatch !== -1) {\n            match = cellValue.substr(indexOfMatch, query.length);\n            cellValue = cellValue.replace(match, `<strong>${match}</strong>`);\n          }\n        }\n        if (rootInstanceAriaTagsEnabled) {\n          setAttribute(TD, [A11Y_OPTION(),\n          // Add `setsize` and `posinset` only if the source is an array.\n          ...(sourceArray ? [A11Y_SETSIZE(sourceSize)] : []), ...(sourceArray ? [A11Y_POSINSET(sourceArray.indexOf(value) + 1)] : []), ['id', `${this.htEditor.rootElement.id}_${row}-${col}`]]);\n        }\n        TD.innerHTML = cellValue;\n      },\n      afterSelectionEnd: (startRow, startCol) => {\n        if (rootInstanceAriaTagsEnabled) {\n          const TD = this.htEditor.getCell(startRow, startCol, true);\n          setAttribute(TD, [A11Y_SELECTED()]);\n          setAttribute(this.TEXTAREA, ...A11Y_ACTIVEDESCENDANT(TD.id));\n        }\n      }\n    });\n    if (rootInstanceAriaTagsEnabled) {\n      // Add `role=presentation` to the main table to prevent the readers from treating the option list as a table.\n      setAttribute(this.htEditor.view._wt.wtOverlays.wtTable.TABLE, ...A11Y_PRESENTATION());\n      setAttribute(this.htEditor.rootElement, [A11Y_LISTBOX(), A11Y_LIVE('polite'), A11Y_RELEVANT('text'), ['id', `${_classPrivateFieldGet(_idPrefix, this)}-listbox-${rowIndex}-${colIndex}`]]);\n      setAttribute(this.TEXTAREA, ...A11Y_EXPANDED('true'));\n    }\n    this.hot._registerTimeout(() => {\n      this.queryChoices(this.TEXTAREA.value);\n    });\n  }\n\n  /**\n   * Closes the editor.\n   */\n  close() {\n    this.removeHooksByKey('beforeKeyDown');\n    super.close();\n    if (this.hot.getSettings().ariaTags) {\n      setAttribute(this.TEXTAREA, [A11Y_EXPANDED('false')]);\n    }\n  }\n\n  /**\n   * Verifies result of validation or closes editor if user's cancelled changes.\n   *\n   * @param {boolean|undefined} result If `false` and the cell using allowInvalid option,\n   *                                   then an editor won't be closed until validation is passed.\n   */\n  discardEditor(result) {\n    super.discardEditor(result);\n    this.hot.view.render();\n  }\n\n  /**\n   * Prepares choices list based on applied argument.\n   *\n   * @private\n   * @param {string} query The query.\n   */\n  queryChoices(query) {\n    const source = this.cellProperties.source;\n    this.query = query;\n    if (typeof source === 'function') {\n      source.call(this.cellProperties, query, choices => {\n        this.rawChoices = choices;\n        this.updateChoicesList(this.stripValuesIfNeeded(choices));\n      });\n    } else if (Array.isArray(source)) {\n      this.rawChoices = source;\n      this.updateChoicesList(this.stripValuesIfNeeded(source));\n    } else {\n      this.updateChoicesList([]);\n    }\n  }\n\n  /**\n   * Updates list of the possible completions to choose.\n   *\n   * @private\n   * @param {Array} choicesList The choices list to process.\n   */\n  updateChoicesList(choicesList) {\n    const pos = getCaretPosition(this.TEXTAREA);\n    const endPos = getSelectionEndPosition(this.TEXTAREA);\n    const sortByRelevanceSetting = this.cellProperties.sortByRelevance;\n    const filterSetting = this.cellProperties.filter;\n    let orderByRelevance = null;\n    let highlightIndex = null;\n    let choices = choicesList;\n    if (sortByRelevanceSetting) {\n      orderByRelevance = this.sortByRelevance(this.stripValueIfNeeded(this.getValue()), choices, this.cellProperties.filteringCaseSensitive);\n    }\n    const orderByRelevanceLength = Array.isArray(orderByRelevance) ? orderByRelevance.length : 0;\n    if (filterSetting === false) {\n      if (orderByRelevanceLength) {\n        highlightIndex = orderByRelevance[0];\n      }\n    } else {\n      const sorted = [];\n      for (let i = 0, choicesCount = choices.length; i < choicesCount; i++) {\n        if (sortByRelevanceSetting && orderByRelevanceLength <= i) {\n          break;\n        }\n        if (orderByRelevanceLength) {\n          sorted.push(choices[orderByRelevance[i]]);\n        } else {\n          sorted.push(choices[i]);\n        }\n      }\n      highlightIndex = 0;\n      choices = sorted;\n    }\n    this.strippedChoices = choices;\n    if (choices.length === 0) {\n      this.htEditor.rootElement.style.display = 'none';\n    } else {\n      this.htEditor.rootElement.style.display = '';\n    }\n    this.htEditor.loadData(pivot([choices]));\n    if (choices.length > 0) {\n      this.updateDropdownDimensions();\n      this.flipDropdownIfNeeded();\n      if (this.cellProperties.strict === true) {\n        this.highlightBestMatchingChoice(highlightIndex);\n      }\n    }\n    this.hot.listen();\n    setCaretPosition(this.TEXTAREA, pos, pos === endPos ? undefined : endPos);\n  }\n\n  /**\n   * Checks where is enough place to open editor.\n   *\n   * @private\n   * @returns {boolean}\n   */\n  flipDropdownIfNeeded() {\n    const trimmingContainer = getTrimmingContainer(this.hot.view._wt.wtTable.TABLE);\n    const isWindowAsScrollableElement = trimmingContainer === this.hot.rootWindow;\n    const preventOverflow = this.cellProperties.preventOverflow;\n    if (isWindowAsScrollableElement || !isWindowAsScrollableElement && (preventOverflow || preventOverflow === 'horizontal')) {\n      return false;\n    }\n    const textareaOffset = offset(this.TEXTAREA);\n    const textareaHeight = outerHeight(this.TEXTAREA);\n    const dropdownHeight = this.getDropdownHeight();\n    const trimmingContainerScrollTop = trimmingContainer.scrollTop;\n    const headersHeight = outerHeight(this.hot.view._wt.wtTable.THEAD);\n    const containerOffset = offset(trimmingContainer);\n    const spaceAbove = textareaOffset.top - containerOffset.top - headersHeight + trimmingContainerScrollTop;\n    const spaceBelow = trimmingContainer.scrollHeight - spaceAbove - headersHeight - textareaHeight;\n    const flipNeeded = dropdownHeight > spaceBelow && spaceAbove > spaceBelow;\n    if (flipNeeded) {\n      this.flipDropdown(dropdownHeight);\n    } else {\n      this.unflipDropdown();\n    }\n    this.limitDropdownIfNeeded(flipNeeded ? spaceAbove : spaceBelow, dropdownHeight);\n    return flipNeeded;\n  }\n\n  /**\n   * Checks if the internal table should generate scrollbar or could be rendered without it.\n   *\n   * @private\n   * @param {number} spaceAvailable The free space as height defined in px available for dropdown list.\n   * @param {number} dropdownHeight The dropdown height.\n   */\n  limitDropdownIfNeeded(spaceAvailable, dropdownHeight) {\n    if (dropdownHeight > spaceAvailable) {\n      let tempHeight = 0;\n      let i = 0;\n      let lastRowHeight = 0;\n      let height = null;\n      do {\n        lastRowHeight = this.htEditor.getRowHeight(i) || this.htEditor.view._wt.getSetting('defaultRowHeight');\n        tempHeight += lastRowHeight;\n        i += 1;\n      } while (tempHeight < spaceAvailable);\n      height = tempHeight - lastRowHeight;\n      if (this.htEditor.flipped) {\n        this.htEditor.rootElement.style.top = `${parseInt(this.htEditor.rootElement.style.top, 10) + dropdownHeight - height}px`;\n      }\n      this.setDropdownHeight(tempHeight - lastRowHeight);\n    }\n  }\n\n  /**\n   * Configures editor to open it at the top.\n   *\n   * @private\n   * @param {number} dropdownHeight The dropdown height.\n   */\n  flipDropdown(dropdownHeight) {\n    const dropdownStyle = this.htEditor.rootElement.style;\n    dropdownStyle.position = 'absolute';\n    dropdownStyle.top = `${-dropdownHeight}px`;\n    this.htEditor.flipped = true;\n  }\n\n  /**\n   * Configures editor to open it at the bottom.\n   *\n   * @private\n   */\n  unflipDropdown() {\n    const dropdownStyle = this.htEditor.rootElement.style;\n    dropdownStyle.position = 'absolute';\n    dropdownStyle.top = '';\n    this.htEditor.flipped = undefined;\n  }\n\n  /**\n   * Updates width and height of the internal Handsontable's instance.\n   *\n   * @private\n   */\n  updateDropdownDimensions() {\n    const currentDropdownWidth = this.htEditor.getColWidth(0) + getScrollbarWidth(this.hot.rootDocument) + 2;\n    const trimDropdown = this.cellProperties.trimDropdown;\n    this.htEditor.updateSettings({\n      height: this.getDropdownHeight(),\n      width: trimDropdown ? undefined : currentDropdownWidth\n    });\n    this.htEditor.view._wt.wtTable.alignOverlaysWithTrimmingContainer();\n  }\n\n  /**\n   * Sets new height of the internal Handsontable's instance.\n   *\n   * @private\n   * @param {number} height The new dropdown height.\n   */\n  setDropdownHeight(height) {\n    this.htEditor.updateSettings({\n      height\n    });\n  }\n\n  /**\n   * Creates new selection on specified row index, or deselects selected cells.\n   *\n   * @private\n   * @param {number|undefined} index The visual row index.\n   */\n  highlightBestMatchingChoice(index) {\n    if (typeof index === 'number') {\n      this.htEditor.selectCell(index, 0, undefined, undefined, undefined, false);\n    } else {\n      this.htEditor.deselectCell();\n    }\n  }\n\n  /**\n   * Calculates and return the internal Handsontable's height.\n   *\n   * @private\n   * @returns {number}\n   */\n  getDropdownHeight() {\n    const firstRowHeight = this.htEditor.getRowHeight(0) || 23;\n    const visibleRows = this.cellProperties.visibleRows;\n    return this.strippedChoices.length >= visibleRows ? visibleRows * firstRowHeight : this.strippedChoices.length * firstRowHeight + 8; // eslint-disable-line max-len\n  }\n\n  /**\n   * Sanitizes value from potential dangerous tags.\n   *\n   * @private\n   * @param {string} value The value to sanitize.\n   * @returns {string}\n   */\n  stripValueIfNeeded(value) {\n    return this.stripValuesIfNeeded([value])[0];\n  }\n\n  /**\n   * Sanitizes an array of the values from potential dangerous tags.\n   *\n   * @private\n   * @param {string[]} values The value to sanitize.\n   * @returns {string[]}\n   */\n  stripValuesIfNeeded(values) {\n    const {\n      allowHtml\n    } = this.cellProperties;\n    const stringifiedValues = arrayMap(values, value => stringify(value));\n    const strippedValues = arrayMap(stringifiedValues, value => allowHtml ? value : stripTags(value));\n    return strippedValues;\n  }\n\n  /**\n   * Captures use of arrow down and up to control their behaviour.\n   *\n   * @private\n   * @param {number} keyCode The keyboard keycode.\n   * @returns {boolean}\n   */\n  allowKeyEventPropagation(keyCode) {\n    const selectedRange = this.htEditor.getSelectedRangeLast();\n    const selected = {\n      row: selectedRange ? selectedRange.from.row : -1\n    };\n    let allowed = false;\n    if (keyCode === KEY_CODES.ARROW_DOWN && selected.row > 0 && selected.row < this.htEditor.countRows() - 1) {\n      allowed = true;\n    }\n    if (keyCode === KEY_CODES.ARROW_UP && selected.row > -1) {\n      allowed = true;\n    }\n    return allowed;\n  }\n\n  /**\n   * OnBeforeKeyDown callback.\n   *\n   * @private\n   * @param {KeyboardEvent} event The keyboard event object.\n   */\n  onBeforeKeyDown(event) {\n    if (isPrintableChar(event.keyCode) || event.keyCode === KEY_CODES.BACKSPACE || event.keyCode === KEY_CODES.DELETE || event.keyCode === KEY_CODES.INSERT) {\n      // for Windows 10 + FF86 there is need to add delay to make sure that the value taken from\n      // the textarea is the freshest value. Otherwise the list of choices does not update correctly (see #7570).\n      // On the more modern version of the FF (~ >=91) it seems that the issue is not present or it is\n      // more difficult to induce.\n      let timeOffset = 10;\n\n      // on ctl+c / cmd+c don't update suggestion list\n      if (event.keyCode === KEY_CODES.C && (event.ctrlKey || event.metaKey)) {\n        return;\n      }\n      if (!this.isOpened()) {\n        timeOffset += 10;\n      }\n      if (this.htEditor) {\n        this.hot._registerTimeout(() => {\n          this.queryChoices(this.TEXTAREA.value);\n        }, timeOffset);\n      }\n    }\n  }\n}","map":{"version":3,"names":["_classPrivateFieldInitSpec","e","t","a","_checkPrivateRedeclaration","set","has","TypeError","_defineProperty","r","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","String","Number","_classPrivateFieldGet","s","get","_assertClassBrand","n","arguments","length","HandsontableEditor","arrayMap","pivot","addClass","getCaretPosition","getScrollbarWidth","getSelectionEndPosition","getTrimmingContainer","offset","outerHeight","outerWidth","setAttribute","setCaretPosition","isDefined","stringify","stripTags","KEY_CODES","isPrintableChar","isMacOS","textRenderer","A11Y_ACTIVEDESCENDANT","A11Y_AUTOCOMPLETE","A11Y_COMBOBOX","A11Y_CONTROLS","A11Y_EXPANDED","A11Y_HASPOPUP","A11Y_LISTBOX","A11Y_LIVE","A11Y_OPTION","A11Y_POSINSET","A11Y_PRESENTATION","A11Y_RELEVANT","A11Y_SELECTED","A11Y_SETSIZE","A11Y_TEXT","EDITOR_TYPE","_idPrefix","WeakMap","AutocompleteEditor","constructor","hot","guid","slice","choices","caseSensitive","choicesRelevance","result","valueLength","choicesCount","charsLeft","currentItem","valueIndex","push","indexOf","locale","cellProperties","toLocaleLowerCase","baseIndex","index","sort","b","getValue","selectedValue","rawChoices","find","strippedValue","stripValueIfNeeded","TEXTAREA","createElements","htContainer","rootWindow","navigator","platform","getSettings","ariaTags","prepare","row","col","prop","td","open","trimDropdown","undefined","rootInstanceAriaTagsEnabled","sourceArray","Array","isArray","source","sourceSize","rowIndex","colIndex","showEditableElement","focus","scrollbarWidth","addHook","event","onBeforeKeyDown","htEditor","updateSettings","colWidths","width","autoColumnSize","renderer","hotInstance","TD","filteringCaseSensitive","allowHtml","query","cellValue","indexOfMatch","match","substr","replace","rootElement","id","innerHTML","afterSelectionEnd","startRow","startCol","getCell","view","_wt","wtOverlays","wtTable","TABLE","_registerTimeout","queryChoices","close","removeHooksByKey","discardEditor","render","updateChoicesList","stripValuesIfNeeded","choicesList","pos","endPos","sortByRelevanceSetting","sortByRelevance","filterSetting","filter","orderByRelevance","highlightIndex","orderByRelevanceLength","sorted","strippedChoices","style","display","loadData","updateDropdownDimensions","flipDropdownIfNeeded","strict","highlightBestMatchingChoice","listen","trimmingContainer","isWindowAsScrollableElement","preventOverflow","textareaOffset","textareaHeight","dropdownHeight","getDropdownHeight","trimmingContainerScrollTop","scrollTop","headersHeight","THEAD","containerOffset","spaceAbove","top","spaceBelow","scrollHeight","flipNeeded","flipDropdown","unflipDropdown","limitDropdownIfNeeded","spaceAvailable","tempHeight","lastRowHeight","height","getRowHeight","getSetting","flipped","parseInt","setDropdownHeight","dropdownStyle","position","currentDropdownWidth","getColWidth","rootDocument","alignOverlaysWithTrimmingContainer","selectCell","deselectCell","firstRowHeight","visibleRows","values","stringifiedValues","strippedValues","allowKeyEventPropagation","keyCode","selectedRange","getSelectedRangeLast","selected","from","allowed","ARROW_DOWN","countRows","ARROW_UP","BACKSPACE","DELETE","INSERT","timeOffset","C","ctrlKey","metaKey","isOpened"],"sources":["D:/gym-project/frontend/node_modules/handsontable/editors/autocompleteEditor/autocompleteEditor.mjs"],"sourcesContent":["import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _classPrivateFieldInitSpec(e, t, a) { _checkPrivateRedeclaration(e, t), t.set(e, a); }\nfunction _checkPrivateRedeclaration(e, t) { if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classPrivateFieldGet(s, a) { return s.get(_assertClassBrand(s, a)); }\nfunction _assertClassBrand(e, t, n) { if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n; throw new TypeError(\"Private element is not present on this object\"); }\nimport { HandsontableEditor } from \"../handsontableEditor/index.mjs\";\nimport { arrayMap, pivot } from \"../../helpers/array.mjs\";\nimport { addClass, getCaretPosition, getScrollbarWidth, getSelectionEndPosition, getTrimmingContainer, offset, outerHeight, outerWidth, setAttribute, setCaretPosition } from \"../../helpers/dom/element.mjs\";\nimport { isDefined, stringify } from \"../../helpers/mixed.mjs\";\nimport { stripTags } from \"../../helpers/string.mjs\";\nimport { KEY_CODES, isPrintableChar } from \"../../helpers/unicode.mjs\";\nimport { isMacOS } from \"../../helpers/browser.mjs\";\nimport { textRenderer } from \"../../renderers/textRenderer/index.mjs\";\nimport { A11Y_ACTIVEDESCENDANT, A11Y_AUTOCOMPLETE, A11Y_COMBOBOX, A11Y_CONTROLS, A11Y_EXPANDED, A11Y_HASPOPUP, A11Y_LISTBOX, A11Y_LIVE, A11Y_OPTION, A11Y_POSINSET, A11Y_PRESENTATION, A11Y_RELEVANT, A11Y_SELECTED, A11Y_SETSIZE, A11Y_TEXT } from \"../../helpers/a11y.mjs\";\nexport const EDITOR_TYPE = 'autocomplete';\n\n/**\n * @private\n * @class AutocompleteEditor\n */\nvar _idPrefix = /*#__PURE__*/new WeakMap();\nexport class AutocompleteEditor extends HandsontableEditor {\n  constructor() {\n    super(...arguments);\n    /**\n     * Query string to turn available values over.\n     *\n     * @type {string}\n     */\n    _defineProperty(this, \"query\", null);\n    /**\n     * Contains stripped choices.\n     *\n     * @type {string[]}\n     */\n    _defineProperty(this, \"strippedChoices\", []);\n    /**\n     * Contains raw choices.\n     *\n     * @type {Array}\n     */\n    _defineProperty(this, \"rawChoices\", []);\n    /**\n     * Holds the prefix of the editor's id.\n     *\n     * @type {string}\n     */\n    _classPrivateFieldInitSpec(this, _idPrefix, this.hot.guid.slice(0, 9));\n    /**\n     * Filters and sorts by relevance.\n     *\n     * @param {*} value The selected value.\n     * @param {string[]} choices The list of available choices.\n     * @param {boolean} caseSensitive Indicates if it's sorted by case.\n     * @returns {number[]} Array of indexes in original choices array.\n     */\n    _defineProperty(this, \"sortByRelevance\", function (value, choices, caseSensitive) {\n      const choicesRelevance = [];\n      const result = [];\n      const valueLength = value.length;\n      let choicesCount = choices.length;\n      let charsLeft;\n      let currentItem;\n      let i;\n      let valueIndex;\n      if (valueLength === 0) {\n        for (i = 0; i < choicesCount; i++) {\n          result.push(i);\n        }\n        return result;\n      }\n      for (i = 0; i < choicesCount; i++) {\n        currentItem = stripTags(stringify(choices[i]));\n        if (caseSensitive) {\n          valueIndex = currentItem.indexOf(value);\n        } else {\n          const locale = this.cellProperties.locale;\n          valueIndex = currentItem.toLocaleLowerCase(locale).indexOf(value.toLocaleLowerCase(locale));\n        }\n        if (valueIndex !== -1) {\n          charsLeft = currentItem.length - valueIndex - valueLength;\n          choicesRelevance.push({\n            baseIndex: i,\n            index: valueIndex,\n            charsLeft,\n            value: currentItem\n          });\n        }\n      }\n      choicesRelevance.sort((a, b) => {\n        if (b.index === -1) {\n          return -1;\n        }\n        if (a.index === -1) {\n          return 1;\n        }\n        if (a.index < b.index) {\n          return -1;\n        } else if (b.index < a.index) {\n          return 1;\n        } else if (a.index === b.index) {\n          if (a.charsLeft < b.charsLeft) {\n            return -1;\n          } else if (a.charsLeft > b.charsLeft) {\n            return 1;\n          }\n        }\n        return 0;\n      });\n      for (i = 0, choicesCount = choicesRelevance.length; i < choicesCount; i++) {\n        result.push(choicesRelevance[i].baseIndex);\n      }\n      return result;\n    });\n  }\n  static get EDITOR_TYPE() {\n    return EDITOR_TYPE;\n  }\n  /**\n   * Gets current value from editable element.\n   *\n   * @returns {string}\n   */\n  getValue() {\n    const selectedValue = this.rawChoices.find(value => {\n      const strippedValue = this.stripValueIfNeeded(value);\n      return strippedValue === this.TEXTAREA.value;\n    });\n    if (isDefined(selectedValue)) {\n      return selectedValue;\n    }\n    return this.TEXTAREA.value;\n  }\n\n  /**\n   * Creates an editor's elements and adds necessary CSS classnames.\n   */\n  createElements() {\n    super.createElements();\n    addClass(this.htContainer, 'autocompleteEditor');\n    addClass(this.htContainer, this.hot.rootWindow.navigator.platform.indexOf('Mac') === -1 ? '' : 'htMacScroll');\n    if (this.hot.getSettings().ariaTags) {\n      setAttribute(this.TEXTAREA, [A11Y_TEXT(), A11Y_COMBOBOX(), A11Y_HASPOPUP('listbox'), A11Y_AUTOCOMPLETE()]);\n    }\n  }\n\n  /**\n   * Prepares editor's metadata and configuration of the internal Handsontable's instance.\n   *\n   * @param {number} row The visual row index.\n   * @param {number} col The visual column index.\n   * @param {number|string} prop The column property (passed when datasource is an array of objects).\n   * @param {HTMLTableCellElement} td The rendered cell element.\n   * @param {*} value The rendered value.\n   * @param {object} cellProperties The cell meta object (see {@link Core#getCellMeta}).\n   */\n  prepare(row, col, prop, td, value, cellProperties) {\n    super.prepare(row, col, prop, td, value, cellProperties);\n    if (this.hot.getSettings().ariaTags) {\n      setAttribute(this.TEXTAREA, [A11Y_EXPANDED('false'), A11Y_CONTROLS(`${_classPrivateFieldGet(_idPrefix, this)}-listbox-${row}-${col}`)]);\n    }\n  }\n\n  /**\n   * Opens the editor and adjust its size and internal Handsontable's instance.\n   */\n  open() {\n    super.open();\n    const trimDropdown = this.cellProperties.trimDropdown === undefined ? true : this.cellProperties.trimDropdown;\n    const rootInstanceAriaTagsEnabled = this.hot.getSettings().ariaTags;\n    const sourceArray = Array.isArray(this.cellProperties.source) ? this.cellProperties.source : null;\n    const sourceSize = sourceArray === null || sourceArray === void 0 ? void 0 : sourceArray.length;\n    const {\n      row: rowIndex,\n      col: colIndex\n    } = this;\n    this.showEditableElement();\n    this.focus();\n    let scrollbarWidth = getScrollbarWidth();\n    if (scrollbarWidth === 0 && isMacOS()) {\n      scrollbarWidth += 15; // default scroll bar width if scroll bars are visible only when scrolling\n    }\n    this.addHook('beforeKeyDown', event => this.onBeforeKeyDown(event));\n    this.htEditor.updateSettings({\n      colWidths: trimDropdown ? [outerWidth(this.TEXTAREA) - 2] : undefined,\n      width: trimDropdown ? outerWidth(this.TEXTAREA) + scrollbarWidth : undefined,\n      autoColumnSize: true,\n      renderer: (hotInstance, TD, row, col, prop, value, cellProperties) => {\n        textRenderer(hotInstance, TD, row, col, prop, value, cellProperties);\n        const {\n          filteringCaseSensitive,\n          allowHtml,\n          locale\n        } = this.cellProperties;\n        const query = this.query;\n        let cellValue = stringify(value);\n        let indexOfMatch;\n        let match;\n        if (cellValue && !allowHtml) {\n          indexOfMatch = filteringCaseSensitive === true ? cellValue.indexOf(query) : cellValue.toLocaleLowerCase(locale).indexOf(query.toLocaleLowerCase(locale));\n          if (indexOfMatch !== -1) {\n            match = cellValue.substr(indexOfMatch, query.length);\n            cellValue = cellValue.replace(match, `<strong>${match}</strong>`);\n          }\n        }\n        if (rootInstanceAriaTagsEnabled) {\n          setAttribute(TD, [A11Y_OPTION(),\n          // Add `setsize` and `posinset` only if the source is an array.\n          ...(sourceArray ? [A11Y_SETSIZE(sourceSize)] : []), ...(sourceArray ? [A11Y_POSINSET(sourceArray.indexOf(value) + 1)] : []), ['id', `${this.htEditor.rootElement.id}_${row}-${col}`]]);\n        }\n        TD.innerHTML = cellValue;\n      },\n      afterSelectionEnd: (startRow, startCol) => {\n        if (rootInstanceAriaTagsEnabled) {\n          const TD = this.htEditor.getCell(startRow, startCol, true);\n          setAttribute(TD, [A11Y_SELECTED()]);\n          setAttribute(this.TEXTAREA, ...A11Y_ACTIVEDESCENDANT(TD.id));\n        }\n      }\n    });\n    if (rootInstanceAriaTagsEnabled) {\n      // Add `role=presentation` to the main table to prevent the readers from treating the option list as a table.\n      setAttribute(this.htEditor.view._wt.wtOverlays.wtTable.TABLE, ...A11Y_PRESENTATION());\n      setAttribute(this.htEditor.rootElement, [A11Y_LISTBOX(), A11Y_LIVE('polite'), A11Y_RELEVANT('text'), ['id', `${_classPrivateFieldGet(_idPrefix, this)}-listbox-${rowIndex}-${colIndex}`]]);\n      setAttribute(this.TEXTAREA, ...A11Y_EXPANDED('true'));\n    }\n    this.hot._registerTimeout(() => {\n      this.queryChoices(this.TEXTAREA.value);\n    });\n  }\n\n  /**\n   * Closes the editor.\n   */\n  close() {\n    this.removeHooksByKey('beforeKeyDown');\n    super.close();\n    if (this.hot.getSettings().ariaTags) {\n      setAttribute(this.TEXTAREA, [A11Y_EXPANDED('false')]);\n    }\n  }\n\n  /**\n   * Verifies result of validation or closes editor if user's cancelled changes.\n   *\n   * @param {boolean|undefined} result If `false` and the cell using allowInvalid option,\n   *                                   then an editor won't be closed until validation is passed.\n   */\n  discardEditor(result) {\n    super.discardEditor(result);\n    this.hot.view.render();\n  }\n\n  /**\n   * Prepares choices list based on applied argument.\n   *\n   * @private\n   * @param {string} query The query.\n   */\n  queryChoices(query) {\n    const source = this.cellProperties.source;\n    this.query = query;\n    if (typeof source === 'function') {\n      source.call(this.cellProperties, query, choices => {\n        this.rawChoices = choices;\n        this.updateChoicesList(this.stripValuesIfNeeded(choices));\n      });\n    } else if (Array.isArray(source)) {\n      this.rawChoices = source;\n      this.updateChoicesList(this.stripValuesIfNeeded(source));\n    } else {\n      this.updateChoicesList([]);\n    }\n  }\n\n  /**\n   * Updates list of the possible completions to choose.\n   *\n   * @private\n   * @param {Array} choicesList The choices list to process.\n   */\n  updateChoicesList(choicesList) {\n    const pos = getCaretPosition(this.TEXTAREA);\n    const endPos = getSelectionEndPosition(this.TEXTAREA);\n    const sortByRelevanceSetting = this.cellProperties.sortByRelevance;\n    const filterSetting = this.cellProperties.filter;\n    let orderByRelevance = null;\n    let highlightIndex = null;\n    let choices = choicesList;\n    if (sortByRelevanceSetting) {\n      orderByRelevance = this.sortByRelevance(this.stripValueIfNeeded(this.getValue()), choices, this.cellProperties.filteringCaseSensitive);\n    }\n    const orderByRelevanceLength = Array.isArray(orderByRelevance) ? orderByRelevance.length : 0;\n    if (filterSetting === false) {\n      if (orderByRelevanceLength) {\n        highlightIndex = orderByRelevance[0];\n      }\n    } else {\n      const sorted = [];\n      for (let i = 0, choicesCount = choices.length; i < choicesCount; i++) {\n        if (sortByRelevanceSetting && orderByRelevanceLength <= i) {\n          break;\n        }\n        if (orderByRelevanceLength) {\n          sorted.push(choices[orderByRelevance[i]]);\n        } else {\n          sorted.push(choices[i]);\n        }\n      }\n      highlightIndex = 0;\n      choices = sorted;\n    }\n    this.strippedChoices = choices;\n    if (choices.length === 0) {\n      this.htEditor.rootElement.style.display = 'none';\n    } else {\n      this.htEditor.rootElement.style.display = '';\n    }\n    this.htEditor.loadData(pivot([choices]));\n    if (choices.length > 0) {\n      this.updateDropdownDimensions();\n      this.flipDropdownIfNeeded();\n      if (this.cellProperties.strict === true) {\n        this.highlightBestMatchingChoice(highlightIndex);\n      }\n    }\n    this.hot.listen();\n    setCaretPosition(this.TEXTAREA, pos, pos === endPos ? undefined : endPos);\n  }\n\n  /**\n   * Checks where is enough place to open editor.\n   *\n   * @private\n   * @returns {boolean}\n   */\n  flipDropdownIfNeeded() {\n    const trimmingContainer = getTrimmingContainer(this.hot.view._wt.wtTable.TABLE);\n    const isWindowAsScrollableElement = trimmingContainer === this.hot.rootWindow;\n    const preventOverflow = this.cellProperties.preventOverflow;\n    if (isWindowAsScrollableElement || !isWindowAsScrollableElement && (preventOverflow || preventOverflow === 'horizontal')) {\n      return false;\n    }\n    const textareaOffset = offset(this.TEXTAREA);\n    const textareaHeight = outerHeight(this.TEXTAREA);\n    const dropdownHeight = this.getDropdownHeight();\n    const trimmingContainerScrollTop = trimmingContainer.scrollTop;\n    const headersHeight = outerHeight(this.hot.view._wt.wtTable.THEAD);\n    const containerOffset = offset(trimmingContainer);\n    const spaceAbove = textareaOffset.top - containerOffset.top - headersHeight + trimmingContainerScrollTop;\n    const spaceBelow = trimmingContainer.scrollHeight - spaceAbove - headersHeight - textareaHeight;\n    const flipNeeded = dropdownHeight > spaceBelow && spaceAbove > spaceBelow;\n    if (flipNeeded) {\n      this.flipDropdown(dropdownHeight);\n    } else {\n      this.unflipDropdown();\n    }\n    this.limitDropdownIfNeeded(flipNeeded ? spaceAbove : spaceBelow, dropdownHeight);\n    return flipNeeded;\n  }\n\n  /**\n   * Checks if the internal table should generate scrollbar or could be rendered without it.\n   *\n   * @private\n   * @param {number} spaceAvailable The free space as height defined in px available for dropdown list.\n   * @param {number} dropdownHeight The dropdown height.\n   */\n  limitDropdownIfNeeded(spaceAvailable, dropdownHeight) {\n    if (dropdownHeight > spaceAvailable) {\n      let tempHeight = 0;\n      let i = 0;\n      let lastRowHeight = 0;\n      let height = null;\n      do {\n        lastRowHeight = this.htEditor.getRowHeight(i) || this.htEditor.view._wt.getSetting('defaultRowHeight');\n        tempHeight += lastRowHeight;\n        i += 1;\n      } while (tempHeight < spaceAvailable);\n      height = tempHeight - lastRowHeight;\n      if (this.htEditor.flipped) {\n        this.htEditor.rootElement.style.top = `${parseInt(this.htEditor.rootElement.style.top, 10) + dropdownHeight - height}px`;\n      }\n      this.setDropdownHeight(tempHeight - lastRowHeight);\n    }\n  }\n\n  /**\n   * Configures editor to open it at the top.\n   *\n   * @private\n   * @param {number} dropdownHeight The dropdown height.\n   */\n  flipDropdown(dropdownHeight) {\n    const dropdownStyle = this.htEditor.rootElement.style;\n    dropdownStyle.position = 'absolute';\n    dropdownStyle.top = `${-dropdownHeight}px`;\n    this.htEditor.flipped = true;\n  }\n\n  /**\n   * Configures editor to open it at the bottom.\n   *\n   * @private\n   */\n  unflipDropdown() {\n    const dropdownStyle = this.htEditor.rootElement.style;\n    dropdownStyle.position = 'absolute';\n    dropdownStyle.top = '';\n    this.htEditor.flipped = undefined;\n  }\n\n  /**\n   * Updates width and height of the internal Handsontable's instance.\n   *\n   * @private\n   */\n  updateDropdownDimensions() {\n    const currentDropdownWidth = this.htEditor.getColWidth(0) + getScrollbarWidth(this.hot.rootDocument) + 2;\n    const trimDropdown = this.cellProperties.trimDropdown;\n    this.htEditor.updateSettings({\n      height: this.getDropdownHeight(),\n      width: trimDropdown ? undefined : currentDropdownWidth\n    });\n    this.htEditor.view._wt.wtTable.alignOverlaysWithTrimmingContainer();\n  }\n\n  /**\n   * Sets new height of the internal Handsontable's instance.\n   *\n   * @private\n   * @param {number} height The new dropdown height.\n   */\n  setDropdownHeight(height) {\n    this.htEditor.updateSettings({\n      height\n    });\n  }\n\n  /**\n   * Creates new selection on specified row index, or deselects selected cells.\n   *\n   * @private\n   * @param {number|undefined} index The visual row index.\n   */\n  highlightBestMatchingChoice(index) {\n    if (typeof index === 'number') {\n      this.htEditor.selectCell(index, 0, undefined, undefined, undefined, false);\n    } else {\n      this.htEditor.deselectCell();\n    }\n  }\n\n  /**\n   * Calculates and return the internal Handsontable's height.\n   *\n   * @private\n   * @returns {number}\n   */\n  getDropdownHeight() {\n    const firstRowHeight = this.htEditor.getRowHeight(0) || 23;\n    const visibleRows = this.cellProperties.visibleRows;\n    return this.strippedChoices.length >= visibleRows ? visibleRows * firstRowHeight : this.strippedChoices.length * firstRowHeight + 8; // eslint-disable-line max-len\n  }\n\n  /**\n   * Sanitizes value from potential dangerous tags.\n   *\n   * @private\n   * @param {string} value The value to sanitize.\n   * @returns {string}\n   */\n  stripValueIfNeeded(value) {\n    return this.stripValuesIfNeeded([value])[0];\n  }\n\n  /**\n   * Sanitizes an array of the values from potential dangerous tags.\n   *\n   * @private\n   * @param {string[]} values The value to sanitize.\n   * @returns {string[]}\n   */\n  stripValuesIfNeeded(values) {\n    const {\n      allowHtml\n    } = this.cellProperties;\n    const stringifiedValues = arrayMap(values, value => stringify(value));\n    const strippedValues = arrayMap(stringifiedValues, value => allowHtml ? value : stripTags(value));\n    return strippedValues;\n  }\n\n  /**\n   * Captures use of arrow down and up to control their behaviour.\n   *\n   * @private\n   * @param {number} keyCode The keyboard keycode.\n   * @returns {boolean}\n   */\n  allowKeyEventPropagation(keyCode) {\n    const selectedRange = this.htEditor.getSelectedRangeLast();\n    const selected = {\n      row: selectedRange ? selectedRange.from.row : -1\n    };\n    let allowed = false;\n    if (keyCode === KEY_CODES.ARROW_DOWN && selected.row > 0 && selected.row < this.htEditor.countRows() - 1) {\n      allowed = true;\n    }\n    if (keyCode === KEY_CODES.ARROW_UP && selected.row > -1) {\n      allowed = true;\n    }\n    return allowed;\n  }\n\n  /**\n   * OnBeforeKeyDown callback.\n   *\n   * @private\n   * @param {KeyboardEvent} event The keyboard event object.\n   */\n  onBeforeKeyDown(event) {\n    if (isPrintableChar(event.keyCode) || event.keyCode === KEY_CODES.BACKSPACE || event.keyCode === KEY_CODES.DELETE || event.keyCode === KEY_CODES.INSERT) {\n      // for Windows 10 + FF86 there is need to add delay to make sure that the value taken from\n      // the textarea is the freshest value. Otherwise the list of choices does not update correctly (see #7570).\n      // On the more modern version of the FF (~ >=91) it seems that the issue is not present or it is\n      // more difficult to induce.\n      let timeOffset = 10;\n\n      // on ctl+c / cmd+c don't update suggestion list\n      if (event.keyCode === KEY_CODES.C && (event.ctrlKey || event.metaKey)) {\n        return;\n      }\n      if (!this.isOpened()) {\n        timeOffset += 10;\n      }\n      if (this.htEditor) {\n        this.hot._registerTimeout(() => {\n          this.queryChoices(this.TEXTAREA.value);\n        }, timeOffset);\n      }\n    }\n  }\n}"],"mappings":"AAEA,SAASA,0BAA0BA,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;EAAEC,0BAA0B,CAACH,CAAC,EAAEC,CAAC,CAAC,EAAEA,CAAC,CAACG,GAAG,CAACJ,CAAC,EAAEE,CAAC,CAAC;AAAE;AAC9F,SAASC,0BAA0BA,CAACH,CAAC,EAAEC,CAAC,EAAE;EAAE,IAAIA,CAAC,CAACI,GAAG,CAACL,CAAC,CAAC,EAAE,MAAM,IAAIM,SAAS,CAAC,gEAAgE,CAAC;AAAE;AACjJ,SAASC,eAAeA,CAACP,CAAC,EAAEQ,CAAC,EAAEP,CAAC,EAAE;EAAE,OAAO,CAACO,CAAC,GAAGC,cAAc,CAACD,CAAC,CAAC,KAAKR,CAAC,GAAGU,MAAM,CAACC,cAAc,CAACX,CAAC,EAAEQ,CAAC,EAAE;IAAEI,KAAK,EAAEX,CAAC;IAAEY,UAAU,EAAE,CAAC,CAAC;IAAEC,YAAY,EAAE,CAAC,CAAC;IAAEC,QAAQ,EAAE,CAAC;EAAE,CAAC,CAAC,GAAGf,CAAC,CAACQ,CAAC,CAAC,GAAGP,CAAC,EAAED,CAAC;AAAE;AACnL,SAASS,cAAcA,CAACR,CAAC,EAAE;EAAE,IAAIe,CAAC,GAAGC,YAAY,CAAChB,CAAC,EAAE,QAAQ,CAAC;EAAE,OAAO,QAAQ,IAAI,OAAOe,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAG,EAAE;AAAE;AAC1G,SAASC,YAAYA,CAAChB,CAAC,EAAEO,CAAC,EAAE;EAAE,IAAI,QAAQ,IAAI,OAAOP,CAAC,IAAI,CAACA,CAAC,EAAE,OAAOA,CAAC;EAAE,IAAID,CAAC,GAAGC,CAAC,CAACiB,MAAM,CAACC,WAAW,CAAC;EAAE,IAAI,KAAK,CAAC,KAAKnB,CAAC,EAAE;IAAE,IAAIgB,CAAC,GAAGhB,CAAC,CAACoB,IAAI,CAACnB,CAAC,EAAEO,CAAC,IAAI,SAAS,CAAC;IAAE,IAAI,QAAQ,IAAI,OAAOQ,CAAC,EAAE,OAAOA,CAAC;IAAE,MAAM,IAAIV,SAAS,CAAC,8CAA8C,CAAC;EAAE;EAAE,OAAO,CAAC,QAAQ,KAAKE,CAAC,GAAGa,MAAM,GAAGC,MAAM,EAAErB,CAAC,CAAC;AAAE;AACvT,SAASsB,qBAAqBA,CAACC,CAAC,EAAEtB,CAAC,EAAE;EAAE,OAAOsB,CAAC,CAACC,GAAG,CAACC,iBAAiB,CAACF,CAAC,EAAEtB,CAAC,CAAC,CAAC;AAAE;AAC9E,SAASwB,iBAAiBA,CAAC1B,CAAC,EAAEC,CAAC,EAAE0B,CAAC,EAAE;EAAE,IAAI,UAAU,IAAI,OAAO3B,CAAC,GAAGA,CAAC,KAAKC,CAAC,GAAGD,CAAC,CAACK,GAAG,CAACJ,CAAC,CAAC,EAAE,OAAO2B,SAAS,CAACC,MAAM,GAAG,CAAC,GAAG5B,CAAC,GAAG0B,CAAC;EAAE,MAAM,IAAIrB,SAAS,CAAC,+CAA+C,CAAC;AAAE;AAClM,SAASwB,kBAAkB,QAAQ,iCAAiC;AACpE,SAASC,QAAQ,EAAEC,KAAK,QAAQ,yBAAyB;AACzD,SAASC,QAAQ,EAAEC,gBAAgB,EAAEC,iBAAiB,EAAEC,uBAAuB,EAAEC,oBAAoB,EAAEC,MAAM,EAAEC,WAAW,EAAEC,UAAU,EAAEC,YAAY,EAAEC,gBAAgB,QAAQ,+BAA+B;AAC7M,SAASC,SAAS,EAAEC,SAAS,QAAQ,yBAAyB;AAC9D,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,SAAS,EAAEC,eAAe,QAAQ,2BAA2B;AACtE,SAASC,OAAO,QAAQ,2BAA2B;AACnD,SAASC,YAAY,QAAQ,wCAAwC;AACrE,SAASC,qBAAqB,EAAEC,iBAAiB,EAAEC,aAAa,EAAEC,aAAa,EAAEC,aAAa,EAAEC,aAAa,EAAEC,YAAY,EAAEC,SAAS,EAAEC,WAAW,EAAEC,aAAa,EAAEC,iBAAiB,EAAEC,aAAa,EAAEC,aAAa,EAAEC,YAAY,EAAEC,SAAS,QAAQ,wBAAwB;AAC5Q,OAAO,MAAMC,WAAW,GAAG,cAAc;;AAEzC;AACA;AACA;AACA;AACA,IAAIC,SAAS,GAAG,aAAa,IAAIC,OAAO,CAAC,CAAC;AAC1C,OAAO,MAAMC,kBAAkB,SAAStC,kBAAkB,CAAC;EACzDuC,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,GAAGzC,SAAS,CAAC;IACnB;AACJ;AACA;AACA;AACA;IACIrB,eAAe,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC;IACpC;AACJ;AACA;AACA;AACA;IACIA,eAAe,CAAC,IAAI,EAAE,iBAAiB,EAAE,EAAE,CAAC;IAC5C;AACJ;AACA;AACA;AACA;IACIA,eAAe,CAAC,IAAI,EAAE,YAAY,EAAE,EAAE,CAAC;IACvC;AACJ;AACA;AACA;AACA;IACIR,0BAA0B,CAAC,IAAI,EAAEmE,SAAS,EAAE,IAAI,CAACI,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACtE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACIjE,eAAe,CAAC,IAAI,EAAE,iBAAiB,EAAE,UAAUK,KAAK,EAAE6D,OAAO,EAAEC,aAAa,EAAE;MAChF,MAAMC,gBAAgB,GAAG,EAAE;MAC3B,MAAMC,MAAM,GAAG,EAAE;MACjB,MAAMC,WAAW,GAAGjE,KAAK,CAACiB,MAAM;MAChC,IAAIiD,YAAY,GAAGL,OAAO,CAAC5C,MAAM;MACjC,IAAIkD,SAAS;MACb,IAAIC,WAAW;MACf,IAAIhE,CAAC;MACL,IAAIiE,UAAU;MACd,IAAIJ,WAAW,KAAK,CAAC,EAAE;QACrB,KAAK7D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8D,YAAY,EAAE9D,CAAC,EAAE,EAAE;UACjC4D,MAAM,CAACM,IAAI,CAAClE,CAAC,CAAC;QAChB;QACA,OAAO4D,MAAM;MACf;MACA,KAAK5D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8D,YAAY,EAAE9D,CAAC,EAAE,EAAE;QACjCgE,WAAW,GAAGnC,SAAS,CAACD,SAAS,CAAC6B,OAAO,CAACzD,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAI0D,aAAa,EAAE;UACjBO,UAAU,GAAGD,WAAW,CAACG,OAAO,CAACvE,KAAK,CAAC;QACzC,CAAC,MAAM;UACL,MAAMwE,MAAM,GAAG,IAAI,CAACC,cAAc,CAACD,MAAM;UACzCH,UAAU,GAAGD,WAAW,CAACM,iBAAiB,CAACF,MAAM,CAAC,CAACD,OAAO,CAACvE,KAAK,CAAC0E,iBAAiB,CAACF,MAAM,CAAC,CAAC;QAC7F;QACA,IAAIH,UAAU,KAAK,CAAC,CAAC,EAAE;UACrBF,SAAS,GAAGC,WAAW,CAACnD,MAAM,GAAGoD,UAAU,GAAGJ,WAAW;UACzDF,gBAAgB,CAACO,IAAI,CAAC;YACpBK,SAAS,EAAEvE,CAAC;YACZwE,KAAK,EAAEP,UAAU;YACjBF,SAAS;YACTnE,KAAK,EAAEoE;UACT,CAAC,CAAC;QACJ;MACF;MACAL,gBAAgB,CAACc,IAAI,CAAC,CAACvF,CAAC,EAAEwF,CAAC,KAAK;QAC9B,IAAIA,CAAC,CAACF,KAAK,KAAK,CAAC,CAAC,EAAE;UAClB,OAAO,CAAC,CAAC;QACX;QACA,IAAItF,CAAC,CAACsF,KAAK,KAAK,CAAC,CAAC,EAAE;UAClB,OAAO,CAAC;QACV;QACA,IAAItF,CAAC,CAACsF,KAAK,GAAGE,CAAC,CAACF,KAAK,EAAE;UACrB,OAAO,CAAC,CAAC;QACX,CAAC,MAAM,IAAIE,CAAC,CAACF,KAAK,GAAGtF,CAAC,CAACsF,KAAK,EAAE;UAC5B,OAAO,CAAC;QACV,CAAC,MAAM,IAAItF,CAAC,CAACsF,KAAK,KAAKE,CAAC,CAACF,KAAK,EAAE;UAC9B,IAAItF,CAAC,CAAC6E,SAAS,GAAGW,CAAC,CAACX,SAAS,EAAE;YAC7B,OAAO,CAAC,CAAC;UACX,CAAC,MAAM,IAAI7E,CAAC,CAAC6E,SAAS,GAAGW,CAAC,CAACX,SAAS,EAAE;YACpC,OAAO,CAAC;UACV;QACF;QACA,OAAO,CAAC;MACV,CAAC,CAAC;MACF,KAAK/D,CAAC,GAAG,CAAC,EAAE8D,YAAY,GAAGH,gBAAgB,CAAC9C,MAAM,EAAEb,CAAC,GAAG8D,YAAY,EAAE9D,CAAC,EAAE,EAAE;QACzE4D,MAAM,CAACM,IAAI,CAACP,gBAAgB,CAAC3D,CAAC,CAAC,CAACuE,SAAS,CAAC;MAC5C;MACA,OAAOX,MAAM;IACf,CAAC,CAAC;EACJ;EACA,WAAWX,WAAWA,CAAA,EAAG;IACvB,OAAOA,WAAW;EACpB;EACA;AACF;AACA;AACA;AACA;EACE0B,QAAQA,CAAA,EAAG;IACT,MAAMC,aAAa,GAAG,IAAI,CAACC,UAAU,CAACC,IAAI,CAAClF,KAAK,IAAI;MAClD,MAAMmF,aAAa,GAAG,IAAI,CAACC,kBAAkB,CAACpF,KAAK,CAAC;MACpD,OAAOmF,aAAa,KAAK,IAAI,CAACE,QAAQ,CAACrF,KAAK;IAC9C,CAAC,CAAC;IACF,IAAI+B,SAAS,CAACiD,aAAa,CAAC,EAAE;MAC5B,OAAOA,aAAa;IACtB;IACA,OAAO,IAAI,CAACK,QAAQ,CAACrF,KAAK;EAC5B;;EAEA;AACF;AACA;EACEsF,cAAcA,CAAA,EAAG;IACf,KAAK,CAACA,cAAc,CAAC,CAAC;IACtBjE,QAAQ,CAAC,IAAI,CAACkE,WAAW,EAAE,oBAAoB,CAAC;IAChDlE,QAAQ,CAAC,IAAI,CAACkE,WAAW,EAAE,IAAI,CAAC7B,GAAG,CAAC8B,UAAU,CAACC,SAAS,CAACC,QAAQ,CAACnB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,GAAG,aAAa,CAAC;IAC7G,IAAI,IAAI,CAACb,GAAG,CAACiC,WAAW,CAAC,CAAC,CAACC,QAAQ,EAAE;MACnC/D,YAAY,CAAC,IAAI,CAACwD,QAAQ,EAAE,CAACjC,SAAS,CAAC,CAAC,EAAEZ,aAAa,CAAC,CAAC,EAAEG,aAAa,CAAC,SAAS,CAAC,EAAEJ,iBAAiB,CAAC,CAAC,CAAC,CAAC;IAC5G;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEsD,OAAOA,CAACC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,EAAE,EAAEjG,KAAK,EAAEyE,cAAc,EAAE;IACjD,KAAK,CAACoB,OAAO,CAACC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,EAAE,EAAEjG,KAAK,EAAEyE,cAAc,CAAC;IACxD,IAAI,IAAI,CAACf,GAAG,CAACiC,WAAW,CAAC,CAAC,CAACC,QAAQ,EAAE;MACnC/D,YAAY,CAAC,IAAI,CAACwD,QAAQ,EAAE,CAAC3C,aAAa,CAAC,OAAO,CAAC,EAAED,aAAa,CAAC,GAAG9B,qBAAqB,CAAC2C,SAAS,EAAE,IAAI,CAAC,YAAYwC,GAAG,IAAIC,GAAG,EAAE,CAAC,CAAC,CAAC;IACzI;EACF;;EAEA;AACF;AACA;EACEG,IAAIA,CAAA,EAAG;IACL,KAAK,CAACA,IAAI,CAAC,CAAC;IACZ,MAAMC,YAAY,GAAG,IAAI,CAAC1B,cAAc,CAAC0B,YAAY,KAAKC,SAAS,GAAG,IAAI,GAAG,IAAI,CAAC3B,cAAc,CAAC0B,YAAY;IAC7G,MAAME,2BAA2B,GAAG,IAAI,CAAC3C,GAAG,CAACiC,WAAW,CAAC,CAAC,CAACC,QAAQ;IACnE,MAAMU,WAAW,GAAGC,KAAK,CAACC,OAAO,CAAC,IAAI,CAAC/B,cAAc,CAACgC,MAAM,CAAC,GAAG,IAAI,CAAChC,cAAc,CAACgC,MAAM,GAAG,IAAI;IACjG,MAAMC,UAAU,GAAGJ,WAAW,KAAK,IAAI,IAAIA,WAAW,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,WAAW,CAACrF,MAAM;IAC/F,MAAM;MACJ6E,GAAG,EAAEa,QAAQ;MACbZ,GAAG,EAAEa;IACP,CAAC,GAAG,IAAI;IACR,IAAI,CAACC,mBAAmB,CAAC,CAAC;IAC1B,IAAI,CAACC,KAAK,CAAC,CAAC;IACZ,IAAIC,cAAc,GAAGxF,iBAAiB,CAAC,CAAC;IACxC,IAAIwF,cAAc,KAAK,CAAC,IAAI3E,OAAO,CAAC,CAAC,EAAE;MACrC2E,cAAc,IAAI,EAAE,CAAC,CAAC;IACxB;IACA,IAAI,CAACC,OAAO,CAAC,eAAe,EAAEC,KAAK,IAAI,IAAI,CAACC,eAAe,CAACD,KAAK,CAAC,CAAC;IACnE,IAAI,CAACE,QAAQ,CAACC,cAAc,CAAC;MAC3BC,SAAS,EAAElB,YAAY,GAAG,CAACvE,UAAU,CAAC,IAAI,CAACyD,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAGe,SAAS;MACrEkB,KAAK,EAAEnB,YAAY,GAAGvE,UAAU,CAAC,IAAI,CAACyD,QAAQ,CAAC,GAAG0B,cAAc,GAAGX,SAAS;MAC5EmB,cAAc,EAAE,IAAI;MACpBC,QAAQ,EAAEA,CAACC,WAAW,EAAEC,EAAE,EAAE5B,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEhG,KAAK,EAAEyE,cAAc,KAAK;QACpEpC,YAAY,CAACoF,WAAW,EAAEC,EAAE,EAAE5B,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEhG,KAAK,EAAEyE,cAAc,CAAC;QACpE,MAAM;UACJkD,sBAAsB;UACtBC,SAAS;UACTpD;QACF,CAAC,GAAG,IAAI,CAACC,cAAc;QACvB,MAAMoD,KAAK,GAAG,IAAI,CAACA,KAAK;QACxB,IAAIC,SAAS,GAAG9F,SAAS,CAAChC,KAAK,CAAC;QAChC,IAAI+H,YAAY;QAChB,IAAIC,KAAK;QACT,IAAIF,SAAS,IAAI,CAACF,SAAS,EAAE;UAC3BG,YAAY,GAAGJ,sBAAsB,KAAK,IAAI,GAAGG,SAAS,CAACvD,OAAO,CAACsD,KAAK,CAAC,GAAGC,SAAS,CAACpD,iBAAiB,CAACF,MAAM,CAAC,CAACD,OAAO,CAACsD,KAAK,CAACnD,iBAAiB,CAACF,MAAM,CAAC,CAAC;UACxJ,IAAIuD,YAAY,KAAK,CAAC,CAAC,EAAE;YACvBC,KAAK,GAAGF,SAAS,CAACG,MAAM,CAACF,YAAY,EAAEF,KAAK,CAAC5G,MAAM,CAAC;YACpD6G,SAAS,GAAGA,SAAS,CAACI,OAAO,CAACF,KAAK,EAAE,WAAWA,KAAK,WAAW,CAAC;UACnE;QACF;QACA,IAAI3B,2BAA2B,EAAE;UAC/BxE,YAAY,CAAC6F,EAAE,EAAE,CAAC5E,WAAW,CAAC,CAAC;UAC/B;UACA,IAAIwD,WAAW,GAAG,CAACnD,YAAY,CAACuD,UAAU,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,IAAIJ,WAAW,GAAG,CAACvD,aAAa,CAACuD,WAAW,CAAC/B,OAAO,CAACvE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,GAAG,IAAI,CAACmH,QAAQ,CAACgB,WAAW,CAACC,EAAE,IAAItC,GAAG,IAAIC,GAAG,EAAE,CAAC,CAAC,CAAC;QACxL;QACA2B,EAAE,CAACW,SAAS,GAAGP,SAAS;MAC1B,CAAC;MACDQ,iBAAiB,EAAEA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;QACzC,IAAInC,2BAA2B,EAAE;UAC/B,MAAMqB,EAAE,GAAG,IAAI,CAACP,QAAQ,CAACsB,OAAO,CAACF,QAAQ,EAAEC,QAAQ,EAAE,IAAI,CAAC;UAC1D3G,YAAY,CAAC6F,EAAE,EAAE,CAACxE,aAAa,CAAC,CAAC,CAAC,CAAC;UACnCrB,YAAY,CAAC,IAAI,CAACwD,QAAQ,EAAE,GAAG/C,qBAAqB,CAACoF,EAAE,CAACU,EAAE,CAAC,CAAC;QAC9D;MACF;IACF,CAAC,CAAC;IACF,IAAI/B,2BAA2B,EAAE;MAC/B;MACAxE,YAAY,CAAC,IAAI,CAACsF,QAAQ,CAACuB,IAAI,CAACC,GAAG,CAACC,UAAU,CAACC,OAAO,CAACC,KAAK,EAAE,GAAG9F,iBAAiB,CAAC,CAAC,CAAC;MACrFnB,YAAY,CAAC,IAAI,CAACsF,QAAQ,CAACgB,WAAW,EAAE,CAACvF,YAAY,CAAC,CAAC,EAAEC,SAAS,CAAC,QAAQ,CAAC,EAAEI,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,GAAGtC,qBAAqB,CAAC2C,SAAS,EAAE,IAAI,CAAC,YAAYqD,QAAQ,IAAIC,QAAQ,EAAE,CAAC,CAAC,CAAC;MAC1L/E,YAAY,CAAC,IAAI,CAACwD,QAAQ,EAAE,GAAG3C,aAAa,CAAC,MAAM,CAAC,CAAC;IACvD;IACA,IAAI,CAACgB,GAAG,CAACqF,gBAAgB,CAAC,MAAM;MAC9B,IAAI,CAACC,YAAY,CAAC,IAAI,CAAC3D,QAAQ,CAACrF,KAAK,CAAC;IACxC,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;EACEiJ,KAAKA,CAAA,EAAG;IACN,IAAI,CAACC,gBAAgB,CAAC,eAAe,CAAC;IACtC,KAAK,CAACD,KAAK,CAAC,CAAC;IACb,IAAI,IAAI,CAACvF,GAAG,CAACiC,WAAW,CAAC,CAAC,CAACC,QAAQ,EAAE;MACnC/D,YAAY,CAAC,IAAI,CAACwD,QAAQ,EAAE,CAAC3C,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;IACvD;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEyG,aAAaA,CAACnF,MAAM,EAAE;IACpB,KAAK,CAACmF,aAAa,CAACnF,MAAM,CAAC;IAC3B,IAAI,CAACN,GAAG,CAACgF,IAAI,CAACU,MAAM,CAAC,CAAC;EACxB;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEJ,YAAYA,CAACnB,KAAK,EAAE;IAClB,MAAMpB,MAAM,GAAG,IAAI,CAAChC,cAAc,CAACgC,MAAM;IACzC,IAAI,CAACoB,KAAK,GAAGA,KAAK;IAClB,IAAI,OAAOpB,MAAM,KAAK,UAAU,EAAE;MAChCA,MAAM,CAACjG,IAAI,CAAC,IAAI,CAACiE,cAAc,EAAEoD,KAAK,EAAEhE,OAAO,IAAI;QACjD,IAAI,CAACoB,UAAU,GAAGpB,OAAO;QACzB,IAAI,CAACwF,iBAAiB,CAAC,IAAI,CAACC,mBAAmB,CAACzF,OAAO,CAAC,CAAC;MAC3D,CAAC,CAAC;IACJ,CAAC,MAAM,IAAI0C,KAAK,CAACC,OAAO,CAACC,MAAM,CAAC,EAAE;MAChC,IAAI,CAACxB,UAAU,GAAGwB,MAAM;MACxB,IAAI,CAAC4C,iBAAiB,CAAC,IAAI,CAACC,mBAAmB,CAAC7C,MAAM,CAAC,CAAC;IAC1D,CAAC,MAAM;MACL,IAAI,CAAC4C,iBAAiB,CAAC,EAAE,CAAC;IAC5B;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEA,iBAAiBA,CAACE,WAAW,EAAE;IAC7B,MAAMC,GAAG,GAAGlI,gBAAgB,CAAC,IAAI,CAAC+D,QAAQ,CAAC;IAC3C,MAAMoE,MAAM,GAAGjI,uBAAuB,CAAC,IAAI,CAAC6D,QAAQ,CAAC;IACrD,MAAMqE,sBAAsB,GAAG,IAAI,CAACjF,cAAc,CAACkF,eAAe;IAClE,MAAMC,aAAa,GAAG,IAAI,CAACnF,cAAc,CAACoF,MAAM;IAChD,IAAIC,gBAAgB,GAAG,IAAI;IAC3B,IAAIC,cAAc,GAAG,IAAI;IACzB,IAAIlG,OAAO,GAAG0F,WAAW;IACzB,IAAIG,sBAAsB,EAAE;MAC1BI,gBAAgB,GAAG,IAAI,CAACH,eAAe,CAAC,IAAI,CAACvE,kBAAkB,CAAC,IAAI,CAACL,QAAQ,CAAC,CAAC,CAAC,EAAElB,OAAO,EAAE,IAAI,CAACY,cAAc,CAACkD,sBAAsB,CAAC;IACxI;IACA,MAAMqC,sBAAsB,GAAGzD,KAAK,CAACC,OAAO,CAACsD,gBAAgB,CAAC,GAAGA,gBAAgB,CAAC7I,MAAM,GAAG,CAAC;IAC5F,IAAI2I,aAAa,KAAK,KAAK,EAAE;MAC3B,IAAII,sBAAsB,EAAE;QAC1BD,cAAc,GAAGD,gBAAgB,CAAC,CAAC,CAAC;MACtC;IACF,CAAC,MAAM;MACL,MAAMG,MAAM,GAAG,EAAE;MACjB,KAAK,IAAI7J,CAAC,GAAG,CAAC,EAAE8D,YAAY,GAAGL,OAAO,CAAC5C,MAAM,EAAEb,CAAC,GAAG8D,YAAY,EAAE9D,CAAC,EAAE,EAAE;QACpE,IAAIsJ,sBAAsB,IAAIM,sBAAsB,IAAI5J,CAAC,EAAE;UACzD;QACF;QACA,IAAI4J,sBAAsB,EAAE;UAC1BC,MAAM,CAAC3F,IAAI,CAACT,OAAO,CAACiG,gBAAgB,CAAC1J,CAAC,CAAC,CAAC,CAAC;QAC3C,CAAC,MAAM;UACL6J,MAAM,CAAC3F,IAAI,CAACT,OAAO,CAACzD,CAAC,CAAC,CAAC;QACzB;MACF;MACA2J,cAAc,GAAG,CAAC;MAClBlG,OAAO,GAAGoG,MAAM;IAClB;IACA,IAAI,CAACC,eAAe,GAAGrG,OAAO;IAC9B,IAAIA,OAAO,CAAC5C,MAAM,KAAK,CAAC,EAAE;MACxB,IAAI,CAACkG,QAAQ,CAACgB,WAAW,CAACgC,KAAK,CAACC,OAAO,GAAG,MAAM;IAClD,CAAC,MAAM;MACL,IAAI,CAACjD,QAAQ,CAACgB,WAAW,CAACgC,KAAK,CAACC,OAAO,GAAG,EAAE;IAC9C;IACA,IAAI,CAACjD,QAAQ,CAACkD,QAAQ,CAACjJ,KAAK,CAAC,CAACyC,OAAO,CAAC,CAAC,CAAC;IACxC,IAAIA,OAAO,CAAC5C,MAAM,GAAG,CAAC,EAAE;MACtB,IAAI,CAACqJ,wBAAwB,CAAC,CAAC;MAC/B,IAAI,CAACC,oBAAoB,CAAC,CAAC;MAC3B,IAAI,IAAI,CAAC9F,cAAc,CAAC+F,MAAM,KAAK,IAAI,EAAE;QACvC,IAAI,CAACC,2BAA2B,CAACV,cAAc,CAAC;MAClD;IACF;IACA,IAAI,CAACrG,GAAG,CAACgH,MAAM,CAAC,CAAC;IACjB5I,gBAAgB,CAAC,IAAI,CAACuD,QAAQ,EAAEmE,GAAG,EAAEA,GAAG,KAAKC,MAAM,GAAGrD,SAAS,GAAGqD,MAAM,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEc,oBAAoBA,CAAA,EAAG;IACrB,MAAMI,iBAAiB,GAAGlJ,oBAAoB,CAAC,IAAI,CAACiC,GAAG,CAACgF,IAAI,CAACC,GAAG,CAACE,OAAO,CAACC,KAAK,CAAC;IAC/E,MAAM8B,2BAA2B,GAAGD,iBAAiB,KAAK,IAAI,CAACjH,GAAG,CAAC8B,UAAU;IAC7E,MAAMqF,eAAe,GAAG,IAAI,CAACpG,cAAc,CAACoG,eAAe;IAC3D,IAAID,2BAA2B,IAAI,CAACA,2BAA2B,KAAKC,eAAe,IAAIA,eAAe,KAAK,YAAY,CAAC,EAAE;MACxH,OAAO,KAAK;IACd;IACA,MAAMC,cAAc,GAAGpJ,MAAM,CAAC,IAAI,CAAC2D,QAAQ,CAAC;IAC5C,MAAM0F,cAAc,GAAGpJ,WAAW,CAAC,IAAI,CAAC0D,QAAQ,CAAC;IACjD,MAAM2F,cAAc,GAAG,IAAI,CAACC,iBAAiB,CAAC,CAAC;IAC/C,MAAMC,0BAA0B,GAAGP,iBAAiB,CAACQ,SAAS;IAC9D,MAAMC,aAAa,GAAGzJ,WAAW,CAAC,IAAI,CAAC+B,GAAG,CAACgF,IAAI,CAACC,GAAG,CAACE,OAAO,CAACwC,KAAK,CAAC;IAClE,MAAMC,eAAe,GAAG5J,MAAM,CAACiJ,iBAAiB,CAAC;IACjD,MAAMY,UAAU,GAAGT,cAAc,CAACU,GAAG,GAAGF,eAAe,CAACE,GAAG,GAAGJ,aAAa,GAAGF,0BAA0B;IACxG,MAAMO,UAAU,GAAGd,iBAAiB,CAACe,YAAY,GAAGH,UAAU,GAAGH,aAAa,GAAGL,cAAc;IAC/F,MAAMY,UAAU,GAAGX,cAAc,GAAGS,UAAU,IAAIF,UAAU,GAAGE,UAAU;IACzE,IAAIE,UAAU,EAAE;MACd,IAAI,CAACC,YAAY,CAACZ,cAAc,CAAC;IACnC,CAAC,MAAM;MACL,IAAI,CAACa,cAAc,CAAC,CAAC;IACvB;IACA,IAAI,CAACC,qBAAqB,CAACH,UAAU,GAAGJ,UAAU,GAAGE,UAAU,EAAET,cAAc,CAAC;IAChF,OAAOW,UAAU;EACnB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEG,qBAAqBA,CAACC,cAAc,EAAEf,cAAc,EAAE;IACpD,IAAIA,cAAc,GAAGe,cAAc,EAAE;MACnC,IAAIC,UAAU,GAAG,CAAC;MAClB,IAAI5L,CAAC,GAAG,CAAC;MACT,IAAI6L,aAAa,GAAG,CAAC;MACrB,IAAIC,MAAM,GAAG,IAAI;MACjB,GAAG;QACDD,aAAa,GAAG,IAAI,CAAC9E,QAAQ,CAACgF,YAAY,CAAC/L,CAAC,CAAC,IAAI,IAAI,CAAC+G,QAAQ,CAACuB,IAAI,CAACC,GAAG,CAACyD,UAAU,CAAC,kBAAkB,CAAC;QACtGJ,UAAU,IAAIC,aAAa;QAC3B7L,CAAC,IAAI,CAAC;MACR,CAAC,QAAQ4L,UAAU,GAAGD,cAAc;MACpCG,MAAM,GAAGF,UAAU,GAAGC,aAAa;MACnC,IAAI,IAAI,CAAC9E,QAAQ,CAACkF,OAAO,EAAE;QACzB,IAAI,CAAClF,QAAQ,CAACgB,WAAW,CAACgC,KAAK,CAACqB,GAAG,GAAG,GAAGc,QAAQ,CAAC,IAAI,CAACnF,QAAQ,CAACgB,WAAW,CAACgC,KAAK,CAACqB,GAAG,EAAE,EAAE,CAAC,GAAGR,cAAc,GAAGkB,MAAM,IAAI;MAC1H;MACA,IAAI,CAACK,iBAAiB,CAACP,UAAU,GAAGC,aAAa,CAAC;IACpD;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEL,YAAYA,CAACZ,cAAc,EAAE;IAC3B,MAAMwB,aAAa,GAAG,IAAI,CAACrF,QAAQ,CAACgB,WAAW,CAACgC,KAAK;IACrDqC,aAAa,CAACC,QAAQ,GAAG,UAAU;IACnCD,aAAa,CAAChB,GAAG,GAAG,GAAG,CAACR,cAAc,IAAI;IAC1C,IAAI,CAAC7D,QAAQ,CAACkF,OAAO,GAAG,IAAI;EAC9B;;EAEA;AACF;AACA;AACA;AACA;EACER,cAAcA,CAAA,EAAG;IACf,MAAMW,aAAa,GAAG,IAAI,CAACrF,QAAQ,CAACgB,WAAW,CAACgC,KAAK;IACrDqC,aAAa,CAACC,QAAQ,GAAG,UAAU;IACnCD,aAAa,CAAChB,GAAG,GAAG,EAAE;IACtB,IAAI,CAACrE,QAAQ,CAACkF,OAAO,GAAGjG,SAAS;EACnC;;EAEA;AACF;AACA;AACA;AACA;EACEkE,wBAAwBA,CAAA,EAAG;IACzB,MAAMoC,oBAAoB,GAAG,IAAI,CAACvF,QAAQ,CAACwF,WAAW,CAAC,CAAC,CAAC,GAAGpL,iBAAiB,CAAC,IAAI,CAACmC,GAAG,CAACkJ,YAAY,CAAC,GAAG,CAAC;IACxG,MAAMzG,YAAY,GAAG,IAAI,CAAC1B,cAAc,CAAC0B,YAAY;IACrD,IAAI,CAACgB,QAAQ,CAACC,cAAc,CAAC;MAC3B8E,MAAM,EAAE,IAAI,CAACjB,iBAAiB,CAAC,CAAC;MAChC3D,KAAK,EAAEnB,YAAY,GAAGC,SAAS,GAAGsG;IACpC,CAAC,CAAC;IACF,IAAI,CAACvF,QAAQ,CAACuB,IAAI,CAACC,GAAG,CAACE,OAAO,CAACgE,kCAAkC,CAAC,CAAC;EACrE;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEN,iBAAiBA,CAACL,MAAM,EAAE;IACxB,IAAI,CAAC/E,QAAQ,CAACC,cAAc,CAAC;MAC3B8E;IACF,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEzB,2BAA2BA,CAAC7F,KAAK,EAAE;IACjC,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC7B,IAAI,CAACuC,QAAQ,CAAC2F,UAAU,CAAClI,KAAK,EAAE,CAAC,EAAEwB,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAE,KAAK,CAAC;IAC5E,CAAC,MAAM;MACL,IAAI,CAACe,QAAQ,CAAC4F,YAAY,CAAC,CAAC;IAC9B;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE9B,iBAAiBA,CAAA,EAAG;IAClB,MAAM+B,cAAc,GAAG,IAAI,CAAC7F,QAAQ,CAACgF,YAAY,CAAC,CAAC,CAAC,IAAI,EAAE;IAC1D,MAAMc,WAAW,GAAG,IAAI,CAACxI,cAAc,CAACwI,WAAW;IACnD,OAAO,IAAI,CAAC/C,eAAe,CAACjJ,MAAM,IAAIgM,WAAW,GAAGA,WAAW,GAAGD,cAAc,GAAG,IAAI,CAAC9C,eAAe,CAACjJ,MAAM,GAAG+L,cAAc,GAAG,CAAC,CAAC,CAAC;EACvI;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACE5H,kBAAkBA,CAACpF,KAAK,EAAE;IACxB,OAAO,IAAI,CAACsJ,mBAAmB,CAAC,CAACtJ,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7C;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEsJ,mBAAmBA,CAAC4D,MAAM,EAAE;IAC1B,MAAM;MACJtF;IACF,CAAC,GAAG,IAAI,CAACnD,cAAc;IACvB,MAAM0I,iBAAiB,GAAGhM,QAAQ,CAAC+L,MAAM,EAAElN,KAAK,IAAIgC,SAAS,CAAChC,KAAK,CAAC,CAAC;IACrE,MAAMoN,cAAc,GAAGjM,QAAQ,CAACgM,iBAAiB,EAAEnN,KAAK,IAAI4H,SAAS,GAAG5H,KAAK,GAAGiC,SAAS,CAACjC,KAAK,CAAC,CAAC;IACjG,OAAOoN,cAAc;EACvB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,wBAAwBA,CAACC,OAAO,EAAE;IAChC,MAAMC,aAAa,GAAG,IAAI,CAACpG,QAAQ,CAACqG,oBAAoB,CAAC,CAAC;IAC1D,MAAMC,QAAQ,GAAG;MACf3H,GAAG,EAAEyH,aAAa,GAAGA,aAAa,CAACG,IAAI,CAAC5H,GAAG,GAAG,CAAC;IACjD,CAAC;IACD,IAAI6H,OAAO,GAAG,KAAK;IACnB,IAAIL,OAAO,KAAKpL,SAAS,CAAC0L,UAAU,IAAIH,QAAQ,CAAC3H,GAAG,GAAG,CAAC,IAAI2H,QAAQ,CAAC3H,GAAG,GAAG,IAAI,CAACqB,QAAQ,CAAC0G,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE;MACxGF,OAAO,GAAG,IAAI;IAChB;IACA,IAAIL,OAAO,KAAKpL,SAAS,CAAC4L,QAAQ,IAAIL,QAAQ,CAAC3H,GAAG,GAAG,CAAC,CAAC,EAAE;MACvD6H,OAAO,GAAG,IAAI;IAChB;IACA,OAAOA,OAAO;EAChB;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEzG,eAAeA,CAACD,KAAK,EAAE;IACrB,IAAI9E,eAAe,CAAC8E,KAAK,CAACqG,OAAO,CAAC,IAAIrG,KAAK,CAACqG,OAAO,KAAKpL,SAAS,CAAC6L,SAAS,IAAI9G,KAAK,CAACqG,OAAO,KAAKpL,SAAS,CAAC8L,MAAM,IAAI/G,KAAK,CAACqG,OAAO,KAAKpL,SAAS,CAAC+L,MAAM,EAAE;MACvJ;MACA;MACA;MACA;MACA,IAAIC,UAAU,GAAG,EAAE;;MAEnB;MACA,IAAIjH,KAAK,CAACqG,OAAO,KAAKpL,SAAS,CAACiM,CAAC,KAAKlH,KAAK,CAACmH,OAAO,IAAInH,KAAK,CAACoH,OAAO,CAAC,EAAE;QACrE;MACF;MACA,IAAI,CAAC,IAAI,CAACC,QAAQ,CAAC,CAAC,EAAE;QACpBJ,UAAU,IAAI,EAAE;MAClB;MACA,IAAI,IAAI,CAAC/G,QAAQ,EAAE;QACjB,IAAI,CAACzD,GAAG,CAACqF,gBAAgB,CAAC,MAAM;UAC9B,IAAI,CAACC,YAAY,CAAC,IAAI,CAAC3D,QAAQ,CAACrF,KAAK,CAAC;QACxC,CAAC,EAAEkO,UAAU,CAAC;MAChB;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}