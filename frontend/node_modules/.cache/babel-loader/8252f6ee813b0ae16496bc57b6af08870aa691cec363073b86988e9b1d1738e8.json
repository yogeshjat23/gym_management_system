{"ast":null,"code":"function _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { rangeEach } from \"../../helpers/number.mjs\";\n/**\n * @private\n */\nclass DataProvider {\n  constructor(hotInstance) {\n    /**\n     * Handsontable instance.\n     *\n     * @type {Core}\n     */\n    _defineProperty(this, \"hot\", void 0);\n    /**\n     * Format type class options.\n     *\n     * @type {object}\n     */\n    _defineProperty(this, \"options\", {});\n    this.hot = hotInstance;\n  }\n\n  /**\n   * Set options for data provider.\n   *\n   * @param {object} options Object with specified options.\n   */\n  setOptions(options) {\n    this.options = options;\n  }\n\n  /**\n   * Get table data based on provided settings to the class constructor.\n   *\n   * @returns {Array}\n   */\n  getData() {\n    const {\n      startRow,\n      startCol,\n      endRow,\n      endCol\n    } = this._getDataRange();\n    const options = this.options;\n    const data = [];\n    rangeEach(startRow, endRow, rowIndex => {\n      const row = [];\n      if (!options.exportHiddenRows && this._isHiddenRow(rowIndex)) {\n        return;\n      }\n      rangeEach(startCol, endCol, colIndex => {\n        if (!options.exportHiddenColumns && this._isHiddenColumn(colIndex)) {\n          return;\n        }\n        row.push(this.hot.getDataAtCell(rowIndex, colIndex));\n      });\n      data.push(row);\n    });\n    return data;\n  }\n\n  /**\n   * Gets list of row headers.\n   *\n   * @returns {Array}\n   */\n  getRowHeaders() {\n    const headers = [];\n    if (this.options.rowHeaders) {\n      const {\n        startRow,\n        endRow\n      } = this._getDataRange();\n      const rowHeaders = this.hot.getRowHeader();\n      rangeEach(startRow, endRow, row => {\n        if (!this.options.exportHiddenRows && this._isHiddenRow(row)) {\n          return;\n        }\n        headers.push(rowHeaders[row]);\n      });\n    }\n    return headers;\n  }\n\n  /**\n   * Gets list of columns headers.\n   *\n   * @returns {Array}\n   */\n  getColumnHeaders() {\n    const headers = [];\n    if (this.options.columnHeaders) {\n      const {\n        startCol,\n        endCol\n      } = this._getDataRange();\n      const colHeaders = this.hot.getColHeader();\n      rangeEach(startCol, endCol, column => {\n        if (!this.options.exportHiddenColumns && this._isHiddenColumn(column)) {\n          return;\n        }\n        headers.push(colHeaders[column]);\n      });\n    }\n    return headers;\n  }\n\n  /**\n   * Get data range object based on settings provided in the class constructor.\n   *\n   * @private\n   * @returns {object} Returns object with keys `startRow`, `startCol`, `endRow` and `endCol`.\n   */\n  _getDataRange() {\n    const cols = this.hot.countCols() - 1;\n    const rows = this.hot.countRows() - 1;\n    let [startRow = 0, startCol = 0, endRow = rows, endCol = cols] = this.options.range;\n    startRow = Math.max(startRow, 0);\n    startCol = Math.max(startCol, 0);\n    endRow = Math.min(endRow, rows);\n    endCol = Math.min(endCol, cols);\n    return {\n      startRow,\n      startCol,\n      endRow,\n      endCol\n    };\n  }\n\n  /**\n   * Check if row at specified row index is hidden.\n   *\n   * @private\n   * @param {number} row Row index.\n   * @returns {boolean}\n   */\n  _isHiddenRow(row) {\n    return this.hot.rowIndexMapper.isHidden(this.hot.toPhysicalRow(row));\n  }\n\n  /**\n   * Check if column at specified column index is hidden.\n   *\n   * @private\n   * @param {number} column Visual column index.\n   * @returns {boolean}\n   */\n  _isHiddenColumn(column) {\n    return this.hot.columnIndexMapper.isHidden(this.hot.toPhysicalColumn(column));\n  }\n}\nexport default DataProvider;","map":{"version":3,"names":["_defineProperty","e","r","t","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","rangeEach","DataProvider","constructor","hotInstance","hot","setOptions","options","getData","startRow","startCol","endRow","endCol","_getDataRange","data","rowIndex","row","exportHiddenRows","_isHiddenRow","colIndex","exportHiddenColumns","_isHiddenColumn","push","getDataAtCell","getRowHeaders","headers","rowHeaders","getRowHeader","getColumnHeaders","columnHeaders","colHeaders","getColHeader","column","cols","countCols","rows","countRows","range","Math","max","min","rowIndexMapper","isHidden","toPhysicalRow","columnIndexMapper","toPhysicalColumn"],"sources":["D:/gym-project/frontend/node_modules/handsontable/plugins/exportFile/dataProvider.mjs"],"sourcesContent":["import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { rangeEach } from \"../../helpers/number.mjs\";\n/**\n * @private\n */\nclass DataProvider {\n  constructor(hotInstance) {\n    /**\n     * Handsontable instance.\n     *\n     * @type {Core}\n     */\n    _defineProperty(this, \"hot\", void 0);\n    /**\n     * Format type class options.\n     *\n     * @type {object}\n     */\n    _defineProperty(this, \"options\", {});\n    this.hot = hotInstance;\n  }\n\n  /**\n   * Set options for data provider.\n   *\n   * @param {object} options Object with specified options.\n   */\n  setOptions(options) {\n    this.options = options;\n  }\n\n  /**\n   * Get table data based on provided settings to the class constructor.\n   *\n   * @returns {Array}\n   */\n  getData() {\n    const {\n      startRow,\n      startCol,\n      endRow,\n      endCol\n    } = this._getDataRange();\n    const options = this.options;\n    const data = [];\n    rangeEach(startRow, endRow, rowIndex => {\n      const row = [];\n      if (!options.exportHiddenRows && this._isHiddenRow(rowIndex)) {\n        return;\n      }\n      rangeEach(startCol, endCol, colIndex => {\n        if (!options.exportHiddenColumns && this._isHiddenColumn(colIndex)) {\n          return;\n        }\n        row.push(this.hot.getDataAtCell(rowIndex, colIndex));\n      });\n      data.push(row);\n    });\n    return data;\n  }\n\n  /**\n   * Gets list of row headers.\n   *\n   * @returns {Array}\n   */\n  getRowHeaders() {\n    const headers = [];\n    if (this.options.rowHeaders) {\n      const {\n        startRow,\n        endRow\n      } = this._getDataRange();\n      const rowHeaders = this.hot.getRowHeader();\n      rangeEach(startRow, endRow, row => {\n        if (!this.options.exportHiddenRows && this._isHiddenRow(row)) {\n          return;\n        }\n        headers.push(rowHeaders[row]);\n      });\n    }\n    return headers;\n  }\n\n  /**\n   * Gets list of columns headers.\n   *\n   * @returns {Array}\n   */\n  getColumnHeaders() {\n    const headers = [];\n    if (this.options.columnHeaders) {\n      const {\n        startCol,\n        endCol\n      } = this._getDataRange();\n      const colHeaders = this.hot.getColHeader();\n      rangeEach(startCol, endCol, column => {\n        if (!this.options.exportHiddenColumns && this._isHiddenColumn(column)) {\n          return;\n        }\n        headers.push(colHeaders[column]);\n      });\n    }\n    return headers;\n  }\n\n  /**\n   * Get data range object based on settings provided in the class constructor.\n   *\n   * @private\n   * @returns {object} Returns object with keys `startRow`, `startCol`, `endRow` and `endCol`.\n   */\n  _getDataRange() {\n    const cols = this.hot.countCols() - 1;\n    const rows = this.hot.countRows() - 1;\n    let [startRow = 0, startCol = 0, endRow = rows, endCol = cols] = this.options.range;\n    startRow = Math.max(startRow, 0);\n    startCol = Math.max(startCol, 0);\n    endRow = Math.min(endRow, rows);\n    endCol = Math.min(endCol, cols);\n    return {\n      startRow,\n      startCol,\n      endRow,\n      endCol\n    };\n  }\n\n  /**\n   * Check if row at specified row index is hidden.\n   *\n   * @private\n   * @param {number} row Row index.\n   * @returns {boolean}\n   */\n  _isHiddenRow(row) {\n    return this.hot.rowIndexMapper.isHidden(this.hot.toPhysicalRow(row));\n  }\n\n  /**\n   * Check if column at specified column index is hidden.\n   *\n   * @private\n   * @param {number} column Visual column index.\n   * @returns {boolean}\n   */\n  _isHiddenColumn(column) {\n    return this.hot.columnIndexMapper.isHidden(this.hot.toPhysicalColumn(column));\n  }\n}\nexport default DataProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}