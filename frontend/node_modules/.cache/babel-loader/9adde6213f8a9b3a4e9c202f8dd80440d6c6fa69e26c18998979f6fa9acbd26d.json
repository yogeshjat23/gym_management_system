{"ast":null,"code":"import { empty, setAttribute, removeAttribute } from \"./../../../../helpers/dom/element.mjs\";\nimport BaseRenderer from \"./_base.mjs\";\nimport { A11Y_COLINDEX, A11Y_COLUMNHEADER, A11Y_ROW, A11Y_ROWGROUP, A11Y_ROWINDEX, A11Y_SCOPE_COL, A11Y_TABINDEX } from \"../../../../helpers/a11y.mjs\";\n/**\n * Column headers renderer responsible for managing (inserting, tracking, rendering) TR and TH elements.\n *\n *   <thead> (root node)\n *     ├ <tr>   \\\n *     ├ <tr>    \\\n *     ├ <tr>     - ColumnHeadersRenderer\n *     ├ <tr>    /\n *     └ <tr>   /.\n *\n * @class {ColumnHeadersRenderer}\n */\nexport default class ColumnHeadersRenderer extends BaseRenderer {\n  constructor(rootNode) {\n    super(null, rootNode); // NodePool is not implemented for this renderer yet\n  }\n\n  /**\n   * Adjusts the number of the rendered elements.\n   */\n  adjust() {\n    const {\n      columnHeadersCount,\n      rowHeadersCount\n    } = this.table;\n    let TR = this.rootNode.firstChild;\n    if (columnHeadersCount) {\n      const {\n        columnsToRender\n      } = this.table;\n      const allColumnsToRender = columnsToRender + rowHeadersCount;\n      for (let i = 0, len = columnHeadersCount; i < len; i++) {\n        TR = this.rootNode.childNodes[i];\n        if (!TR) {\n          TR = this.table.rootDocument.createElement('tr');\n          this.rootNode.appendChild(TR);\n        }\n        this.renderedNodes = TR.childNodes.length;\n        while (this.renderedNodes < allColumnsToRender) {\n          TR.appendChild(this.table.rootDocument.createElement('th'));\n          this.renderedNodes += 1;\n        }\n        while (this.renderedNodes > allColumnsToRender) {\n          TR.removeChild(TR.lastChild);\n          this.renderedNodes -= 1;\n        }\n      }\n      const theadChildrenLength = this.rootNode.childNodes.length;\n      if (theadChildrenLength > columnHeadersCount) {\n        for (let i = columnHeadersCount; i < theadChildrenLength; i++) {\n          this.rootNode.removeChild(this.rootNode.lastChild);\n        }\n      }\n    } else if (TR) {\n      empty(TR);\n    }\n  }\n\n  /**\n   * Renders the TH elements.\n   */\n  render() {\n    const {\n      columnHeadersCount\n    } = this.table;\n    if (this.table.isAriaEnabled()) {\n      setAttribute(this.rootNode, [A11Y_ROWGROUP()]);\n    }\n    for (let rowHeaderIndex = 0; rowHeaderIndex < columnHeadersCount; rowHeaderIndex += 1) {\n      const {\n        columnHeaderFunctions,\n        columnsToRender,\n        rowHeadersCount\n      } = this.table;\n      const TR = this.rootNode.childNodes[rowHeaderIndex];\n      if (this.table.isAriaEnabled()) {\n        setAttribute(TR, [A11Y_ROW(), A11Y_ROWINDEX(rowHeaderIndex + 1)]);\n      }\n      for (let renderedColumnIndex = -1 * rowHeadersCount; renderedColumnIndex < columnsToRender; renderedColumnIndex += 1) {\n        // eslint-disable-line max-len\n        const sourceColumnIndex = this.table.renderedColumnToSource(renderedColumnIndex);\n        const TH = TR.childNodes[renderedColumnIndex + rowHeadersCount];\n        TH.className = '';\n        TH.removeAttribute('style');\n\n        // Remove all accessibility-related attributes for the header to start fresh.\n        removeAttribute(TH, [new RegExp('aria-(.*)'), new RegExp('role')]);\n        if (this.table.isAriaEnabled()) {\n          setAttribute(TH, [A11Y_COLINDEX(renderedColumnIndex + 1 + this.table.rowHeadersCount), A11Y_TABINDEX(-1), A11Y_COLUMNHEADER(), ...(renderedColumnIndex >= 0 ? [A11Y_SCOPE_COL()] : [\n          // Adding `role=row` to the corner headers to prevent\n          // https://github.com/handsontable/dev-handsontable/issues/1574\n          A11Y_ROW()])]);\n        }\n        columnHeaderFunctions[rowHeaderIndex](sourceColumnIndex, TH, rowHeaderIndex);\n      }\n    }\n  }\n}","map":{"version":3,"names":["empty","setAttribute","removeAttribute","BaseRenderer","A11Y_COLINDEX","A11Y_COLUMNHEADER","A11Y_ROW","A11Y_ROWGROUP","A11Y_ROWINDEX","A11Y_SCOPE_COL","A11Y_TABINDEX","ColumnHeadersRenderer","constructor","rootNode","adjust","columnHeadersCount","rowHeadersCount","table","TR","firstChild","columnsToRender","allColumnsToRender","i","len","childNodes","rootDocument","createElement","appendChild","renderedNodes","length","removeChild","lastChild","theadChildrenLength","render","isAriaEnabled","rowHeaderIndex","columnHeaderFunctions","renderedColumnIndex","sourceColumnIndex","renderedColumnToSource","TH","className","RegExp"],"sources":["D:/gym-project/frontend/node_modules/handsontable/3rdparty/walkontable/src/renderer/columnHeaders.mjs"],"sourcesContent":["import { empty, setAttribute, removeAttribute } from \"./../../../../helpers/dom/element.mjs\";\nimport BaseRenderer from \"./_base.mjs\";\nimport { A11Y_COLINDEX, A11Y_COLUMNHEADER, A11Y_ROW, A11Y_ROWGROUP, A11Y_ROWINDEX, A11Y_SCOPE_COL, A11Y_TABINDEX } from \"../../../../helpers/a11y.mjs\";\n/**\n * Column headers renderer responsible for managing (inserting, tracking, rendering) TR and TH elements.\n *\n *   <thead> (root node)\n *     ├ <tr>   \\\n *     ├ <tr>    \\\n *     ├ <tr>     - ColumnHeadersRenderer\n *     ├ <tr>    /\n *     └ <tr>   /.\n *\n * @class {ColumnHeadersRenderer}\n */\nexport default class ColumnHeadersRenderer extends BaseRenderer {\n  constructor(rootNode) {\n    super(null, rootNode); // NodePool is not implemented for this renderer yet\n  }\n\n  /**\n   * Adjusts the number of the rendered elements.\n   */\n  adjust() {\n    const {\n      columnHeadersCount,\n      rowHeadersCount\n    } = this.table;\n    let TR = this.rootNode.firstChild;\n    if (columnHeadersCount) {\n      const {\n        columnsToRender\n      } = this.table;\n      const allColumnsToRender = columnsToRender + rowHeadersCount;\n      for (let i = 0, len = columnHeadersCount; i < len; i++) {\n        TR = this.rootNode.childNodes[i];\n        if (!TR) {\n          TR = this.table.rootDocument.createElement('tr');\n          this.rootNode.appendChild(TR);\n        }\n        this.renderedNodes = TR.childNodes.length;\n        while (this.renderedNodes < allColumnsToRender) {\n          TR.appendChild(this.table.rootDocument.createElement('th'));\n          this.renderedNodes += 1;\n        }\n        while (this.renderedNodes > allColumnsToRender) {\n          TR.removeChild(TR.lastChild);\n          this.renderedNodes -= 1;\n        }\n      }\n      const theadChildrenLength = this.rootNode.childNodes.length;\n      if (theadChildrenLength > columnHeadersCount) {\n        for (let i = columnHeadersCount; i < theadChildrenLength; i++) {\n          this.rootNode.removeChild(this.rootNode.lastChild);\n        }\n      }\n    } else if (TR) {\n      empty(TR);\n    }\n  }\n\n  /**\n   * Renders the TH elements.\n   */\n  render() {\n    const {\n      columnHeadersCount\n    } = this.table;\n    if (this.table.isAriaEnabled()) {\n      setAttribute(this.rootNode, [A11Y_ROWGROUP()]);\n    }\n    for (let rowHeaderIndex = 0; rowHeaderIndex < columnHeadersCount; rowHeaderIndex += 1) {\n      const {\n        columnHeaderFunctions,\n        columnsToRender,\n        rowHeadersCount\n      } = this.table;\n      const TR = this.rootNode.childNodes[rowHeaderIndex];\n      if (this.table.isAriaEnabled()) {\n        setAttribute(TR, [A11Y_ROW(), A11Y_ROWINDEX(rowHeaderIndex + 1)]);\n      }\n      for (let renderedColumnIndex = -1 * rowHeadersCount; renderedColumnIndex < columnsToRender; renderedColumnIndex += 1) {\n        // eslint-disable-line max-len\n        const sourceColumnIndex = this.table.renderedColumnToSource(renderedColumnIndex);\n        const TH = TR.childNodes[renderedColumnIndex + rowHeadersCount];\n        TH.className = '';\n        TH.removeAttribute('style');\n\n        // Remove all accessibility-related attributes for the header to start fresh.\n        removeAttribute(TH, [new RegExp('aria-(.*)'), new RegExp('role')]);\n        if (this.table.isAriaEnabled()) {\n          setAttribute(TH, [A11Y_COLINDEX(renderedColumnIndex + 1 + this.table.rowHeadersCount), A11Y_TABINDEX(-1), A11Y_COLUMNHEADER(), ...(renderedColumnIndex >= 0 ? [A11Y_SCOPE_COL()] : [\n          // Adding `role=row` to the corner headers to prevent\n          // https://github.com/handsontable/dev-handsontable/issues/1574\n          A11Y_ROW()])]);\n        }\n        columnHeaderFunctions[rowHeaderIndex](sourceColumnIndex, TH, rowHeaderIndex);\n      }\n    }\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}