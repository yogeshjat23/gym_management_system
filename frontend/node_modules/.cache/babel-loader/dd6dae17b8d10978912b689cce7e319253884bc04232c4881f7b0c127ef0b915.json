{"ast":null,"code":"import staticRegister from \"../utils/staticRegister.mjs\";\nconst {\n  register,\n  getItem,\n  hasItem,\n  getNames,\n  getValues\n} = staticRegister('validators');\n\n/**\n * Retrieve validator function.\n *\n * @param {string} name Validator identification.\n * @returns {Function} Returns validator function.\n */\nfunction _getItem(name) {\n  if (typeof name === 'function') {\n    return name;\n  }\n  if (!hasItem(name)) {\n    throw Error(`No registered validator found under \"${name}\" name`);\n  }\n  return getItem(name);\n}\n\n/**\n * Register validator under its alias.\n *\n * @param {string|Function} name Validator's alias or validator function with its descriptor.\n * @param {Function} [validator] Validator function.\n */\nfunction _register(name, validator) {\n  if (typeof name !== 'string') {\n    validator = name;\n    name = validator.VALIDATOR_TYPE;\n  }\n  register(name, validator);\n}\nexport { _register as registerValidator, _getItem as getValidator, hasItem as hasValidator, getNames as getRegisteredValidatorNames, getValues as getRegisteredValidators };","map":{"version":3,"names":["staticRegister","register","getItem","hasItem","getNames","getValues","_getItem","name","Error","_register","validator","VALIDATOR_TYPE","registerValidator","getValidator","hasValidator","getRegisteredValidatorNames","getRegisteredValidators"],"sources":["D:/gym-project/frontend/node_modules/handsontable/validators/registry.mjs"],"sourcesContent":["import \"core-js/modules/es.error.cause.js\";\nimport staticRegister from \"../utils/staticRegister.mjs\";\nconst {\n  register,\n  getItem,\n  hasItem,\n  getNames,\n  getValues\n} = staticRegister('validators');\n\n/**\n * Retrieve validator function.\n *\n * @param {string} name Validator identification.\n * @returns {Function} Returns validator function.\n */\nfunction _getItem(name) {\n  if (typeof name === 'function') {\n    return name;\n  }\n  if (!hasItem(name)) {\n    throw Error(`No registered validator found under \"${name}\" name`);\n  }\n  return getItem(name);\n}\n\n/**\n * Register validator under its alias.\n *\n * @param {string|Function} name Validator's alias or validator function with its descriptor.\n * @param {Function} [validator] Validator function.\n */\nfunction _register(name, validator) {\n  if (typeof name !== 'string') {\n    validator = name;\n    name = validator.VALIDATOR_TYPE;\n  }\n  register(name, validator);\n}\nexport { _register as registerValidator, _getItem as getValidator, hasItem as hasValidator, getNames as getRegisteredValidatorNames, getValues as getRegisteredValidators };"],"mappings":"AACA,OAAOA,cAAc,MAAM,6BAA6B;AACxD,MAAM;EACJC,QAAQ;EACRC,OAAO;EACPC,OAAO;EACPC,QAAQ;EACRC;AACF,CAAC,GAAGL,cAAc,CAAC,YAAY,CAAC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA,SAASM,QAAQA,CAACC,IAAI,EAAE;EACtB,IAAI,OAAOA,IAAI,KAAK,UAAU,EAAE;IAC9B,OAAOA,IAAI;EACb;EACA,IAAI,CAACJ,OAAO,CAACI,IAAI,CAAC,EAAE;IAClB,MAAMC,KAAK,CAAC,wCAAwCD,IAAI,QAAQ,CAAC;EACnE;EACA,OAAOL,OAAO,CAACK,IAAI,CAAC;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,SAASA,CAACF,IAAI,EAAEG,SAAS,EAAE;EAClC,IAAI,OAAOH,IAAI,KAAK,QAAQ,EAAE;IAC5BG,SAAS,GAAGH,IAAI;IAChBA,IAAI,GAAGG,SAAS,CAACC,cAAc;EACjC;EACAV,QAAQ,CAACM,IAAI,EAAEG,SAAS,CAAC;AAC3B;AACA,SAASD,SAAS,IAAIG,iBAAiB,EAAEN,QAAQ,IAAIO,YAAY,EAAEV,OAAO,IAAIW,YAAY,EAAEV,QAAQ,IAAIW,2BAA2B,EAAEV,SAAS,IAAIW,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}