{"ast":null,"code":"import { isObject } from \"../../helpers/object.mjs\";\n/**\n * Creates a renderer object for the `MergeCells` plugin.\n *\n * @private\n * @param {MergeCells} plugin The `MergeCells` plugin instance.\n * @returns {{before: Function, after: Function}}\n */\nexport function createMergeCellRenderer(plugin) {\n  const {\n    hot\n  } = plugin;\n  const {\n    rowIndexMapper: rowMapper,\n    columnIndexMapper: columnMapper\n  } = hot;\n\n  /**\n   * Runs before the cell is rendered.\n   *\n   * @private\n   */\n  function before() {}\n\n  /**\n   * Runs after the cell is rendered.\n   *\n   * @private\n   * @param {HTMLElement} TD The cell to be modified.\n   * @param {number} row Row index.\n   * @param {number} col Visual column index.\n   */\n  function after(TD, row, col) {\n    const mergedCell = plugin.mergedCellsCollection.get(row, col);\n    if (!isObject(mergedCell)) {\n      TD.removeAttribute('rowspan');\n      TD.removeAttribute('colspan');\n      TD.style.display = '';\n      return;\n    }\n    const {\n      row: origRow,\n      col: origColumn,\n      colspan: origColspan,\n      rowspan: origRowspan\n    } = mergedCell;\n    const [lastMergedRowIndex, lastMergedColumnIndex] = plugin.translateMergedCellToRenderable(origRow, origRowspan, origColumn, origColspan);\n    const renderedRowIndex = rowMapper.getRenderableFromVisualIndex(row);\n    const renderedColumnIndex = columnMapper.getRenderableFromVisualIndex(col);\n    const maxRowSpan = lastMergedRowIndex - renderedRowIndex + 1; // Number of rendered columns.\n    const maxColSpan = lastMergedColumnIndex - renderedColumnIndex + 1; // Number of rendered columns.\n\n    const notHiddenRow = rowMapper.getNearestNotHiddenIndex(origRow, 1);\n    const notHiddenColumn = columnMapper.getNearestNotHiddenIndex(origColumn, 1);\n    const notHiddenRowspan = Math.min(origRowspan, maxRowSpan);\n    const notHiddenColspan = Math.min(origColspan, maxColSpan);\n    if (notHiddenRow === row && notHiddenColumn === col) {\n      TD.setAttribute('rowspan', notHiddenRowspan);\n      TD.setAttribute('colspan', notHiddenColspan);\n    } else {\n      TD.removeAttribute('rowspan');\n      TD.removeAttribute('colspan');\n      TD.style.display = 'none';\n    }\n  }\n  return {\n    before,\n    after\n  };\n}","map":{"version":3,"names":["isObject","createMergeCellRenderer","plugin","hot","rowIndexMapper","rowMapper","columnIndexMapper","columnMapper","before","after","TD","row","col","mergedCell","mergedCellsCollection","get","removeAttribute","style","display","origRow","origColumn","colspan","origColspan","rowspan","origRowspan","lastMergedRowIndex","lastMergedColumnIndex","translateMergedCellToRenderable","renderedRowIndex","getRenderableFromVisualIndex","renderedColumnIndex","maxRowSpan","maxColSpan","notHiddenRow","getNearestNotHiddenIndex","notHiddenColumn","notHiddenRowspan","Math","min","notHiddenColspan","setAttribute"],"sources":["D:/gym-project/frontend/node_modules/handsontable/plugins/mergeCells/renderer.mjs"],"sourcesContent":["import { isObject } from \"../../helpers/object.mjs\";\n/**\n * Creates a renderer object for the `MergeCells` plugin.\n *\n * @private\n * @param {MergeCells} plugin The `MergeCells` plugin instance.\n * @returns {{before: Function, after: Function}}\n */\nexport function createMergeCellRenderer(plugin) {\n  const {\n    hot\n  } = plugin;\n  const {\n    rowIndexMapper: rowMapper,\n    columnIndexMapper: columnMapper\n  } = hot;\n\n  /**\n   * Runs before the cell is rendered.\n   *\n   * @private\n   */\n  function before() {}\n\n  /**\n   * Runs after the cell is rendered.\n   *\n   * @private\n   * @param {HTMLElement} TD The cell to be modified.\n   * @param {number} row Row index.\n   * @param {number} col Visual column index.\n   */\n  function after(TD, row, col) {\n    const mergedCell = plugin.mergedCellsCollection.get(row, col);\n    if (!isObject(mergedCell)) {\n      TD.removeAttribute('rowspan');\n      TD.removeAttribute('colspan');\n      TD.style.display = '';\n      return;\n    }\n    const {\n      row: origRow,\n      col: origColumn,\n      colspan: origColspan,\n      rowspan: origRowspan\n    } = mergedCell;\n    const [lastMergedRowIndex, lastMergedColumnIndex] = plugin.translateMergedCellToRenderable(origRow, origRowspan, origColumn, origColspan);\n    const renderedRowIndex = rowMapper.getRenderableFromVisualIndex(row);\n    const renderedColumnIndex = columnMapper.getRenderableFromVisualIndex(col);\n    const maxRowSpan = lastMergedRowIndex - renderedRowIndex + 1; // Number of rendered columns.\n    const maxColSpan = lastMergedColumnIndex - renderedColumnIndex + 1; // Number of rendered columns.\n\n    const notHiddenRow = rowMapper.getNearestNotHiddenIndex(origRow, 1);\n    const notHiddenColumn = columnMapper.getNearestNotHiddenIndex(origColumn, 1);\n    const notHiddenRowspan = Math.min(origRowspan, maxRowSpan);\n    const notHiddenColspan = Math.min(origColspan, maxColSpan);\n    if (notHiddenRow === row && notHiddenColumn === col) {\n      TD.setAttribute('rowspan', notHiddenRowspan);\n      TD.setAttribute('colspan', notHiddenColspan);\n    } else {\n      TD.removeAttribute('rowspan');\n      TD.removeAttribute('colspan');\n      TD.style.display = 'none';\n    }\n  }\n  return {\n    before,\n    after\n  };\n}"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,0BAA0B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,uBAAuBA,CAACC,MAAM,EAAE;EAC9C,MAAM;IACJC;EACF,CAAC,GAAGD,MAAM;EACV,MAAM;IACJE,cAAc,EAAEC,SAAS;IACzBC,iBAAiB,EAAEC;EACrB,CAAC,GAAGJ,GAAG;;EAEP;AACF;AACA;AACA;AACA;EACE,SAASK,MAAMA,CAAA,EAAG,CAAC;;EAEnB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASC,KAAKA,CAACC,EAAE,EAAEC,GAAG,EAAEC,GAAG,EAAE;IAC3B,MAAMC,UAAU,GAAGX,MAAM,CAACY,qBAAqB,CAACC,GAAG,CAACJ,GAAG,EAAEC,GAAG,CAAC;IAC7D,IAAI,CAACZ,QAAQ,CAACa,UAAU,CAAC,EAAE;MACzBH,EAAE,CAACM,eAAe,CAAC,SAAS,CAAC;MAC7BN,EAAE,CAACM,eAAe,CAAC,SAAS,CAAC;MAC7BN,EAAE,CAACO,KAAK,CAACC,OAAO,GAAG,EAAE;MACrB;IACF;IACA,MAAM;MACJP,GAAG,EAAEQ,OAAO;MACZP,GAAG,EAAEQ,UAAU;MACfC,OAAO,EAAEC,WAAW;MACpBC,OAAO,EAAEC;IACX,CAAC,GAAGX,UAAU;IACd,MAAM,CAACY,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGxB,MAAM,CAACyB,+BAA+B,CAACR,OAAO,EAAEK,WAAW,EAAEJ,UAAU,EAAEE,WAAW,CAAC;IACzI,MAAMM,gBAAgB,GAAGvB,SAAS,CAACwB,4BAA4B,CAAClB,GAAG,CAAC;IACpE,MAAMmB,mBAAmB,GAAGvB,YAAY,CAACsB,4BAA4B,CAACjB,GAAG,CAAC;IAC1E,MAAMmB,UAAU,GAAGN,kBAAkB,GAAGG,gBAAgB,GAAG,CAAC,CAAC,CAAC;IAC9D,MAAMI,UAAU,GAAGN,qBAAqB,GAAGI,mBAAmB,GAAG,CAAC,CAAC,CAAC;;IAEpE,MAAMG,YAAY,GAAG5B,SAAS,CAAC6B,wBAAwB,CAACf,OAAO,EAAE,CAAC,CAAC;IACnE,MAAMgB,eAAe,GAAG5B,YAAY,CAAC2B,wBAAwB,CAACd,UAAU,EAAE,CAAC,CAAC;IAC5E,MAAMgB,gBAAgB,GAAGC,IAAI,CAACC,GAAG,CAACd,WAAW,EAAEO,UAAU,CAAC;IAC1D,MAAMQ,gBAAgB,GAAGF,IAAI,CAACC,GAAG,CAAChB,WAAW,EAAEU,UAAU,CAAC;IAC1D,IAAIC,YAAY,KAAKtB,GAAG,IAAIwB,eAAe,KAAKvB,GAAG,EAAE;MACnDF,EAAE,CAAC8B,YAAY,CAAC,SAAS,EAAEJ,gBAAgB,CAAC;MAC5C1B,EAAE,CAAC8B,YAAY,CAAC,SAAS,EAAED,gBAAgB,CAAC;IAC9C,CAAC,MAAM;MACL7B,EAAE,CAACM,eAAe,CAAC,SAAS,CAAC;MAC7BN,EAAE,CAACM,eAAe,CAAC,SAAS,CAAC;MAC7BN,EAAE,CAACO,KAAK,CAACC,OAAO,GAAG,MAAM;IAC3B;EACF;EACA,OAAO;IACLV,MAAM;IACNC;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}