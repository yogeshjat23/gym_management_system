{"ast":null,"code":"import { isEmpty } from \"../../../helpers/mixed.mjs\";\nimport { DO_NOT_SWAP, FIRST_BEFORE_SECOND, FIRST_AFTER_SECOND } from \"../sortService/index.mjs\";\n/**\n * Default sorting compare function factory. Method get as parameters `sortOrder` and `columnMeta` and return compare function.\n *\n * @param {string} sortOrder Sort order (`asc` for ascending, `desc` for descending).\n * @param {object} columnMeta Column meta object.\n * @param {object} columnPluginSettings Plugin settings for the column.\n * @returns {Function} The compare function.\n */\nexport function compareFunctionFactory(sortOrder, columnMeta, columnPluginSettings) {\n  const locale = columnMeta.locale;\n  return function (value, nextValue) {\n    const {\n      sortEmptyCells\n    } = columnPluginSettings;\n    if (typeof value === 'string') {\n      value = value.toLocaleLowerCase(locale);\n    }\n    if (typeof nextValue === 'string') {\n      nextValue = nextValue.toLocaleLowerCase(locale);\n    }\n    if (value === nextValue) {\n      return DO_NOT_SWAP;\n    }\n    if (isEmpty(value)) {\n      if (isEmpty(nextValue)) {\n        return DO_NOT_SWAP;\n      }\n\n      // Just fist value is empty and `sortEmptyCells` option was set\n      if (sortEmptyCells) {\n        return sortOrder === 'asc' ? FIRST_BEFORE_SECOND : FIRST_AFTER_SECOND;\n      }\n      return FIRST_AFTER_SECOND;\n    }\n    if (isEmpty(nextValue)) {\n      // Just second value is empty and `sortEmptyCells` option was set\n      if (sortEmptyCells) {\n        return sortOrder === 'asc' ? FIRST_AFTER_SECOND : FIRST_BEFORE_SECOND;\n      }\n      return FIRST_BEFORE_SECOND;\n    }\n    if (isNaN(value) && !isNaN(nextValue)) {\n      return sortOrder === 'asc' ? FIRST_AFTER_SECOND : FIRST_BEFORE_SECOND;\n    } else if (!isNaN(value) && isNaN(nextValue)) {\n      return sortOrder === 'asc' ? FIRST_BEFORE_SECOND : FIRST_AFTER_SECOND;\n    } else if (!(isNaN(value) || isNaN(nextValue))) {\n      value = parseFloat(value);\n      nextValue = parseFloat(nextValue);\n    }\n    if (value < nextValue) {\n      return sortOrder === 'asc' ? FIRST_BEFORE_SECOND : FIRST_AFTER_SECOND;\n    }\n    if (value > nextValue) {\n      return sortOrder === 'asc' ? FIRST_AFTER_SECOND : FIRST_BEFORE_SECOND;\n    }\n    return DO_NOT_SWAP;\n  };\n}\nexport const COLUMN_DATA_TYPE = 'default';","map":{"version":3,"names":["isEmpty","DO_NOT_SWAP","FIRST_BEFORE_SECOND","FIRST_AFTER_SECOND","compareFunctionFactory","sortOrder","columnMeta","columnPluginSettings","locale","value","nextValue","sortEmptyCells","toLocaleLowerCase","isNaN","parseFloat","COLUMN_DATA_TYPE"],"sources":["D:/gym-project/frontend/node_modules/handsontable/plugins/columnSorting/sortFunction/default.mjs"],"sourcesContent":["import { isEmpty } from \"../../../helpers/mixed.mjs\";\nimport { DO_NOT_SWAP, FIRST_BEFORE_SECOND, FIRST_AFTER_SECOND } from \"../sortService/index.mjs\";\n/**\n * Default sorting compare function factory. Method get as parameters `sortOrder` and `columnMeta` and return compare function.\n *\n * @param {string} sortOrder Sort order (`asc` for ascending, `desc` for descending).\n * @param {object} columnMeta Column meta object.\n * @param {object} columnPluginSettings Plugin settings for the column.\n * @returns {Function} The compare function.\n */\nexport function compareFunctionFactory(sortOrder, columnMeta, columnPluginSettings) {\n  const locale = columnMeta.locale;\n  return function (value, nextValue) {\n    const {\n      sortEmptyCells\n    } = columnPluginSettings;\n    if (typeof value === 'string') {\n      value = value.toLocaleLowerCase(locale);\n    }\n    if (typeof nextValue === 'string') {\n      nextValue = nextValue.toLocaleLowerCase(locale);\n    }\n    if (value === nextValue) {\n      return DO_NOT_SWAP;\n    }\n    if (isEmpty(value)) {\n      if (isEmpty(nextValue)) {\n        return DO_NOT_SWAP;\n      }\n\n      // Just fist value is empty and `sortEmptyCells` option was set\n      if (sortEmptyCells) {\n        return sortOrder === 'asc' ? FIRST_BEFORE_SECOND : FIRST_AFTER_SECOND;\n      }\n      return FIRST_AFTER_SECOND;\n    }\n    if (isEmpty(nextValue)) {\n      // Just second value is empty and `sortEmptyCells` option was set\n      if (sortEmptyCells) {\n        return sortOrder === 'asc' ? FIRST_AFTER_SECOND : FIRST_BEFORE_SECOND;\n      }\n      return FIRST_BEFORE_SECOND;\n    }\n    if (isNaN(value) && !isNaN(nextValue)) {\n      return sortOrder === 'asc' ? FIRST_AFTER_SECOND : FIRST_BEFORE_SECOND;\n    } else if (!isNaN(value) && isNaN(nextValue)) {\n      return sortOrder === 'asc' ? FIRST_BEFORE_SECOND : FIRST_AFTER_SECOND;\n    } else if (!(isNaN(value) || isNaN(nextValue))) {\n      value = parseFloat(value);\n      nextValue = parseFloat(nextValue);\n    }\n    if (value < nextValue) {\n      return sortOrder === 'asc' ? FIRST_BEFORE_SECOND : FIRST_AFTER_SECOND;\n    }\n    if (value > nextValue) {\n      return sortOrder === 'asc' ? FIRST_AFTER_SECOND : FIRST_BEFORE_SECOND;\n    }\n    return DO_NOT_SWAP;\n  };\n}\nexport const COLUMN_DATA_TYPE = 'default';"],"mappings":"AAAA,SAASA,OAAO,QAAQ,4BAA4B;AACpD,SAASC,WAAW,EAAEC,mBAAmB,EAAEC,kBAAkB,QAAQ,0BAA0B;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,sBAAsBA,CAACC,SAAS,EAAEC,UAAU,EAAEC,oBAAoB,EAAE;EAClF,MAAMC,MAAM,GAAGF,UAAU,CAACE,MAAM;EAChC,OAAO,UAAUC,KAAK,EAAEC,SAAS,EAAE;IACjC,MAAM;MACJC;IACF,CAAC,GAAGJ,oBAAoB;IACxB,IAAI,OAAOE,KAAK,KAAK,QAAQ,EAAE;MAC7BA,KAAK,GAAGA,KAAK,CAACG,iBAAiB,CAACJ,MAAM,CAAC;IACzC;IACA,IAAI,OAAOE,SAAS,KAAK,QAAQ,EAAE;MACjCA,SAAS,GAAGA,SAAS,CAACE,iBAAiB,CAACJ,MAAM,CAAC;IACjD;IACA,IAAIC,KAAK,KAAKC,SAAS,EAAE;MACvB,OAAOT,WAAW;IACpB;IACA,IAAID,OAAO,CAACS,KAAK,CAAC,EAAE;MAClB,IAAIT,OAAO,CAACU,SAAS,CAAC,EAAE;QACtB,OAAOT,WAAW;MACpB;;MAEA;MACA,IAAIU,cAAc,EAAE;QAClB,OAAON,SAAS,KAAK,KAAK,GAAGH,mBAAmB,GAAGC,kBAAkB;MACvE;MACA,OAAOA,kBAAkB;IAC3B;IACA,IAAIH,OAAO,CAACU,SAAS,CAAC,EAAE;MACtB;MACA,IAAIC,cAAc,EAAE;QAClB,OAAON,SAAS,KAAK,KAAK,GAAGF,kBAAkB,GAAGD,mBAAmB;MACvE;MACA,OAAOA,mBAAmB;IAC5B;IACA,IAAIW,KAAK,CAACJ,KAAK,CAAC,IAAI,CAACI,KAAK,CAACH,SAAS,CAAC,EAAE;MACrC,OAAOL,SAAS,KAAK,KAAK,GAAGF,kBAAkB,GAAGD,mBAAmB;IACvE,CAAC,MAAM,IAAI,CAACW,KAAK,CAACJ,KAAK,CAAC,IAAII,KAAK,CAACH,SAAS,CAAC,EAAE;MAC5C,OAAOL,SAAS,KAAK,KAAK,GAAGH,mBAAmB,GAAGC,kBAAkB;IACvE,CAAC,MAAM,IAAI,EAAEU,KAAK,CAACJ,KAAK,CAAC,IAAII,KAAK,CAACH,SAAS,CAAC,CAAC,EAAE;MAC9CD,KAAK,GAAGK,UAAU,CAACL,KAAK,CAAC;MACzBC,SAAS,GAAGI,UAAU,CAACJ,SAAS,CAAC;IACnC;IACA,IAAID,KAAK,GAAGC,SAAS,EAAE;MACrB,OAAOL,SAAS,KAAK,KAAK,GAAGH,mBAAmB,GAAGC,kBAAkB;IACvE;IACA,IAAIM,KAAK,GAAGC,SAAS,EAAE;MACrB,OAAOL,SAAS,KAAK,KAAK,GAAGF,kBAAkB,GAAGD,mBAAmB;IACvE;IACA,OAAOD,WAAW;EACpB,CAAC;AACH;AACA,OAAO,MAAMc,gBAAgB,GAAG,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}