{"ast":null,"code":"import OrderView from \"./view.mjs\";\n/**\n * Executive model for TR root nodes.\n *\n * @class {SharedOrderView}\n */\nexport default class SharedOrderView extends OrderView {\n  /**\n   * The method results in merging external order view into the current order. This happens only for order views which\n   * operate on the same root node.\n   *\n   * In the table, there is only one scenario when this happens. TR root element\n   * has a common root node with cells order view and row headers order view. Both classes have to share\n   * information about their order sizes to make proper diff calculations.\n   *\n   * @param {OrderView} orderView The order view to merging with. The view will be added at the beginning of the list.\n   * @returns {SharedOrderView}\n   */\n  prependView(orderView) {\n    this.sizeSet.prepend(orderView.sizeSet);\n    orderView.sizeSet.append(this.sizeSet);\n    return this;\n  }\n\n  /**\n   * The method results in merging external order view into the current order. This happens only for order views which\n   * operate on the same root node.\n   *\n   * In the table, there is only one scenario when this happens. TR root element\n   * has a common root node with cells order view and row headers order view. Both classes have to share\n   * information about their order sizes to make proper diff calculations.\n   *\n   * @param {OrderView} orderView The order view to merging with. The view will be added at the end of the list.\n   * @returns {SharedOrderView}\n   */\n  appendView(orderView) {\n    this.sizeSet.append(orderView.sizeSet);\n    orderView.sizeSet.prepend(this.sizeSet);\n    return this;\n  }\n}","map":{"version":3,"names":["OrderView","SharedOrderView","prependView","orderView","sizeSet","prepend","append","appendView"],"sources":["D:/gym-project/frontend/node_modules/handsontable/3rdparty/walkontable/src/utils/orderView/sharedView.mjs"],"sourcesContent":["import OrderView from \"./view.mjs\";\n/**\n * Executive model for TR root nodes.\n *\n * @class {SharedOrderView}\n */\nexport default class SharedOrderView extends OrderView {\n  /**\n   * The method results in merging external order view into the current order. This happens only for order views which\n   * operate on the same root node.\n   *\n   * In the table, there is only one scenario when this happens. TR root element\n   * has a common root node with cells order view and row headers order view. Both classes have to share\n   * information about their order sizes to make proper diff calculations.\n   *\n   * @param {OrderView} orderView The order view to merging with. The view will be added at the beginning of the list.\n   * @returns {SharedOrderView}\n   */\n  prependView(orderView) {\n    this.sizeSet.prepend(orderView.sizeSet);\n    orderView.sizeSet.append(this.sizeSet);\n    return this;\n  }\n\n  /**\n   * The method results in merging external order view into the current order. This happens only for order views which\n   * operate on the same root node.\n   *\n   * In the table, there is only one scenario when this happens. TR root element\n   * has a common root node with cells order view and row headers order view. Both classes have to share\n   * information about their order sizes to make proper diff calculations.\n   *\n   * @param {OrderView} orderView The order view to merging with. The view will be added at the end of the list.\n   * @returns {SharedOrderView}\n   */\n  appendView(orderView) {\n    this.sizeSet.append(orderView.sizeSet);\n    orderView.sizeSet.prepend(this.sizeSet);\n    return this;\n  }\n}"],"mappings":"AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMC,eAAe,SAASD,SAAS,CAAC;EACrD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEE,WAAWA,CAACC,SAAS,EAAE;IACrB,IAAI,CAACC,OAAO,CAACC,OAAO,CAACF,SAAS,CAACC,OAAO,CAAC;IACvCD,SAAS,CAACC,OAAO,CAACE,MAAM,CAAC,IAAI,CAACF,OAAO,CAAC;IACtC,OAAO,IAAI;EACb;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEG,UAAUA,CAACJ,SAAS,EAAE;IACpB,IAAI,CAACC,OAAO,CAACE,MAAM,CAACH,SAAS,CAACC,OAAO,CAAC;IACtCD,SAAS,CAACC,OAAO,CAACC,OAAO,CAAC,IAAI,CAACD,OAAO,CAAC;IACvC,OAAO,IAAI;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}