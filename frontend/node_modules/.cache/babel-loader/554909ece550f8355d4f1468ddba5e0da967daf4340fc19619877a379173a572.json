{"ast":null,"code":"export const command = {\n  name: 'scrollToFocusedCell',\n  callback(hot) {\n    const {\n      highlight\n    } = hot.getSelectedRangeLast();\n    const firstVisibleRow = hot.view.getFirstFullyVisibleRow() - 1;\n    const firstVisibleColumn = hot.view.getFirstFullyVisibleColumn() - 1;\n    const lastVisibleRow = hot.view.getLastFullyVisibleRow() + 1;\n    const lastVisibleColumn = hot.view.getLastFullyVisibleColumn() + 1;\n    const visibleCoordsFrom = hot._createCellCoords(firstVisibleRow, firstVisibleColumn);\n    const visibleCoordsTo = hot._createCellCoords(lastVisibleRow, lastVisibleColumn);\n    const visibleRange = hot._createCellRange(visibleCoordsFrom, visibleCoordsFrom, visibleCoordsTo);\n    if (!visibleRange.includes(highlight) && (highlight.row >= 0 || highlight.col >= 0)) {\n      const scrollCoords = {};\n      if (highlight.col >= 0) {\n        const offsetColumns = Math.floor(hot.countVisibleCols() / 2);\n        scrollCoords.col = Math.max(highlight.col - offsetColumns, 0);\n      }\n      if (highlight.row >= 0) {\n        const offsetRows = Math.floor(hot.countVisibleRows() / 2);\n        scrollCoords.row = Math.max(highlight.row - offsetRows, 0);\n      }\n      hot.scrollViewportTo({\n        ...scrollCoords,\n        verticalSnap: 'top',\n        horizontalSnap: 'start'\n      });\n    }\n  }\n};","map":{"version":3,"names":["command","name","callback","hot","highlight","getSelectedRangeLast","firstVisibleRow","view","getFirstFullyVisibleRow","firstVisibleColumn","getFirstFullyVisibleColumn","lastVisibleRow","getLastFullyVisibleRow","lastVisibleColumn","getLastFullyVisibleColumn","visibleCoordsFrom","_createCellCoords","visibleCoordsTo","visibleRange","_createCellRange","includes","row","col","scrollCoords","offsetColumns","Math","floor","countVisibleCols","max","offsetRows","countVisibleRows","scrollViewportTo","verticalSnap","horizontalSnap"],"sources":["D:/gym-project/frontend/node_modules/handsontable/shortcutContexts/commands/scrollToFocusedCell.mjs"],"sourcesContent":["export const command = {\n  name: 'scrollToFocusedCell',\n  callback(hot) {\n    const {\n      highlight\n    } = hot.getSelectedRangeLast();\n    const firstVisibleRow = hot.view.getFirstFullyVisibleRow() - 1;\n    const firstVisibleColumn = hot.view.getFirstFullyVisibleColumn() - 1;\n    const lastVisibleRow = hot.view.getLastFullyVisibleRow() + 1;\n    const lastVisibleColumn = hot.view.getLastFullyVisibleColumn() + 1;\n    const visibleCoordsFrom = hot._createCellCoords(firstVisibleRow, firstVisibleColumn);\n    const visibleCoordsTo = hot._createCellCoords(lastVisibleRow, lastVisibleColumn);\n    const visibleRange = hot._createCellRange(visibleCoordsFrom, visibleCoordsFrom, visibleCoordsTo);\n    if (!visibleRange.includes(highlight) && (highlight.row >= 0 || highlight.col >= 0)) {\n      const scrollCoords = {};\n      if (highlight.col >= 0) {\n        const offsetColumns = Math.floor(hot.countVisibleCols() / 2);\n        scrollCoords.col = Math.max(highlight.col - offsetColumns, 0);\n      }\n      if (highlight.row >= 0) {\n        const offsetRows = Math.floor(hot.countVisibleRows() / 2);\n        scrollCoords.row = Math.max(highlight.row - offsetRows, 0);\n      }\n      hot.scrollViewportTo({\n        ...scrollCoords,\n        verticalSnap: 'top',\n        horizontalSnap: 'start'\n      });\n    }\n  }\n};"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG;EACrBC,IAAI,EAAE,qBAAqB;EAC3BC,QAAQA,CAACC,GAAG,EAAE;IACZ,MAAM;MACJC;IACF,CAAC,GAAGD,GAAG,CAACE,oBAAoB,CAAC,CAAC;IAC9B,MAAMC,eAAe,GAAGH,GAAG,CAACI,IAAI,CAACC,uBAAuB,CAAC,CAAC,GAAG,CAAC;IAC9D,MAAMC,kBAAkB,GAAGN,GAAG,CAACI,IAAI,CAACG,0BAA0B,CAAC,CAAC,GAAG,CAAC;IACpE,MAAMC,cAAc,GAAGR,GAAG,CAACI,IAAI,CAACK,sBAAsB,CAAC,CAAC,GAAG,CAAC;IAC5D,MAAMC,iBAAiB,GAAGV,GAAG,CAACI,IAAI,CAACO,yBAAyB,CAAC,CAAC,GAAG,CAAC;IAClE,MAAMC,iBAAiB,GAAGZ,GAAG,CAACa,iBAAiB,CAACV,eAAe,EAAEG,kBAAkB,CAAC;IACpF,MAAMQ,eAAe,GAAGd,GAAG,CAACa,iBAAiB,CAACL,cAAc,EAAEE,iBAAiB,CAAC;IAChF,MAAMK,YAAY,GAAGf,GAAG,CAACgB,gBAAgB,CAACJ,iBAAiB,EAAEA,iBAAiB,EAAEE,eAAe,CAAC;IAChG,IAAI,CAACC,YAAY,CAACE,QAAQ,CAAChB,SAAS,CAAC,KAAKA,SAAS,CAACiB,GAAG,IAAI,CAAC,IAAIjB,SAAS,CAACkB,GAAG,IAAI,CAAC,CAAC,EAAE;MACnF,MAAMC,YAAY,GAAG,CAAC,CAAC;MACvB,IAAInB,SAAS,CAACkB,GAAG,IAAI,CAAC,EAAE;QACtB,MAAME,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACvB,GAAG,CAACwB,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC;QAC5DJ,YAAY,CAACD,GAAG,GAAGG,IAAI,CAACG,GAAG,CAACxB,SAAS,CAACkB,GAAG,GAAGE,aAAa,EAAE,CAAC,CAAC;MAC/D;MACA,IAAIpB,SAAS,CAACiB,GAAG,IAAI,CAAC,EAAE;QACtB,MAAMQ,UAAU,GAAGJ,IAAI,CAACC,KAAK,CAACvB,GAAG,CAAC2B,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC;QACzDP,YAAY,CAACF,GAAG,GAAGI,IAAI,CAACG,GAAG,CAACxB,SAAS,CAACiB,GAAG,GAAGQ,UAAU,EAAE,CAAC,CAAC;MAC5D;MACA1B,GAAG,CAAC4B,gBAAgB,CAAC;QACnB,GAAGR,YAAY;QACfS,YAAY,EAAE,KAAK;QACnBC,cAAc,EAAE;MAClB,CAAC,CAAC;IACJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}