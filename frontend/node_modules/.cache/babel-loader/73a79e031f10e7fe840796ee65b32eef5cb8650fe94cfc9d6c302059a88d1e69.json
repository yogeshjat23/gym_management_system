{"ast":null,"code":"function _classPrivateFieldInitSpec(e, t, a) {\n  _checkPrivateRedeclaration(e, t), t.set(e, a);\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _classPrivateFieldGet(s, a) {\n  return s.get(_assertClassBrand(s, a));\n}\nfunction _classPrivateFieldSet(s, a, r) {\n  return s.set(_assertClassBrand(s, a), r), r;\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nimport { closestDown, hasClass, isChildOf, getParent } from \"../../../helpers/dom/element.mjs\";\nimport { partial } from \"../../../helpers/function.mjs\";\nimport { isTouchSupported } from \"../../../helpers/feature.mjs\";\nimport { isMobileBrowser, isChromeWebKit, isFirefoxWebKit, isIOS } from \"../../../helpers/browser.mjs\";\nimport { isDefined } from \"../../../helpers/mixed.mjs\";\n/**\n * @class Event\n */\nvar _wtSettings = /*#__PURE__*/new WeakMap();\nvar _domBindings = /*#__PURE__*/new WeakMap();\nvar _wtTable = /*#__PURE__*/new WeakMap();\nvar _selectionManager = /*#__PURE__*/new WeakMap();\nvar _parent = /*#__PURE__*/new WeakMap();\nvar _eventManager = /*#__PURE__*/new WeakMap();\nvar _facadeGetter = /*#__PURE__*/new WeakMap();\nvar _selectedCellBeforeTouchEnd = /*#__PURE__*/new WeakMap();\nvar _dblClickTimeout = /*#__PURE__*/new WeakMap();\nvar _dblClickOrigin = /*#__PURE__*/new WeakMap();\nclass Event {\n  /**\n   * @param {FacadeGetter} facadeGetter Gets an instance facade.\n   * @param {DomBindings} domBindings Bindings into dom.\n   * @param {Settings} wtSettings The walkontable settings.\n   * @param {EventManager} eventManager The walkontable event manager.\n   * @param {Table} wtTable The table.\n   * @param {SelectionManager} selectionManager Selections.\n   * @param {Event} [parent=null] The main Event instance.\n   */\n  constructor(facadeGetter, domBindings, wtSettings, eventManager, wtTable, selectionManager) {\n    let parent = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n    _classPrivateFieldInitSpec(this, _wtSettings, void 0);\n    _classPrivateFieldInitSpec(this, _domBindings, void 0);\n    _classPrivateFieldInitSpec(this, _wtTable, void 0);\n    _classPrivateFieldInitSpec(this, _selectionManager, void 0);\n    _classPrivateFieldInitSpec(this, _parent, void 0);\n    /**\n     * Instance of {@link EventManager}.\n     *\n     * @type {EventManager}\n     */\n    _classPrivateFieldInitSpec(this, _eventManager, void 0);\n    /**\n     * Should be use only for passing face called external origin methods, like registered event listeners.\n     * It provides backward compatibility by getting instance facade.\n     *\n     * @todo Consider about removing this from Event class, because it make relationship into facade (implicit circular\n     *   dependency).\n     * @todo Con. Maybe passing listener caller as an ioc from faced resolves this issue. To rethink later.\n     *\n     * @type {FacadeGetter}\n     */\n    _classPrivateFieldInitSpec(this, _facadeGetter, void 0);\n    /**\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _selectedCellBeforeTouchEnd, void 0);\n    /**\n     * @type {number[]}\n     */\n    _classPrivateFieldInitSpec(this, _dblClickTimeout, [null, null]);\n    /**\n     * @type {number[]}\n     */\n    _classPrivateFieldInitSpec(this, _dblClickOrigin, [null, null]);\n    _classPrivateFieldSet(_wtSettings, this, wtSettings);\n    _classPrivateFieldSet(_domBindings, this, domBindings);\n    _classPrivateFieldSet(_wtTable, this, wtTable);\n    _classPrivateFieldSet(_selectionManager, this, selectionManager);\n    _classPrivateFieldSet(_parent, this, parent);\n    _classPrivateFieldSet(_eventManager, this, eventManager);\n    _classPrivateFieldSet(_facadeGetter, this, facadeGetter);\n    this.registerEvents();\n  }\n\n  /**\n   * Adds listeners for mouse and touch events.\n   *\n   * @private\n   */\n  registerEvents() {\n    _classPrivateFieldGet(_eventManager, this).addEventListener(_classPrivateFieldGet(_wtTable, this).holder, 'contextmenu', event => this.onContextMenu(event));\n    _classPrivateFieldGet(_eventManager, this).addEventListener(_classPrivateFieldGet(_wtTable, this).TABLE, 'mouseover', event => this.onMouseOver(event));\n    _classPrivateFieldGet(_eventManager, this).addEventListener(_classPrivateFieldGet(_wtTable, this).TABLE, 'mouseout', event => this.onMouseOut(event));\n    const initTouchEvents = () => {\n      _classPrivateFieldGet(_eventManager, this).addEventListener(_classPrivateFieldGet(_wtTable, this).holder, 'touchstart', event => this.onTouchStart(event));\n      _classPrivateFieldGet(_eventManager, this).addEventListener(_classPrivateFieldGet(_wtTable, this).holder, 'touchend', event => this.onTouchEnd(event));\n      if (!this.momentumScrolling) {\n        this.momentumScrolling = {};\n      }\n      _classPrivateFieldGet(_eventManager, this).addEventListener(_classPrivateFieldGet(_wtTable, this).holder, 'scroll', () => {\n        clearTimeout(this.momentumScrolling._timeout);\n        if (!this.momentumScrolling.ongoing) {\n          _classPrivateFieldGet(_wtSettings, this).getSetting('onBeforeTouchScroll');\n        }\n        this.momentumScrolling.ongoing = true;\n        this.momentumScrolling._timeout = setTimeout(() => {\n          if (!this.touchApplied) {\n            this.momentumScrolling.ongoing = false;\n            _classPrivateFieldGet(_wtSettings, this).getSetting('onAfterMomentumScroll');\n          }\n        }, 200);\n      });\n    };\n    const initMouseEvents = () => {\n      _classPrivateFieldGet(_eventManager, this).addEventListener(_classPrivateFieldGet(_wtTable, this).holder, 'mouseup', event => this.onMouseUp(event));\n      _classPrivateFieldGet(_eventManager, this).addEventListener(_classPrivateFieldGet(_wtTable, this).holder, 'mousedown', event => this.onMouseDown(event));\n    };\n    if (isMobileBrowser()) {\n      initTouchEvents();\n    } else {\n      // PC like devices which support both methods (touchscreen and ability to plug-in mouse).\n      if (isTouchSupported()) {\n        initTouchEvents();\n      }\n      initMouseEvents();\n    }\n  }\n\n  /**\n   * Checks if an element is already selected.\n   *\n   * @private\n   * @param {Element} touchTarget An element to check.\n   * @returns {boolean}\n   */\n  selectedCellWasTouched(touchTarget) {\n    const cellUnderFinger = this.parentCell(touchTarget);\n    const coordsOfCellUnderFinger = cellUnderFinger.coords;\n    if (_classPrivateFieldGet(_selectedCellBeforeTouchEnd, this) && coordsOfCellUnderFinger) {\n      const [rowTouched, rowSelected] = [coordsOfCellUnderFinger.row, _classPrivateFieldGet(_selectedCellBeforeTouchEnd, this).from.row];\n      const [colTouched, colSelected] = [coordsOfCellUnderFinger.col, _classPrivateFieldGet(_selectedCellBeforeTouchEnd, this).from.col];\n      return rowTouched === rowSelected && colTouched === colSelected;\n    }\n    return false;\n  }\n\n  /**\n   * Gets closest TD or TH element.\n   *\n   * @private\n   * @param {Element} elem An element from the traversing starts.\n   * @returns {object} Contains coordinates and reference to TD or TH if it exists. Otherwise it's empty object.\n   */\n  parentCell(elem) {\n    const cell = {};\n    const TABLE = _classPrivateFieldGet(_wtTable, this).TABLE;\n    const TD = closestDown(elem, ['TD', 'TH'], TABLE);\n    if (TD) {\n      cell.coords = _classPrivateFieldGet(_wtTable, this).getCoords(TD);\n      cell.TD = TD;\n    } else if (hasClass(elem, 'wtBorder') && hasClass(elem, 'current')) {\n      cell.coords = _classPrivateFieldGet(_selectionManager, this).getFocusSelection().cellRange.highlight;\n      cell.TD = _classPrivateFieldGet(_wtTable, this).getCell(cell.coords);\n    } else if (hasClass(elem, 'wtBorder') && hasClass(elem, 'area')) {\n      if (_classPrivateFieldGet(_selectionManager, this).getAreaSelection().cellRange) {\n        cell.coords = _classPrivateFieldGet(_selectionManager, this).getAreaSelection().cellRange.to;\n        cell.TD = _classPrivateFieldGet(_wtTable, this).getCell(cell.coords);\n      }\n    }\n    return cell;\n  }\n\n  /**\n   * OnMouseDown callback.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onMouseDown(event) {\n    const activeElement = _classPrivateFieldGet(_domBindings, this).rootDocument.activeElement;\n    const getParentNode = partial(getParent, event.target);\n    const realTarget = event.target;\n\n    // ignore non-TD focusable elements from mouse down processing\n    // (https://github.com/handsontable/handsontable/issues/3555)\n    if (!['TD', 'TH'].includes(activeElement.nodeName) && (realTarget === activeElement || getParentNode(0) === activeElement || getParentNode(1) === activeElement)) {\n      return;\n    }\n    const cell = this.parentCell(realTarget);\n    if (hasClass(realTarget, 'corner')) {\n      _classPrivateFieldGet(_wtSettings, this).getSetting('onCellCornerMouseDown', event, realTarget);\n    } else if (cell.TD && _classPrivateFieldGet(_wtSettings, this).has('onCellMouseDown')) {\n      this.callListener('onCellMouseDown', event, cell.coords, cell.TD);\n    }\n\n    // doubleclick reacts only for left mouse button or from touch events\n    if ((event.button === 0 || this.touchApplied) && cell.TD) {\n      _classPrivateFieldGet(_dblClickOrigin, this)[0] = cell.TD;\n      clearTimeout(_classPrivateFieldGet(_dblClickTimeout, this)[0]);\n      _classPrivateFieldGet(_dblClickTimeout, this)[0] = setTimeout(() => {\n        _classPrivateFieldGet(_dblClickOrigin, this)[0] = null;\n      }, 1000);\n    }\n  }\n\n  /**\n   * OnContextMenu callback.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onContextMenu(event) {\n    if (_classPrivateFieldGet(_wtSettings, this).has('onCellContextMenu')) {\n      const cell = this.parentCell(event.target);\n      if (cell.TD) {\n        this.callListener('onCellContextMenu', event, cell.coords, cell.TD);\n      }\n    }\n  }\n\n  /**\n   * OnMouseOver callback.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onMouseOver(event) {\n    if (!_classPrivateFieldGet(_wtSettings, this).has('onCellMouseOver')) {\n      return;\n    }\n    const table = _classPrivateFieldGet(_wtTable, this).TABLE;\n    const td = closestDown(event.target, ['TD', 'TH'], table);\n    const parent = _classPrivateFieldGet(_parent, this) || this;\n    if (td && td !== parent.lastMouseOver && isChildOf(td, table)) {\n      parent.lastMouseOver = td;\n      this.callListener('onCellMouseOver', event, _classPrivateFieldGet(_wtTable, this).getCoords(td), td);\n    }\n  }\n\n  /**\n   * OnMouseOut callback.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onMouseOut(event) {\n    if (!_classPrivateFieldGet(_wtSettings, this).has('onCellMouseOut')) {\n      return;\n    }\n    const table = _classPrivateFieldGet(_wtTable, this).TABLE;\n    const lastTD = closestDown(event.target, ['TD', 'TH'], table);\n    const nextTD = closestDown(event.relatedTarget, ['TD', 'TH'], table);\n    const parent = _classPrivateFieldGet(_parent, this) || this;\n    if (lastTD && lastTD !== nextTD && isChildOf(lastTD, table)) {\n      this.callListener('onCellMouseOut', event, _classPrivateFieldGet(_wtTable, this).getCoords(lastTD), lastTD);\n      if (nextTD === null) {\n        parent.lastMouseOver = null;\n      }\n    }\n  }\n\n  /**\n   * OnMouseUp callback.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onMouseUp(event) {\n    const cell = this.parentCell(event.target);\n    if (cell.TD && _classPrivateFieldGet(_wtSettings, this).has('onCellMouseUp')) {\n      this.callListener('onCellMouseUp', event, cell.coords, cell.TD);\n    }\n\n    // if not left mouse button, and the origin event is not comes from touch\n    if (event.button !== 0 && !this.touchApplied) {\n      return;\n    }\n    if (cell.TD === _classPrivateFieldGet(_dblClickOrigin, this)[0] && cell.TD === _classPrivateFieldGet(_dblClickOrigin, this)[1]) {\n      if (hasClass(event.target, 'corner')) {\n        this.callListener('onCellCornerDblClick', event, cell.coords, cell.TD);\n      } else {\n        this.callListener('onCellDblClick', event, cell.coords, cell.TD);\n      }\n      _classPrivateFieldGet(_dblClickOrigin, this)[0] = null;\n      _classPrivateFieldGet(_dblClickOrigin, this)[1] = null;\n    } else if (cell.TD === _classPrivateFieldGet(_dblClickOrigin, this)[0]) {\n      _classPrivateFieldGet(_dblClickOrigin, this)[1] = cell.TD;\n      clearTimeout(_classPrivateFieldGet(_dblClickTimeout, this)[1]);\n      _classPrivateFieldGet(_dblClickTimeout, this)[1] = setTimeout(() => {\n        _classPrivateFieldGet(_dblClickOrigin, this)[1] = null;\n      }, 500);\n    }\n  }\n\n  /**\n   * OnTouchStart callback. Simulates mousedown event.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onTouchStart(event) {\n    _classPrivateFieldSet(_selectedCellBeforeTouchEnd, this, _classPrivateFieldGet(_selectionManager, this).getFocusSelection().cellRange);\n    this.touchApplied = true;\n    this.onMouseDown(event);\n  }\n\n  /**\n   * OnTouchEnd callback. Simulates mouseup event.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onTouchEnd(event) {\n    var _this$parentCell;\n    const target = event.target;\n    const parentCellCoords = (_this$parentCell = this.parentCell(target)) === null || _this$parentCell === void 0 ? void 0 : _this$parentCell.coords;\n    const isCellsRange = isDefined(parentCellCoords) && parentCellCoords.row >= 0 && parentCellCoords.col >= 0;\n    const isEventCancelable = event.cancelable && isCellsRange && _classPrivateFieldGet(_wtSettings, this).getSetting('isDataViewInstance');\n\n    // To prevent accidental redirects or other actions that the interactive elements (e.q \"A\" link) do\n    // while the cell is highlighted, all touch events that are triggered on different cells are\n    // \"preventDefault\"'ed. The user can interact with the element (e.q. click on the link that opens\n    // a new page) only when the same cell was previously selected (see related PR #7980).\n    if (isEventCancelable) {\n      const interactiveElements = ['A', 'BUTTON', 'INPUT'];\n\n      // For browsers that use the WebKit as an engine (excluding Safari), there is a bug. The prevent\n      // default has to be called all the time. Otherwise, the second tap won't be triggered (probably\n      // caused by the native ~300ms delay - https://webkit.org/blog/5610/more-responsive-tapping-on-ios/).\n      // To make the interactive elements work, the event target element has to be check. If the element\n      // matches the allow-list, the event is not prevented.\n      if (isIOS() && (isChromeWebKit() || isFirefoxWebKit()) && this.selectedCellWasTouched(target) && !interactiveElements.includes(target.tagName)) {\n        event.preventDefault();\n      } else if (!this.selectedCellWasTouched(target)) {\n        // For other browsers, prevent default is fired only for the first tap and only when the previous\n        // highlighted cell was different.\n        event.preventDefault();\n      }\n    }\n    this.onMouseUp(event);\n    this.touchApplied = false;\n  }\n\n  /**\n   * Call listener with backward compatibility.\n   *\n   * @private\n   * @param {string} name Name of listener.\n   * @param {MouseEvent} event The event object.\n   * @param {CellCoords} coords Coordinates.\n   * @param {HTMLElement} target Event target.\n   */\n  callListener(name, event, coords, target) {\n    const listener = _classPrivateFieldGet(_wtSettings, this).getSettingPure(name);\n    if (listener) {\n      listener(event, coords, target, _classPrivateFieldGet(_facadeGetter, this).call(this));\n    }\n  }\n\n  /**\n   * Clears double-click timeouts and destroys the internal eventManager instance.\n   */\n  destroy() {\n    clearTimeout(_classPrivateFieldGet(_dblClickTimeout, this)[0]);\n    clearTimeout(_classPrivateFieldGet(_dblClickTimeout, this)[1]);\n    _classPrivateFieldGet(_eventManager, this).destroy();\n  }\n}\nexport default Event;","map":{"version":3,"names":["_classPrivateFieldInitSpec","e","t","a","_checkPrivateRedeclaration","set","has","TypeError","_classPrivateFieldGet","s","get","_assertClassBrand","_classPrivateFieldSet","r","n","arguments","length","closestDown","hasClass","isChildOf","getParent","partial","isTouchSupported","isMobileBrowser","isChromeWebKit","isFirefoxWebKit","isIOS","isDefined","_wtSettings","WeakMap","_domBindings","_wtTable","_selectionManager","_parent","_eventManager","_facadeGetter","_selectedCellBeforeTouchEnd","_dblClickTimeout","_dblClickOrigin","Event","constructor","facadeGetter","domBindings","wtSettings","eventManager","wtTable","selectionManager","parent","undefined","registerEvents","addEventListener","holder","event","onContextMenu","TABLE","onMouseOver","onMouseOut","initTouchEvents","onTouchStart","onTouchEnd","momentumScrolling","clearTimeout","_timeout","ongoing","getSetting","setTimeout","touchApplied","initMouseEvents","onMouseUp","onMouseDown","selectedCellWasTouched","touchTarget","cellUnderFinger","parentCell","coordsOfCellUnderFinger","coords","rowTouched","rowSelected","row","from","colTouched","colSelected","col","elem","cell","TD","getCoords","getFocusSelection","cellRange","highlight","getCell","getAreaSelection","to","activeElement","rootDocument","getParentNode","target","realTarget","includes","nodeName","callListener","button","table","td","lastMouseOver","lastTD","nextTD","relatedTarget","_this$parentCell","parentCellCoords","isCellsRange","isEventCancelable","cancelable","interactiveElements","tagName","preventDefault","name","listener","getSettingPure","call","destroy"],"sources":["D:/gym-project/frontend/node_modules/handsontable/3rdparty/walkontable/src/event.mjs"],"sourcesContent":["import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateFieldInitSpec(e, t, a) { _checkPrivateRedeclaration(e, t), t.set(e, a); }\nfunction _checkPrivateRedeclaration(e, t) { if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); }\nfunction _classPrivateFieldGet(s, a) { return s.get(_assertClassBrand(s, a)); }\nfunction _classPrivateFieldSet(s, a, r) { return s.set(_assertClassBrand(s, a), r), r; }\nfunction _assertClassBrand(e, t, n) { if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n; throw new TypeError(\"Private element is not present on this object\"); }\nimport { closestDown, hasClass, isChildOf, getParent } from \"../../../helpers/dom/element.mjs\";\nimport { partial } from \"../../../helpers/function.mjs\";\nimport { isTouchSupported } from \"../../../helpers/feature.mjs\";\nimport { isMobileBrowser, isChromeWebKit, isFirefoxWebKit, isIOS } from \"../../../helpers/browser.mjs\";\nimport { isDefined } from \"../../../helpers/mixed.mjs\";\n/**\n * @class Event\n */\nvar _wtSettings = /*#__PURE__*/new WeakMap();\nvar _domBindings = /*#__PURE__*/new WeakMap();\nvar _wtTable = /*#__PURE__*/new WeakMap();\nvar _selectionManager = /*#__PURE__*/new WeakMap();\nvar _parent = /*#__PURE__*/new WeakMap();\nvar _eventManager = /*#__PURE__*/new WeakMap();\nvar _facadeGetter = /*#__PURE__*/new WeakMap();\nvar _selectedCellBeforeTouchEnd = /*#__PURE__*/new WeakMap();\nvar _dblClickTimeout = /*#__PURE__*/new WeakMap();\nvar _dblClickOrigin = /*#__PURE__*/new WeakMap();\nclass Event {\n  /**\n   * @param {FacadeGetter} facadeGetter Gets an instance facade.\n   * @param {DomBindings} domBindings Bindings into dom.\n   * @param {Settings} wtSettings The walkontable settings.\n   * @param {EventManager} eventManager The walkontable event manager.\n   * @param {Table} wtTable The table.\n   * @param {SelectionManager} selectionManager Selections.\n   * @param {Event} [parent=null] The main Event instance.\n   */\n  constructor(facadeGetter, domBindings, wtSettings, eventManager, wtTable, selectionManager) {\n    let parent = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n    _classPrivateFieldInitSpec(this, _wtSettings, void 0);\n    _classPrivateFieldInitSpec(this, _domBindings, void 0);\n    _classPrivateFieldInitSpec(this, _wtTable, void 0);\n    _classPrivateFieldInitSpec(this, _selectionManager, void 0);\n    _classPrivateFieldInitSpec(this, _parent, void 0);\n    /**\n     * Instance of {@link EventManager}.\n     *\n     * @type {EventManager}\n     */\n    _classPrivateFieldInitSpec(this, _eventManager, void 0);\n    /**\n     * Should be use only for passing face called external origin methods, like registered event listeners.\n     * It provides backward compatibility by getting instance facade.\n     *\n     * @todo Consider about removing this from Event class, because it make relationship into facade (implicit circular\n     *   dependency).\n     * @todo Con. Maybe passing listener caller as an ioc from faced resolves this issue. To rethink later.\n     *\n     * @type {FacadeGetter}\n     */\n    _classPrivateFieldInitSpec(this, _facadeGetter, void 0);\n    /**\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _selectedCellBeforeTouchEnd, void 0);\n    /**\n     * @type {number[]}\n     */\n    _classPrivateFieldInitSpec(this, _dblClickTimeout, [null, null]);\n    /**\n     * @type {number[]}\n     */\n    _classPrivateFieldInitSpec(this, _dblClickOrigin, [null, null]);\n    _classPrivateFieldSet(_wtSettings, this, wtSettings);\n    _classPrivateFieldSet(_domBindings, this, domBindings);\n    _classPrivateFieldSet(_wtTable, this, wtTable);\n    _classPrivateFieldSet(_selectionManager, this, selectionManager);\n    _classPrivateFieldSet(_parent, this, parent);\n    _classPrivateFieldSet(_eventManager, this, eventManager);\n    _classPrivateFieldSet(_facadeGetter, this, facadeGetter);\n    this.registerEvents();\n  }\n\n  /**\n   * Adds listeners for mouse and touch events.\n   *\n   * @private\n   */\n  registerEvents() {\n    _classPrivateFieldGet(_eventManager, this).addEventListener(_classPrivateFieldGet(_wtTable, this).holder, 'contextmenu', event => this.onContextMenu(event));\n    _classPrivateFieldGet(_eventManager, this).addEventListener(_classPrivateFieldGet(_wtTable, this).TABLE, 'mouseover', event => this.onMouseOver(event));\n    _classPrivateFieldGet(_eventManager, this).addEventListener(_classPrivateFieldGet(_wtTable, this).TABLE, 'mouseout', event => this.onMouseOut(event));\n    const initTouchEvents = () => {\n      _classPrivateFieldGet(_eventManager, this).addEventListener(_classPrivateFieldGet(_wtTable, this).holder, 'touchstart', event => this.onTouchStart(event));\n      _classPrivateFieldGet(_eventManager, this).addEventListener(_classPrivateFieldGet(_wtTable, this).holder, 'touchend', event => this.onTouchEnd(event));\n      if (!this.momentumScrolling) {\n        this.momentumScrolling = {};\n      }\n      _classPrivateFieldGet(_eventManager, this).addEventListener(_classPrivateFieldGet(_wtTable, this).holder, 'scroll', () => {\n        clearTimeout(this.momentumScrolling._timeout);\n        if (!this.momentumScrolling.ongoing) {\n          _classPrivateFieldGet(_wtSettings, this).getSetting('onBeforeTouchScroll');\n        }\n        this.momentumScrolling.ongoing = true;\n        this.momentumScrolling._timeout = setTimeout(() => {\n          if (!this.touchApplied) {\n            this.momentumScrolling.ongoing = false;\n            _classPrivateFieldGet(_wtSettings, this).getSetting('onAfterMomentumScroll');\n          }\n        }, 200);\n      });\n    };\n    const initMouseEvents = () => {\n      _classPrivateFieldGet(_eventManager, this).addEventListener(_classPrivateFieldGet(_wtTable, this).holder, 'mouseup', event => this.onMouseUp(event));\n      _classPrivateFieldGet(_eventManager, this).addEventListener(_classPrivateFieldGet(_wtTable, this).holder, 'mousedown', event => this.onMouseDown(event));\n    };\n    if (isMobileBrowser()) {\n      initTouchEvents();\n    } else {\n      // PC like devices which support both methods (touchscreen and ability to plug-in mouse).\n      if (isTouchSupported()) {\n        initTouchEvents();\n      }\n      initMouseEvents();\n    }\n  }\n\n  /**\n   * Checks if an element is already selected.\n   *\n   * @private\n   * @param {Element} touchTarget An element to check.\n   * @returns {boolean}\n   */\n  selectedCellWasTouched(touchTarget) {\n    const cellUnderFinger = this.parentCell(touchTarget);\n    const coordsOfCellUnderFinger = cellUnderFinger.coords;\n    if (_classPrivateFieldGet(_selectedCellBeforeTouchEnd, this) && coordsOfCellUnderFinger) {\n      const [rowTouched, rowSelected] = [coordsOfCellUnderFinger.row, _classPrivateFieldGet(_selectedCellBeforeTouchEnd, this).from.row];\n      const [colTouched, colSelected] = [coordsOfCellUnderFinger.col, _classPrivateFieldGet(_selectedCellBeforeTouchEnd, this).from.col];\n      return rowTouched === rowSelected && colTouched === colSelected;\n    }\n    return false;\n  }\n\n  /**\n   * Gets closest TD or TH element.\n   *\n   * @private\n   * @param {Element} elem An element from the traversing starts.\n   * @returns {object} Contains coordinates and reference to TD or TH if it exists. Otherwise it's empty object.\n   */\n  parentCell(elem) {\n    const cell = {};\n    const TABLE = _classPrivateFieldGet(_wtTable, this).TABLE;\n    const TD = closestDown(elem, ['TD', 'TH'], TABLE);\n    if (TD) {\n      cell.coords = _classPrivateFieldGet(_wtTable, this).getCoords(TD);\n      cell.TD = TD;\n    } else if (hasClass(elem, 'wtBorder') && hasClass(elem, 'current')) {\n      cell.coords = _classPrivateFieldGet(_selectionManager, this).getFocusSelection().cellRange.highlight;\n      cell.TD = _classPrivateFieldGet(_wtTable, this).getCell(cell.coords);\n    } else if (hasClass(elem, 'wtBorder') && hasClass(elem, 'area')) {\n      if (_classPrivateFieldGet(_selectionManager, this).getAreaSelection().cellRange) {\n        cell.coords = _classPrivateFieldGet(_selectionManager, this).getAreaSelection().cellRange.to;\n        cell.TD = _classPrivateFieldGet(_wtTable, this).getCell(cell.coords);\n      }\n    }\n    return cell;\n  }\n\n  /**\n   * OnMouseDown callback.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onMouseDown(event) {\n    const activeElement = _classPrivateFieldGet(_domBindings, this).rootDocument.activeElement;\n    const getParentNode = partial(getParent, event.target);\n    const realTarget = event.target;\n\n    // ignore non-TD focusable elements from mouse down processing\n    // (https://github.com/handsontable/handsontable/issues/3555)\n    if (!['TD', 'TH'].includes(activeElement.nodeName) && (realTarget === activeElement || getParentNode(0) === activeElement || getParentNode(1) === activeElement)) {\n      return;\n    }\n    const cell = this.parentCell(realTarget);\n    if (hasClass(realTarget, 'corner')) {\n      _classPrivateFieldGet(_wtSettings, this).getSetting('onCellCornerMouseDown', event, realTarget);\n    } else if (cell.TD && _classPrivateFieldGet(_wtSettings, this).has('onCellMouseDown')) {\n      this.callListener('onCellMouseDown', event, cell.coords, cell.TD);\n    }\n\n    // doubleclick reacts only for left mouse button or from touch events\n    if ((event.button === 0 || this.touchApplied) && cell.TD) {\n      _classPrivateFieldGet(_dblClickOrigin, this)[0] = cell.TD;\n      clearTimeout(_classPrivateFieldGet(_dblClickTimeout, this)[0]);\n      _classPrivateFieldGet(_dblClickTimeout, this)[0] = setTimeout(() => {\n        _classPrivateFieldGet(_dblClickOrigin, this)[0] = null;\n      }, 1000);\n    }\n  }\n\n  /**\n   * OnContextMenu callback.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onContextMenu(event) {\n    if (_classPrivateFieldGet(_wtSettings, this).has('onCellContextMenu')) {\n      const cell = this.parentCell(event.target);\n      if (cell.TD) {\n        this.callListener('onCellContextMenu', event, cell.coords, cell.TD);\n      }\n    }\n  }\n\n  /**\n   * OnMouseOver callback.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onMouseOver(event) {\n    if (!_classPrivateFieldGet(_wtSettings, this).has('onCellMouseOver')) {\n      return;\n    }\n    const table = _classPrivateFieldGet(_wtTable, this).TABLE;\n    const td = closestDown(event.target, ['TD', 'TH'], table);\n    const parent = _classPrivateFieldGet(_parent, this) || this;\n    if (td && td !== parent.lastMouseOver && isChildOf(td, table)) {\n      parent.lastMouseOver = td;\n      this.callListener('onCellMouseOver', event, _classPrivateFieldGet(_wtTable, this).getCoords(td), td);\n    }\n  }\n\n  /**\n   * OnMouseOut callback.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onMouseOut(event) {\n    if (!_classPrivateFieldGet(_wtSettings, this).has('onCellMouseOut')) {\n      return;\n    }\n    const table = _classPrivateFieldGet(_wtTable, this).TABLE;\n    const lastTD = closestDown(event.target, ['TD', 'TH'], table);\n    const nextTD = closestDown(event.relatedTarget, ['TD', 'TH'], table);\n    const parent = _classPrivateFieldGet(_parent, this) || this;\n    if (lastTD && lastTD !== nextTD && isChildOf(lastTD, table)) {\n      this.callListener('onCellMouseOut', event, _classPrivateFieldGet(_wtTable, this).getCoords(lastTD), lastTD);\n      if (nextTD === null) {\n        parent.lastMouseOver = null;\n      }\n    }\n  }\n\n  /**\n   * OnMouseUp callback.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onMouseUp(event) {\n    const cell = this.parentCell(event.target);\n    if (cell.TD && _classPrivateFieldGet(_wtSettings, this).has('onCellMouseUp')) {\n      this.callListener('onCellMouseUp', event, cell.coords, cell.TD);\n    }\n\n    // if not left mouse button, and the origin event is not comes from touch\n    if (event.button !== 0 && !this.touchApplied) {\n      return;\n    }\n    if (cell.TD === _classPrivateFieldGet(_dblClickOrigin, this)[0] && cell.TD === _classPrivateFieldGet(_dblClickOrigin, this)[1]) {\n      if (hasClass(event.target, 'corner')) {\n        this.callListener('onCellCornerDblClick', event, cell.coords, cell.TD);\n      } else {\n        this.callListener('onCellDblClick', event, cell.coords, cell.TD);\n      }\n      _classPrivateFieldGet(_dblClickOrigin, this)[0] = null;\n      _classPrivateFieldGet(_dblClickOrigin, this)[1] = null;\n    } else if (cell.TD === _classPrivateFieldGet(_dblClickOrigin, this)[0]) {\n      _classPrivateFieldGet(_dblClickOrigin, this)[1] = cell.TD;\n      clearTimeout(_classPrivateFieldGet(_dblClickTimeout, this)[1]);\n      _classPrivateFieldGet(_dblClickTimeout, this)[1] = setTimeout(() => {\n        _classPrivateFieldGet(_dblClickOrigin, this)[1] = null;\n      }, 500);\n    }\n  }\n\n  /**\n   * OnTouchStart callback. Simulates mousedown event.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onTouchStart(event) {\n    _classPrivateFieldSet(_selectedCellBeforeTouchEnd, this, _classPrivateFieldGet(_selectionManager, this).getFocusSelection().cellRange);\n    this.touchApplied = true;\n    this.onMouseDown(event);\n  }\n\n  /**\n   * OnTouchEnd callback. Simulates mouseup event.\n   *\n   * @private\n   * @param {MouseEvent} event The mouse event object.\n   */\n  onTouchEnd(event) {\n    var _this$parentCell;\n    const target = event.target;\n    const parentCellCoords = (_this$parentCell = this.parentCell(target)) === null || _this$parentCell === void 0 ? void 0 : _this$parentCell.coords;\n    const isCellsRange = isDefined(parentCellCoords) && parentCellCoords.row >= 0 && parentCellCoords.col >= 0;\n    const isEventCancelable = event.cancelable && isCellsRange && _classPrivateFieldGet(_wtSettings, this).getSetting('isDataViewInstance');\n\n    // To prevent accidental redirects or other actions that the interactive elements (e.q \"A\" link) do\n    // while the cell is highlighted, all touch events that are triggered on different cells are\n    // \"preventDefault\"'ed. The user can interact with the element (e.q. click on the link that opens\n    // a new page) only when the same cell was previously selected (see related PR #7980).\n    if (isEventCancelable) {\n      const interactiveElements = ['A', 'BUTTON', 'INPUT'];\n\n      // For browsers that use the WebKit as an engine (excluding Safari), there is a bug. The prevent\n      // default has to be called all the time. Otherwise, the second tap won't be triggered (probably\n      // caused by the native ~300ms delay - https://webkit.org/blog/5610/more-responsive-tapping-on-ios/).\n      // To make the interactive elements work, the event target element has to be check. If the element\n      // matches the allow-list, the event is not prevented.\n      if (isIOS() && (isChromeWebKit() || isFirefoxWebKit()) && this.selectedCellWasTouched(target) && !interactiveElements.includes(target.tagName)) {\n        event.preventDefault();\n      } else if (!this.selectedCellWasTouched(target)) {\n        // For other browsers, prevent default is fired only for the first tap and only when the previous\n        // highlighted cell was different.\n        event.preventDefault();\n      }\n    }\n    this.onMouseUp(event);\n    this.touchApplied = false;\n  }\n\n  /**\n   * Call listener with backward compatibility.\n   *\n   * @private\n   * @param {string} name Name of listener.\n   * @param {MouseEvent} event The event object.\n   * @param {CellCoords} coords Coordinates.\n   * @param {HTMLElement} target Event target.\n   */\n  callListener(name, event, coords, target) {\n    const listener = _classPrivateFieldGet(_wtSettings, this).getSettingPure(name);\n    if (listener) {\n      listener(event, coords, target, _classPrivateFieldGet(_facadeGetter, this).call(this));\n    }\n  }\n\n  /**\n   * Clears double-click timeouts and destroys the internal eventManager instance.\n   */\n  destroy() {\n    clearTimeout(_classPrivateFieldGet(_dblClickTimeout, this)[0]);\n    clearTimeout(_classPrivateFieldGet(_dblClickTimeout, this)[1]);\n    _classPrivateFieldGet(_eventManager, this).destroy();\n  }\n}\nexport default Event;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}