{"ast":null,"code":"function _classPrivateMethodInitSpec(e, a) {\n  _checkPrivateRedeclaration(e, a), a.add(e);\n}\nfunction _classPrivateFieldInitSpec(e, t, a) {\n  _checkPrivateRedeclaration(e, t), t.set(e, a);\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _classPrivateFieldGet(s, a) {\n  return s.get(_assertClassBrand(s, a));\n}\nfunction _classPrivateFieldSet(s, a, r) {\n  return s.set(_assertClassBrand(s, a), r), r;\n}\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { arrayEach } from \"../../helpers/array.mjs\";\nimport { objectEach } from \"../../helpers/object.mjs\";\nimport { CommandExecutor } from \"../contextMenu/commandExecutor.mjs\";\nimport { getDocumentOffsetByElement } from \"../contextMenu/utils.mjs\";\nimport { hasClass, setAttribute } from \"../../helpers/dom/element.mjs\";\nimport { ItemsFactory } from \"../contextMenu/itemsFactory.mjs\";\nimport { Menu } from \"../contextMenu/menu/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { COLUMN_LEFT, COLUMN_RIGHT, REMOVE_COLUMN, CLEAR_COLUMN, READ_ONLY, ALIGNMENT, SEPARATOR } from \"../contextMenu/predefinedItems/index.mjs\";\nimport { A11Y_HASPOPUP, A11Y_HIDDEN, A11Y_LABEL } from \"../../helpers/a11y.mjs\";\nHooks.getSingleton().register('afterDropdownMenuDefaultOptions');\nHooks.getSingleton().register('beforeDropdownMenuShow');\nHooks.getSingleton().register('afterDropdownMenuShow');\nHooks.getSingleton().register('afterDropdownMenuHide');\nHooks.getSingleton().register('afterDropdownMenuExecute');\nexport const PLUGIN_KEY = 'dropdownMenu';\nexport const PLUGIN_PRIORITY = 230;\nconst BUTTON_CLASS_NAME = 'changeType';\nconst SHORTCUTS_GROUP = PLUGIN_KEY;\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\n * @plugin DropdownMenu\n * @class DropdownMenu\n *\n * @description\n * This plugin creates the Handsontable Dropdown Menu. It allows to create a new column at any place in the grid\n * among [other features](@/guides/accessories-and-menus/context-menu/context-menu.md#context-menu-with-specific-options).\n * Possible values:\n * * `true` (to enable default options),\n * * `false` (to disable completely).\n *\n * or array of any available strings:\n * * `[\"col_left\", \"col_right\", \"remove_col\", \"---------\", \"undo\", \"redo\"]`.\n *\n * See [the dropdown menu demo](@/guides/columns/column-menu/column-menu.md) for examples.\n *\n * @example\n * ::: only-for javascript\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: data,\n *   colHeaders: true,\n *   // enable dropdown menu\n *   dropdownMenu: true\n * });\n *\n * // or\n * const hot = new Handsontable(container, {\n *   data: data,\n *   colHeaders: true,\n *   // enable and configure dropdown menu\n *   dropdownMenu: ['remove_col', '---------', 'make_read_only', 'alignment']\n * });\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * <HotTable\n *   data={data}\n *   comments={true}\n *   // enable and configure dropdown menu\n *   dropdownMenu={['remove_col', '---------', 'make_read_only', 'alignment']}\n * />\n * ```\n * :::\n */\nvar _isButtonClicked = /*#__PURE__*/new WeakMap();\nvar _DropdownMenu_brand = /*#__PURE__*/new WeakSet();\nexport class DropdownMenu extends BasePlugin {\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  static get PLUGIN_DEPS() {\n    return ['plugin:AutoColumnSize'];\n  }\n\n  /**\n   * Default menu items order when `dropdownMenu` is enabled by setting the config item to `true`.\n   *\n   * @returns {Array}\n   */\n  static get DEFAULT_ITEMS() {\n    return [COLUMN_LEFT, COLUMN_RIGHT, SEPARATOR, REMOVE_COLUMN, SEPARATOR, CLEAR_COLUMN, SEPARATOR, READ_ONLY, SEPARATOR, ALIGNMENT];\n  }\n\n  /**\n   * Instance of {@link CommandExecutor}.\n   *\n   * @private\n   * @type {CommandExecutor}\n   */\n\n  constructor(hotInstance) {\n    super(hotInstance);\n\n    // One listener for enable/disable functionality\n    /**\n     * Add custom shortcuts to the provided menu instance.\n     *\n     * @param {Menu} menuInstance The menu instance.\n     */\n    _classPrivateMethodInitSpec(this, _DropdownMenu_brand);\n    _defineProperty(this, \"commandExecutor\", new CommandExecutor(this.hot));\n    /**\n     * Instance of {@link ItemsFactory}.\n     *\n     * @private\n     * @type {ItemsFactory}\n     */\n    _defineProperty(this, \"itemsFactory\", null);\n    /**\n     * Instance of {@link Menu}.\n     *\n     * @private\n     * @type {Menu}\n     */\n    _defineProperty(this, \"menu\", null);\n    /**\n     * Flag which determines if the button that opens the menu was clicked.\n     *\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _isButtonClicked, false);\n    this.hot.addHook('afterGetColHeader', (col, TH) => _assertClassBrand(_DropdownMenu_brand, this, _onAfterGetColHeader).call(this, col, TH));\n  }\n\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link DropdownMenu#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   *\n   * @fires Hooks#afterDropdownMenuDefaultOptions\n   * @fires Hooks#beforeDropdownMenuSetItems\n   */\n  enablePlugin() {\n    var _this = this;\n    if (this.enabled) {\n      return;\n    }\n    this.itemsFactory = new ItemsFactory(this.hot, DropdownMenu.DEFAULT_ITEMS);\n    this.addHook('beforeOnCellMouseDown', function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return _assertClassBrand(_DropdownMenu_brand, _this, _onBeforeOnCellMouseDown).call(_this, ...args);\n    });\n    this.addHook('beforeViewportScrollHorizontally', function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return _assertClassBrand(_DropdownMenu_brand, _this, _onBeforeViewportScrollHorizontally).call(_this, ...args);\n    });\n    const settings = this.hot.getSettings()[PLUGIN_KEY];\n    const predefinedItems = {\n      items: this.itemsFactory.getItems(settings)\n    };\n    this.registerEvents();\n    if (typeof settings.callback === 'function') {\n      this.commandExecutor.setCommonCallback(settings.callback);\n    }\n    this.registerShortcuts();\n    super.enablePlugin();\n    this.callOnPluginsReady(() => {\n      this.hot.runHooks('afterDropdownMenuDefaultOptions', predefinedItems);\n      this.itemsFactory.setPredefinedItems(predefinedItems.items);\n      const menuItems = this.itemsFactory.getItems(settings);\n      if (this.menu) {\n        this.menu.destroy();\n      }\n      this.menu = new Menu(this.hot, {\n        className: 'htDropdownMenu',\n        keepInViewport: true,\n        container: settings.uiContainer || this.hot.rootDocument.body\n      });\n      this.hot.runHooks('beforeDropdownMenuSetItems', menuItems);\n      this.menu.setMenuItems(menuItems);\n      this.menu.addLocalHook('beforeOpen', () => _assertClassBrand(_DropdownMenu_brand, this, _onMenuBeforeOpen).call(this));\n      this.menu.addLocalHook('afterOpen', () => _assertClassBrand(_DropdownMenu_brand, this, _onMenuAfterOpen).call(this));\n      this.menu.addLocalHook('afterSubmenuOpen', subMenuInstance => _assertClassBrand(_DropdownMenu_brand, this, _onSubMenuAfterOpen).call(this, subMenuInstance));\n      this.menu.addLocalHook('afterClose', () => _assertClassBrand(_DropdownMenu_brand, this, _onMenuAfterClose).call(this));\n      this.menu.addLocalHook('executeCommand', function () {\n        for (var _len3 = arguments.length, params = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          params[_key3] = arguments[_key3];\n        }\n        return _this.executeCommand.call(_this, ...params);\n      });\n\n      // Register all commands. Predefined and added by user or by plugins\n      arrayEach(menuItems, command => this.commandExecutor.registerCommand(command.key, command));\n    });\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *  - [`dropdownMenu`](@/api/options.md#dropdownmenu)\n   */\n  updatePlugin() {\n    this.disablePlugin();\n    this.enablePlugin();\n    super.updatePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    this.close();\n    if (this.menu) {\n      this.menu.destroy();\n    }\n    this.unregisterShortcuts();\n    super.disablePlugin();\n  }\n\n  /**\n   * Register shortcuts responsible for toggling dropdown menu.\n   *\n   * @private\n   */\n  registerShortcuts() {\n    const gridContext = this.hot.getShortcutManager().getContext('grid');\n    const callback = () => {\n      const {\n        highlight\n      } = this.hot.getSelectedRangeLast();\n      if ((highlight.isHeader() && highlight.row === -1 || highlight.isCell()) && highlight.col >= 0) {\n        this.hot.selectColumns(highlight.col, highlight.col, -1);\n        const {\n          from\n        } = this.hot.getSelectedRangeLast();\n        const offset = getDocumentOffsetByElement(this.menu.container, this.hot.rootDocument);\n        const target = this.hot.getCell(-1, from.col, true);\n        const rect = target.getBoundingClientRect();\n        this.open({\n          left: rect.left + offset.left,\n          top: rect.top + target.offsetHeight + offset.top\n        }, {\n          left: rect.width\n        });\n        // Make sure the first item is selected (role=menuitem). Otherwise, screen readers\n        // will block the Esc key for the whole menu.\n        this.menu.getNavigator().toFirstItem();\n      }\n    };\n    gridContext.addShortcuts([{\n      keys: [['Shift', 'Alt', 'ArrowDown'], ['Control/Meta', 'Enter']],\n      callback,\n      runOnlyIf: () => {\n        var _this$hot$getSelected;\n        const highlight = (_this$hot$getSelected = this.hot.getSelectedRangeLast()) === null || _this$hot$getSelected === void 0 ? void 0 : _this$hot$getSelected.highlight;\n        return highlight && this.hot.selection.isCellVisible(highlight) && highlight.isHeader() && !this.menu.isOpened();\n      },\n      captureCtrl: true,\n      group: SHORTCUTS_GROUP\n    }, {\n      keys: [['Shift', 'Alt', 'ArrowDown']],\n      callback,\n      runOnlyIf: () => {\n        var _this$hot$getSelected2;\n        const highlight = (_this$hot$getSelected2 = this.hot.getSelectedRangeLast()) === null || _this$hot$getSelected2 === void 0 ? void 0 : _this$hot$getSelected2.highlight;\n        return highlight && this.hot.selection.isCellVisible(highlight) && highlight.isCell() && !this.menu.isOpened();\n      },\n      group: SHORTCUTS_GROUP\n    }]);\n  }\n\n  /**\n   * Unregister shortcuts responsible for toggling dropdown menu.\n   *\n   * @private\n   */\n  unregisterShortcuts() {\n    this.hot.getShortcutManager().getContext('grid').removeShortcutsByGroup(SHORTCUTS_GROUP);\n  }\n\n  /**\n   * Registers the DOM listeners.\n   *\n   * @private\n   */\n  registerEvents() {\n    this.eventManager.addEventListener(this.hot.rootElement, 'click', event => _assertClassBrand(_DropdownMenu_brand, this, _onTableClick).call(this, event));\n  }\n\n  /**\n   * Opens menu and re-position it based on the passed coordinates.\n   *\n   * @param {{ top: number, left: number }|Event} position An object with `top` and `left` properties\n   * which contains coordinates relative to the browsers viewport (without included scroll offsets).\n   * Or if the native event is passed the menu will be positioned based on the `pageX` and `pageY`\n   * coordinates.\n   * @param {{ above: number, below: number, left: number, right: number }} offset An object allows applying\n   * the offset to the menu position.\n   * @fires Hooks#beforeDropdownMenuShow\n   * @fires Hooks#afterDropdownMenuShow\n   */\n  open(position) {\n    var _this$menu;\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      above: 0,\n      below: 0,\n      left: 0,\n      right: 0\n    };\n    if ((_this$menu = this.menu) !== null && _this$menu !== void 0 && _this$menu.isOpened()) {\n      return;\n    }\n    this.menu.open();\n    objectEach(offset, (value, key) => {\n      this.menu.setOffset(key, value);\n    });\n    this.menu.setPosition(position);\n  }\n\n  /**\n   * Closes dropdown menu.\n   */\n  close() {\n    var _this$menu2;\n    (_this$menu2 = this.menu) === null || _this$menu2 === void 0 || _this$menu2.close();\n  }\n\n  /**\n   * Executes context menu command.\n   *\n   * The `executeCommand()` method works only for selected cells.\n   *\n   * When no cells are selected, `executeCommand()` doesn't do anything.\n   *\n   * You can execute all predefined commands:\n   *  * `'col_left'` - Insert column left\n   *  * `'col_right'` - Insert column right\n   *  * `'clear_column'` - Clear selected column\n   *  * `'remove_col'` - Remove column\n   *  * `'undo'` - Undo last action\n   *  * `'redo'` - Redo last action\n   *  * `'make_read_only'` - Make cell read only\n   *  * `'alignment:left'` - Alignment to the left\n   *  * `'alignment:top'` - Alignment to the top\n   *  * `'alignment:right'` - Alignment to the right\n   *  * `'alignment:bottom'` - Alignment to the bottom\n   *  * `'alignment:middle'` - Alignment to the middle\n   *  * `'alignment:center'` - Alignment to the center (justify).\n   *\n   * Or you can execute command registered in settings where `key` is your command name.\n   *\n   * @param {string} commandName Command name to execute.\n   * @param {*} params Additional parameters passed to the command executor.\n   */\n  executeCommand(commandName) {\n    for (var _len4 = arguments.length, params = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n      params[_key4 - 1] = arguments[_key4];\n    }\n    this.commandExecutor.execute(commandName, ...params);\n  }\n\n  /**\n   * Turns on / off listening on dropdown menu.\n   *\n   * @private\n   * @param {boolean} listen Turn on listening when value is set to true, otherwise turn it off.\n   */\n  setListening() {\n    let listen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (this.menu.isOpened()) {\n      if (listen) {\n        this.menu.hotMenu.listen();\n      } else {\n        this.menu.hotMenu.unlisten();\n      }\n    }\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    this.close();\n    if (this.menu) {\n      this.menu.destroy();\n    }\n    super.destroy();\n  }\n}\nfunction _addCustomShortcuts(menuInstance) {\n  menuInstance.getKeyboardShortcutsCtrl().addCustomShortcuts([{\n    keys: [['Control/Meta', 'A']],\n    callback: () => false\n  }]);\n}\n/**\n * Table click listener.\n *\n * @private\n * @param {Event} event The mouse event object.\n */\nfunction _onTableClick(event) {\n  if (hasClass(event.target, BUTTON_CLASS_NAME)) {\n    const offset = getDocumentOffsetByElement(this.menu.container, this.hot.rootDocument);\n    const rect = event.target.getBoundingClientRect();\n    event.stopPropagation();\n    _classPrivateFieldSet(_isButtonClicked, this, false);\n    this.open({\n      left: rect.left + offset.left,\n      top: rect.top + event.target.offsetHeight + 3 + offset.top\n    }, {\n      left: rect.width\n    });\n  }\n}\n/**\n * On after get column header listener.\n *\n * @private\n * @param {number} col Visual column index.\n * @param {HTMLTableCellElement} TH Header's TH element.\n */\nfunction _onAfterGetColHeader(col, TH) {\n  // Corner or a higher-level header\n  const headerRow = TH.parentNode;\n  if (!headerRow) {\n    return;\n  }\n  const headerRowList = headerRow.parentNode.childNodes;\n  const level = Array.prototype.indexOf.call(headerRowList, headerRow);\n  if (col < 0 || level !== headerRowList.length - 1) {\n    return;\n  }\n  const existingButton = TH.querySelector(`.${BUTTON_CLASS_NAME}`);\n\n  // Plugin enabled and buttons already exists, return.\n  if (this.enabled && existingButton) {\n    return;\n  }\n  // Plugin disabled and buttons still exists, so remove them.\n  if (!this.enabled) {\n    if (existingButton) {\n      existingButton.parentNode.removeChild(existingButton);\n    }\n    return;\n  }\n  const button = this.hot.rootDocument.createElement('button');\n  button.className = BUTTON_CLASS_NAME;\n  button.type = 'button';\n  button.tabIndex = -1;\n  if (this.hot.getSettings().ariaTags) {\n    setAttribute(button, [A11Y_HIDDEN(), A11Y_LABEL(' ')]);\n    setAttribute(TH, [A11Y_HASPOPUP('menu')]);\n  }\n\n  // prevent page reload on button click\n  button.onclick = function () {\n    return false;\n  };\n  TH.firstChild.insertBefore(button, TH.firstChild.firstChild);\n}\n/**\n * On menu before open listener.\n *\n * @private\n * @fires Hooks#beforeDropdownMenuShow\n */\nfunction _onMenuBeforeOpen() {\n  this.hot.runHooks('beforeDropdownMenuShow', this);\n}\n/**\n * On menu after open listener.\n *\n * @private\n * @fires Hooks#afterDropdownMenuShow\n */\nfunction _onMenuAfterOpen() {\n  this.hot.runHooks('afterDropdownMenuShow', this);\n  _assertClassBrand(_DropdownMenu_brand, this, _addCustomShortcuts).call(this, this.menu);\n}\n/**\n * Listener for the `afterSubmenuOpen` hook.\n *\n * @private\n * @param {Menu} subMenuInstance The opened sub menu instance.\n */\nfunction _onSubMenuAfterOpen(subMenuInstance) {\n  _assertClassBrand(_DropdownMenu_brand, this, _addCustomShortcuts).call(this, subMenuInstance);\n}\n/**\n * On menu after close listener.\n *\n * @private\n * @fires Hooks#afterDropdownMenuHide\n */\nfunction _onMenuAfterClose() {\n  this.hot.listen();\n  this.hot.runHooks('afterDropdownMenuHide', this);\n}\n/**\n * Hook allows blocking horizontal scroll when the menu is opened by clicking on\n * the column header button. This prevents from scrolling the viewport (jump effect) when\n * the button is clicked.\n *\n * @param {number} visualColumn Visual column index.\n * @returns {number | null}\n */\nfunction _onBeforeViewportScrollHorizontally(visualColumn) {\n  return _classPrivateFieldGet(_isButtonClicked, this) ? null : visualColumn;\n}\n/**\n * Hook sets the internal flag to `true` when the button is clicked.\n *\n * @param {MouseEvent} event The mouse event object.\n */\nfunction _onBeforeOnCellMouseDown(event) {\n  if (hasClass(event.target, BUTTON_CLASS_NAME)) {\n    _classPrivateFieldSet(_isButtonClicked, this, true);\n  }\n}\nDropdownMenu.SEPARATOR = {\n  name: SEPARATOR\n};","map":{"version":3,"names":["_classPrivateMethodInitSpec","e","a","_checkPrivateRedeclaration","add","_classPrivateFieldInitSpec","t","set","has","TypeError","_defineProperty","r","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","String","Number","_classPrivateFieldGet","s","get","_assertClassBrand","_classPrivateFieldSet","n","arguments","length","BasePlugin","arrayEach","objectEach","CommandExecutor","getDocumentOffsetByElement","hasClass","setAttribute","ItemsFactory","Menu","Hooks","COLUMN_LEFT","COLUMN_RIGHT","REMOVE_COLUMN","CLEAR_COLUMN","READ_ONLY","ALIGNMENT","SEPARATOR","A11Y_HASPOPUP","A11Y_HIDDEN","A11Y_LABEL","getSingleton","register","PLUGIN_KEY","PLUGIN_PRIORITY","BUTTON_CLASS_NAME","SHORTCUTS_GROUP","_isButtonClicked","WeakMap","_DropdownMenu_brand","WeakSet","DropdownMenu","PLUGIN_DEPS","DEFAULT_ITEMS","constructor","hotInstance","hot","addHook","col","TH","_onAfterGetColHeader","isEnabled","getSettings","enablePlugin","_this","enabled","itemsFactory","_len","args","Array","_key","_onBeforeOnCellMouseDown","_len2","_key2","_onBeforeViewportScrollHorizontally","settings","predefinedItems","items","getItems","registerEvents","callback","commandExecutor","setCommonCallback","registerShortcuts","callOnPluginsReady","runHooks","setPredefinedItems","menuItems","menu","destroy","className","keepInViewport","container","uiContainer","rootDocument","body","setMenuItems","addLocalHook","_onMenuBeforeOpen","_onMenuAfterOpen","subMenuInstance","_onSubMenuAfterOpen","_onMenuAfterClose","_len3","params","_key3","executeCommand","command","registerCommand","key","updatePlugin","disablePlugin","close","unregisterShortcuts","gridContext","getShortcutManager","getContext","highlight","getSelectedRangeLast","isHeader","row","isCell","selectColumns","from","offset","target","getCell","rect","getBoundingClientRect","open","left","top","offsetHeight","width","getNavigator","toFirstItem","addShortcuts","keys","runOnlyIf","_this$hot$getSelected","selection","isCellVisible","isOpened","captureCtrl","group","_this$hot$getSelected2","removeShortcutsByGroup","eventManager","addEventListener","rootElement","event","_onTableClick","position","_this$menu","undefined","above","below","right","setOffset","setPosition","_this$menu2","commandName","_len4","_key4","execute","setListening","listen","hotMenu","unlisten","_addCustomShortcuts","menuInstance","getKeyboardShortcutsCtrl","addCustomShortcuts","stopPropagation","headerRow","parentNode","headerRowList","childNodes","level","prototype","indexOf","existingButton","querySelector","removeChild","button","createElement","type","tabIndex","ariaTags","onclick","firstChild","insertBefore","visualColumn","name"],"sources":["D:/gym-project/frontend/node_modules/handsontable/plugins/dropdownMenu/dropdownMenu.mjs"],"sourcesContent":["import \"core-js/modules/es.error.cause.js\";\nfunction _classPrivateMethodInitSpec(e, a) { _checkPrivateRedeclaration(e, a), a.add(e); }\nfunction _classPrivateFieldInitSpec(e, t, a) { _checkPrivateRedeclaration(e, t), t.set(e, a); }\nfunction _checkPrivateRedeclaration(e, t) { if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _classPrivateFieldGet(s, a) { return s.get(_assertClassBrand(s, a)); }\nfunction _classPrivateFieldSet(s, a, r) { return s.set(_assertClassBrand(s, a), r), r; }\nfunction _assertClassBrand(e, t, n) { if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n; throw new TypeError(\"Private element is not present on this object\"); }\nimport { BasePlugin } from \"../base/index.mjs\";\nimport { arrayEach } from \"../../helpers/array.mjs\";\nimport { objectEach } from \"../../helpers/object.mjs\";\nimport { CommandExecutor } from \"../contextMenu/commandExecutor.mjs\";\nimport { getDocumentOffsetByElement } from \"../contextMenu/utils.mjs\";\nimport { hasClass, setAttribute } from \"../../helpers/dom/element.mjs\";\nimport { ItemsFactory } from \"../contextMenu/itemsFactory.mjs\";\nimport { Menu } from \"../contextMenu/menu/index.mjs\";\nimport Hooks from \"../../pluginHooks.mjs\";\nimport { COLUMN_LEFT, COLUMN_RIGHT, REMOVE_COLUMN, CLEAR_COLUMN, READ_ONLY, ALIGNMENT, SEPARATOR } from \"../contextMenu/predefinedItems/index.mjs\";\nimport { A11Y_HASPOPUP, A11Y_HIDDEN, A11Y_LABEL } from \"../../helpers/a11y.mjs\";\nHooks.getSingleton().register('afterDropdownMenuDefaultOptions');\nHooks.getSingleton().register('beforeDropdownMenuShow');\nHooks.getSingleton().register('afterDropdownMenuShow');\nHooks.getSingleton().register('afterDropdownMenuHide');\nHooks.getSingleton().register('afterDropdownMenuExecute');\nexport const PLUGIN_KEY = 'dropdownMenu';\nexport const PLUGIN_PRIORITY = 230;\nconst BUTTON_CLASS_NAME = 'changeType';\nconst SHORTCUTS_GROUP = PLUGIN_KEY;\n\n/* eslint-disable jsdoc/require-description-complete-sentence */\n/**\n * @plugin DropdownMenu\n * @class DropdownMenu\n *\n * @description\n * This plugin creates the Handsontable Dropdown Menu. It allows to create a new column at any place in the grid\n * among [other features](@/guides/accessories-and-menus/context-menu/context-menu.md#context-menu-with-specific-options).\n * Possible values:\n * * `true` (to enable default options),\n * * `false` (to disable completely).\n *\n * or array of any available strings:\n * * `[\"col_left\", \"col_right\", \"remove_col\", \"---------\", \"undo\", \"redo\"]`.\n *\n * See [the dropdown menu demo](@/guides/columns/column-menu/column-menu.md) for examples.\n *\n * @example\n * ::: only-for javascript\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   data: data,\n *   colHeaders: true,\n *   // enable dropdown menu\n *   dropdownMenu: true\n * });\n *\n * // or\n * const hot = new Handsontable(container, {\n *   data: data,\n *   colHeaders: true,\n *   // enable and configure dropdown menu\n *   dropdownMenu: ['remove_col', '---------', 'make_read_only', 'alignment']\n * });\n * ```\n * :::\n *\n * ::: only-for react\n * ```jsx\n * <HotTable\n *   data={data}\n *   comments={true}\n *   // enable and configure dropdown menu\n *   dropdownMenu={['remove_col', '---------', 'make_read_only', 'alignment']}\n * />\n * ```\n * :::\n */\nvar _isButtonClicked = /*#__PURE__*/new WeakMap();\nvar _DropdownMenu_brand = /*#__PURE__*/new WeakSet();\nexport class DropdownMenu extends BasePlugin {\n  static get PLUGIN_KEY() {\n    return PLUGIN_KEY;\n  }\n  static get PLUGIN_PRIORITY() {\n    return PLUGIN_PRIORITY;\n  }\n  static get PLUGIN_DEPS() {\n    return ['plugin:AutoColumnSize'];\n  }\n\n  /**\n   * Default menu items order when `dropdownMenu` is enabled by setting the config item to `true`.\n   *\n   * @returns {Array}\n   */\n  static get DEFAULT_ITEMS() {\n    return [COLUMN_LEFT, COLUMN_RIGHT, SEPARATOR, REMOVE_COLUMN, SEPARATOR, CLEAR_COLUMN, SEPARATOR, READ_ONLY, SEPARATOR, ALIGNMENT];\n  }\n\n  /**\n   * Instance of {@link CommandExecutor}.\n   *\n   * @private\n   * @type {CommandExecutor}\n   */\n\n  constructor(hotInstance) {\n    super(hotInstance);\n\n    // One listener for enable/disable functionality\n    /**\n     * Add custom shortcuts to the provided menu instance.\n     *\n     * @param {Menu} menuInstance The menu instance.\n     */\n    _classPrivateMethodInitSpec(this, _DropdownMenu_brand);\n    _defineProperty(this, \"commandExecutor\", new CommandExecutor(this.hot));\n    /**\n     * Instance of {@link ItemsFactory}.\n     *\n     * @private\n     * @type {ItemsFactory}\n     */\n    _defineProperty(this, \"itemsFactory\", null);\n    /**\n     * Instance of {@link Menu}.\n     *\n     * @private\n     * @type {Menu}\n     */\n    _defineProperty(this, \"menu\", null);\n    /**\n     * Flag which determines if the button that opens the menu was clicked.\n     *\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _isButtonClicked, false);\n    this.hot.addHook('afterGetColHeader', (col, TH) => _assertClassBrand(_DropdownMenu_brand, this, _onAfterGetColHeader).call(this, col, TH));\n  }\n\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` then the {@link DropdownMenu#enablePlugin} method is called.\n   *\n   * @returns {boolean}\n   */\n  isEnabled() {\n    return this.hot.getSettings()[PLUGIN_KEY];\n  }\n\n  /**\n   * Enables the plugin functionality for this Handsontable instance.\n   *\n   * @fires Hooks#afterDropdownMenuDefaultOptions\n   * @fires Hooks#beforeDropdownMenuSetItems\n   */\n  enablePlugin() {\n    var _this = this;\n    if (this.enabled) {\n      return;\n    }\n    this.itemsFactory = new ItemsFactory(this.hot, DropdownMenu.DEFAULT_ITEMS);\n    this.addHook('beforeOnCellMouseDown', function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return _assertClassBrand(_DropdownMenu_brand, _this, _onBeforeOnCellMouseDown).call(_this, ...args);\n    });\n    this.addHook('beforeViewportScrollHorizontally', function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return _assertClassBrand(_DropdownMenu_brand, _this, _onBeforeViewportScrollHorizontally).call(_this, ...args);\n    });\n    const settings = this.hot.getSettings()[PLUGIN_KEY];\n    const predefinedItems = {\n      items: this.itemsFactory.getItems(settings)\n    };\n    this.registerEvents();\n    if (typeof settings.callback === 'function') {\n      this.commandExecutor.setCommonCallback(settings.callback);\n    }\n    this.registerShortcuts();\n    super.enablePlugin();\n    this.callOnPluginsReady(() => {\n      this.hot.runHooks('afterDropdownMenuDefaultOptions', predefinedItems);\n      this.itemsFactory.setPredefinedItems(predefinedItems.items);\n      const menuItems = this.itemsFactory.getItems(settings);\n      if (this.menu) {\n        this.menu.destroy();\n      }\n      this.menu = new Menu(this.hot, {\n        className: 'htDropdownMenu',\n        keepInViewport: true,\n        container: settings.uiContainer || this.hot.rootDocument.body\n      });\n      this.hot.runHooks('beforeDropdownMenuSetItems', menuItems);\n      this.menu.setMenuItems(menuItems);\n      this.menu.addLocalHook('beforeOpen', () => _assertClassBrand(_DropdownMenu_brand, this, _onMenuBeforeOpen).call(this));\n      this.menu.addLocalHook('afterOpen', () => _assertClassBrand(_DropdownMenu_brand, this, _onMenuAfterOpen).call(this));\n      this.menu.addLocalHook('afterSubmenuOpen', subMenuInstance => _assertClassBrand(_DropdownMenu_brand, this, _onSubMenuAfterOpen).call(this, subMenuInstance));\n      this.menu.addLocalHook('afterClose', () => _assertClassBrand(_DropdownMenu_brand, this, _onMenuAfterClose).call(this));\n      this.menu.addLocalHook('executeCommand', function () {\n        for (var _len3 = arguments.length, params = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          params[_key3] = arguments[_key3];\n        }\n        return _this.executeCommand.call(_this, ...params);\n      });\n\n      // Register all commands. Predefined and added by user or by plugins\n      arrayEach(menuItems, command => this.commandExecutor.registerCommand(command.key, command));\n    });\n  }\n\n  /**\n   * Updates the plugin's state.\n   *\n   * This method is executed when [`updateSettings()`](@/api/core.md#updatesettings) is invoked with any of the following configuration options:\n   *  - [`dropdownMenu`](@/api/options.md#dropdownmenu)\n   */\n  updatePlugin() {\n    this.disablePlugin();\n    this.enablePlugin();\n    super.updatePlugin();\n  }\n\n  /**\n   * Disables the plugin functionality for this Handsontable instance.\n   */\n  disablePlugin() {\n    this.close();\n    if (this.menu) {\n      this.menu.destroy();\n    }\n    this.unregisterShortcuts();\n    super.disablePlugin();\n  }\n\n  /**\n   * Register shortcuts responsible for toggling dropdown menu.\n   *\n   * @private\n   */\n  registerShortcuts() {\n    const gridContext = this.hot.getShortcutManager().getContext('grid');\n    const callback = () => {\n      const {\n        highlight\n      } = this.hot.getSelectedRangeLast();\n      if ((highlight.isHeader() && highlight.row === -1 || highlight.isCell()) && highlight.col >= 0) {\n        this.hot.selectColumns(highlight.col, highlight.col, -1);\n        const {\n          from\n        } = this.hot.getSelectedRangeLast();\n        const offset = getDocumentOffsetByElement(this.menu.container, this.hot.rootDocument);\n        const target = this.hot.getCell(-1, from.col, true);\n        const rect = target.getBoundingClientRect();\n        this.open({\n          left: rect.left + offset.left,\n          top: rect.top + target.offsetHeight + offset.top\n        }, {\n          left: rect.width\n        });\n        // Make sure the first item is selected (role=menuitem). Otherwise, screen readers\n        // will block the Esc key for the whole menu.\n        this.menu.getNavigator().toFirstItem();\n      }\n    };\n    gridContext.addShortcuts([{\n      keys: [['Shift', 'Alt', 'ArrowDown'], ['Control/Meta', 'Enter']],\n      callback,\n      runOnlyIf: () => {\n        var _this$hot$getSelected;\n        const highlight = (_this$hot$getSelected = this.hot.getSelectedRangeLast()) === null || _this$hot$getSelected === void 0 ? void 0 : _this$hot$getSelected.highlight;\n        return highlight && this.hot.selection.isCellVisible(highlight) && highlight.isHeader() && !this.menu.isOpened();\n      },\n      captureCtrl: true,\n      group: SHORTCUTS_GROUP\n    }, {\n      keys: [['Shift', 'Alt', 'ArrowDown']],\n      callback,\n      runOnlyIf: () => {\n        var _this$hot$getSelected2;\n        const highlight = (_this$hot$getSelected2 = this.hot.getSelectedRangeLast()) === null || _this$hot$getSelected2 === void 0 ? void 0 : _this$hot$getSelected2.highlight;\n        return highlight && this.hot.selection.isCellVisible(highlight) && highlight.isCell() && !this.menu.isOpened();\n      },\n      group: SHORTCUTS_GROUP\n    }]);\n  }\n\n  /**\n   * Unregister shortcuts responsible for toggling dropdown menu.\n   *\n   * @private\n   */\n  unregisterShortcuts() {\n    this.hot.getShortcutManager().getContext('grid').removeShortcutsByGroup(SHORTCUTS_GROUP);\n  }\n\n  /**\n   * Registers the DOM listeners.\n   *\n   * @private\n   */\n  registerEvents() {\n    this.eventManager.addEventListener(this.hot.rootElement, 'click', event => _assertClassBrand(_DropdownMenu_brand, this, _onTableClick).call(this, event));\n  }\n\n  /**\n   * Opens menu and re-position it based on the passed coordinates.\n   *\n   * @param {{ top: number, left: number }|Event} position An object with `top` and `left` properties\n   * which contains coordinates relative to the browsers viewport (without included scroll offsets).\n   * Or if the native event is passed the menu will be positioned based on the `pageX` and `pageY`\n   * coordinates.\n   * @param {{ above: number, below: number, left: number, right: number }} offset An object allows applying\n   * the offset to the menu position.\n   * @fires Hooks#beforeDropdownMenuShow\n   * @fires Hooks#afterDropdownMenuShow\n   */\n  open(position) {\n    var _this$menu;\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      above: 0,\n      below: 0,\n      left: 0,\n      right: 0\n    };\n    if ((_this$menu = this.menu) !== null && _this$menu !== void 0 && _this$menu.isOpened()) {\n      return;\n    }\n    this.menu.open();\n    objectEach(offset, (value, key) => {\n      this.menu.setOffset(key, value);\n    });\n    this.menu.setPosition(position);\n  }\n\n  /**\n   * Closes dropdown menu.\n   */\n  close() {\n    var _this$menu2;\n    (_this$menu2 = this.menu) === null || _this$menu2 === void 0 || _this$menu2.close();\n  }\n\n  /**\n   * Executes context menu command.\n   *\n   * The `executeCommand()` method works only for selected cells.\n   *\n   * When no cells are selected, `executeCommand()` doesn't do anything.\n   *\n   * You can execute all predefined commands:\n   *  * `'col_left'` - Insert column left\n   *  * `'col_right'` - Insert column right\n   *  * `'clear_column'` - Clear selected column\n   *  * `'remove_col'` - Remove column\n   *  * `'undo'` - Undo last action\n   *  * `'redo'` - Redo last action\n   *  * `'make_read_only'` - Make cell read only\n   *  * `'alignment:left'` - Alignment to the left\n   *  * `'alignment:top'` - Alignment to the top\n   *  * `'alignment:right'` - Alignment to the right\n   *  * `'alignment:bottom'` - Alignment to the bottom\n   *  * `'alignment:middle'` - Alignment to the middle\n   *  * `'alignment:center'` - Alignment to the center (justify).\n   *\n   * Or you can execute command registered in settings where `key` is your command name.\n   *\n   * @param {string} commandName Command name to execute.\n   * @param {*} params Additional parameters passed to the command executor.\n   */\n  executeCommand(commandName) {\n    for (var _len4 = arguments.length, params = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n      params[_key4 - 1] = arguments[_key4];\n    }\n    this.commandExecutor.execute(commandName, ...params);\n  }\n\n  /**\n   * Turns on / off listening on dropdown menu.\n   *\n   * @private\n   * @param {boolean} listen Turn on listening when value is set to true, otherwise turn it off.\n   */\n  setListening() {\n    let listen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (this.menu.isOpened()) {\n      if (listen) {\n        this.menu.hotMenu.listen();\n      } else {\n        this.menu.hotMenu.unlisten();\n      }\n    }\n  }\n  /**\n   * Destroys the plugin instance.\n   */\n  destroy() {\n    this.close();\n    if (this.menu) {\n      this.menu.destroy();\n    }\n    super.destroy();\n  }\n}\nfunction _addCustomShortcuts(menuInstance) {\n  menuInstance.getKeyboardShortcutsCtrl().addCustomShortcuts([{\n    keys: [['Control/Meta', 'A']],\n    callback: () => false\n  }]);\n}\n/**\n * Table click listener.\n *\n * @private\n * @param {Event} event The mouse event object.\n */\nfunction _onTableClick(event) {\n  if (hasClass(event.target, BUTTON_CLASS_NAME)) {\n    const offset = getDocumentOffsetByElement(this.menu.container, this.hot.rootDocument);\n    const rect = event.target.getBoundingClientRect();\n    event.stopPropagation();\n    _classPrivateFieldSet(_isButtonClicked, this, false);\n    this.open({\n      left: rect.left + offset.left,\n      top: rect.top + event.target.offsetHeight + 3 + offset.top\n    }, {\n      left: rect.width\n    });\n  }\n}\n/**\n * On after get column header listener.\n *\n * @private\n * @param {number} col Visual column index.\n * @param {HTMLTableCellElement} TH Header's TH element.\n */\nfunction _onAfterGetColHeader(col, TH) {\n  // Corner or a higher-level header\n  const headerRow = TH.parentNode;\n  if (!headerRow) {\n    return;\n  }\n  const headerRowList = headerRow.parentNode.childNodes;\n  const level = Array.prototype.indexOf.call(headerRowList, headerRow);\n  if (col < 0 || level !== headerRowList.length - 1) {\n    return;\n  }\n  const existingButton = TH.querySelector(`.${BUTTON_CLASS_NAME}`);\n\n  // Plugin enabled and buttons already exists, return.\n  if (this.enabled && existingButton) {\n    return;\n  }\n  // Plugin disabled and buttons still exists, so remove them.\n  if (!this.enabled) {\n    if (existingButton) {\n      existingButton.parentNode.removeChild(existingButton);\n    }\n    return;\n  }\n  const button = this.hot.rootDocument.createElement('button');\n  button.className = BUTTON_CLASS_NAME;\n  button.type = 'button';\n  button.tabIndex = -1;\n  if (this.hot.getSettings().ariaTags) {\n    setAttribute(button, [A11Y_HIDDEN(), A11Y_LABEL(' ')]);\n    setAttribute(TH, [A11Y_HASPOPUP('menu')]);\n  }\n\n  // prevent page reload on button click\n  button.onclick = function () {\n    return false;\n  };\n  TH.firstChild.insertBefore(button, TH.firstChild.firstChild);\n}\n/**\n * On menu before open listener.\n *\n * @private\n * @fires Hooks#beforeDropdownMenuShow\n */\nfunction _onMenuBeforeOpen() {\n  this.hot.runHooks('beforeDropdownMenuShow', this);\n}\n/**\n * On menu after open listener.\n *\n * @private\n * @fires Hooks#afterDropdownMenuShow\n */\nfunction _onMenuAfterOpen() {\n  this.hot.runHooks('afterDropdownMenuShow', this);\n  _assertClassBrand(_DropdownMenu_brand, this, _addCustomShortcuts).call(this, this.menu);\n}\n/**\n * Listener for the `afterSubmenuOpen` hook.\n *\n * @private\n * @param {Menu} subMenuInstance The opened sub menu instance.\n */\nfunction _onSubMenuAfterOpen(subMenuInstance) {\n  _assertClassBrand(_DropdownMenu_brand, this, _addCustomShortcuts).call(this, subMenuInstance);\n}\n/**\n * On menu after close listener.\n *\n * @private\n * @fires Hooks#afterDropdownMenuHide\n */\nfunction _onMenuAfterClose() {\n  this.hot.listen();\n  this.hot.runHooks('afterDropdownMenuHide', this);\n}\n/**\n * Hook allows blocking horizontal scroll when the menu is opened by clicking on\n * the column header button. This prevents from scrolling the viewport (jump effect) when\n * the button is clicked.\n *\n * @param {number} visualColumn Visual column index.\n * @returns {number | null}\n */\nfunction _onBeforeViewportScrollHorizontally(visualColumn) {\n  return _classPrivateFieldGet(_isButtonClicked, this) ? null : visualColumn;\n}\n/**\n * Hook sets the internal flag to `true` when the button is clicked.\n *\n * @param {MouseEvent} event The mouse event object.\n */\nfunction _onBeforeOnCellMouseDown(event) {\n  if (hasClass(event.target, BUTTON_CLASS_NAME)) {\n    _classPrivateFieldSet(_isButtonClicked, this, true);\n  }\n}\nDropdownMenu.SEPARATOR = {\n  name: SEPARATOR\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}