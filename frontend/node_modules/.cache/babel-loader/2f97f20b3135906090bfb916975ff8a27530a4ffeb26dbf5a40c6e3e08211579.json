{"ast":null,"code":"import * as C from \"../../../i18n/constants.mjs\";\nimport { checkSelectionConsistency, markLabelAsSelected } from \"../../contextMenu/utils.mjs\";\nimport { META_READONLY } from \"../comments.mjs\";\n/**\n * @param {Comments} plugin The Comments plugin instance.\n * @returns {object}\n */\nexport default function readOnlyCommentItem(plugin) {\n  return {\n    key: 'commentsReadOnly',\n    name() {\n      const label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_READ_ONLY_COMMENT);\n      const areReadOnly = checkSelectionConsistency(this.getSelectedRange(), (row, col) => {\n        return plugin.getCommentMeta(row, col, META_READONLY);\n      });\n      return areReadOnly ? markLabelAsSelected(label) : label;\n    },\n    callback() {\n      const range = this.getSelectedRangeLast();\n      range.forAll((row, column) => {\n        if (row >= 0 && column >= 0) {\n          const currentState = !!plugin.getCommentMeta(row, column, META_READONLY);\n          plugin.updateCommentMeta(row, column, {\n            [META_READONLY]: !currentState\n          });\n        }\n      });\n    },\n    disabled() {\n      const range = this.getSelectedRangeLast();\n      if (!range || range.highlight.isHeader() || !plugin.getCommentAtCell(range.highlight.row, range.highlight.col) || this.selection.isEntireRowSelected() && this.selection.isEntireColumnSelected() || this.countRenderedRows() === 0 || this.countRenderedCols() === 0) {\n        return true;\n      }\n      return false;\n    }\n  };\n}","map":{"version":3,"names":["C","checkSelectionConsistency","markLabelAsSelected","META_READONLY","readOnlyCommentItem","plugin","key","name","label","getTranslatedPhrase","CONTEXTMENU_ITEMS_READ_ONLY_COMMENT","areReadOnly","getSelectedRange","row","col","getCommentMeta","callback","range","getSelectedRangeLast","forAll","column","currentState","updateCommentMeta","disabled","highlight","isHeader","getCommentAtCell","selection","isEntireRowSelected","isEntireColumnSelected","countRenderedRows","countRenderedCols"],"sources":["D:/gym-project/frontend/node_modules/handsontable/plugins/comments/contextMenuItem/readOnlyComment.mjs"],"sourcesContent":["import * as C from \"../../../i18n/constants.mjs\";\nimport { checkSelectionConsistency, markLabelAsSelected } from \"../../contextMenu/utils.mjs\";\nimport { META_READONLY } from \"../comments.mjs\";\n/**\n * @param {Comments} plugin The Comments plugin instance.\n * @returns {object}\n */\nexport default function readOnlyCommentItem(plugin) {\n  return {\n    key: 'commentsReadOnly',\n    name() {\n      const label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_READ_ONLY_COMMENT);\n      const areReadOnly = checkSelectionConsistency(this.getSelectedRange(), (row, col) => {\n        return plugin.getCommentMeta(row, col, META_READONLY);\n      });\n      return areReadOnly ? markLabelAsSelected(label) : label;\n    },\n    callback() {\n      const range = this.getSelectedRangeLast();\n      range.forAll((row, column) => {\n        if (row >= 0 && column >= 0) {\n          const currentState = !!plugin.getCommentMeta(row, column, META_READONLY);\n          plugin.updateCommentMeta(row, column, {\n            [META_READONLY]: !currentState\n          });\n        }\n      });\n    },\n    disabled() {\n      const range = this.getSelectedRangeLast();\n      if (!range || range.highlight.isHeader() || !plugin.getCommentAtCell(range.highlight.row, range.highlight.col) || this.selection.isEntireRowSelected() && this.selection.isEntireColumnSelected() || this.countRenderedRows() === 0 || this.countRenderedCols() === 0) {\n        return true;\n      }\n      return false;\n    }\n  };\n}"],"mappings":"AAAA,OAAO,KAAKA,CAAC,MAAM,6BAA6B;AAChD,SAASC,yBAAyB,EAAEC,mBAAmB,QAAQ,6BAA6B;AAC5F,SAASC,aAAa,QAAQ,iBAAiB;AAC/C;AACA;AACA;AACA;AACA,eAAe,SAASC,mBAAmBA,CAACC,MAAM,EAAE;EAClD,OAAO;IACLC,GAAG,EAAE,kBAAkB;IACvBC,IAAIA,CAAA,EAAG;MACL,MAAMC,KAAK,GAAG,IAAI,CAACC,mBAAmB,CAACT,CAAC,CAACU,mCAAmC,CAAC;MAC7E,MAAMC,WAAW,GAAGV,yBAAyB,CAAC,IAAI,CAACW,gBAAgB,CAAC,CAAC,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;QACnF,OAAOT,MAAM,CAACU,cAAc,CAACF,GAAG,EAAEC,GAAG,EAAEX,aAAa,CAAC;MACvD,CAAC,CAAC;MACF,OAAOQ,WAAW,GAAGT,mBAAmB,CAACM,KAAK,CAAC,GAAGA,KAAK;IACzD,CAAC;IACDQ,QAAQA,CAAA,EAAG;MACT,MAAMC,KAAK,GAAG,IAAI,CAACC,oBAAoB,CAAC,CAAC;MACzCD,KAAK,CAACE,MAAM,CAAC,CAACN,GAAG,EAAEO,MAAM,KAAK;QAC5B,IAAIP,GAAG,IAAI,CAAC,IAAIO,MAAM,IAAI,CAAC,EAAE;UAC3B,MAAMC,YAAY,GAAG,CAAC,CAAChB,MAAM,CAACU,cAAc,CAACF,GAAG,EAAEO,MAAM,EAAEjB,aAAa,CAAC;UACxEE,MAAM,CAACiB,iBAAiB,CAACT,GAAG,EAAEO,MAAM,EAAE;YACpC,CAACjB,aAAa,GAAG,CAACkB;UACpB,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ,CAAC;IACDE,QAAQA,CAAA,EAAG;MACT,MAAMN,KAAK,GAAG,IAAI,CAACC,oBAAoB,CAAC,CAAC;MACzC,IAAI,CAACD,KAAK,IAAIA,KAAK,CAACO,SAAS,CAACC,QAAQ,CAAC,CAAC,IAAI,CAACpB,MAAM,CAACqB,gBAAgB,CAACT,KAAK,CAACO,SAAS,CAACX,GAAG,EAAEI,KAAK,CAACO,SAAS,CAACV,GAAG,CAAC,IAAI,IAAI,CAACa,SAAS,CAACC,mBAAmB,CAAC,CAAC,IAAI,IAAI,CAACD,SAAS,CAACE,sBAAsB,CAAC,CAAC,IAAI,IAAI,CAACC,iBAAiB,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAACC,iBAAiB,CAAC,CAAC,KAAK,CAAC,EAAE;QACrQ,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}