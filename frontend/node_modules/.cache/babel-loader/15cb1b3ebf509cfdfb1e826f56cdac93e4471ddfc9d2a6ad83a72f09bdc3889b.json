{"ast":null,"code":"import { getCompareFunctionFactory, DO_NOT_SWAP } from \"../columnSorting/sortService/index.mjs\";\n/**\n * Sort comparator handled by conventional sort algorithm.\n *\n * @param {Array} sortingOrders Sort orders (`asc` for ascending, `desc` for descending).\n * @param {Array} columnMetas Column meta objects.\n * @returns {Function}\n */\nexport function rootComparator(sortingOrders, columnMetas) {\n  return function (rowIndexWithValues, nextRowIndexWithValues) {\n    // We sort array of arrays. Single array is in form [rowIndex, ...values].\n    // We compare just values, stored at second index of array.\n    const [, ...values] = rowIndexWithValues;\n    const [, ...nextValues] = nextRowIndexWithValues;\n    return function getCompareResult(column) {\n      const sortingOrder = sortingOrders[column];\n      const columnMeta = columnMetas[column];\n      const value = values[column];\n      const nextValue = nextValues[column];\n      const pluginSettings = columnMeta.multiColumnSorting;\n      const compareFunctionFactory = pluginSettings.compareFunctionFactory ? pluginSettings.compareFunctionFactory : getCompareFunctionFactory(columnMeta.type);\n      const compareResult = compareFunctionFactory(sortingOrder, columnMeta, pluginSettings)(value, nextValue);\n      if (compareResult === DO_NOT_SWAP) {\n        const nextSortedColumn = column + 1;\n        if (typeof columnMetas[nextSortedColumn] !== 'undefined') {\n          return getCompareResult(nextSortedColumn);\n        }\n      }\n      return compareResult;\n    }(0);\n  };\n}","map":{"version":3,"names":["getCompareFunctionFactory","DO_NOT_SWAP","rootComparator","sortingOrders","columnMetas","rowIndexWithValues","nextRowIndexWithValues","values","nextValues","getCompareResult","column","sortingOrder","columnMeta","value","nextValue","pluginSettings","multiColumnSorting","compareFunctionFactory","type","compareResult","nextSortedColumn"],"sources":["D:/gym-project/frontend/node_modules/handsontable/plugins/multiColumnSorting/rootComparator.mjs"],"sourcesContent":["import { getCompareFunctionFactory, DO_NOT_SWAP } from \"../columnSorting/sortService/index.mjs\";\n/**\n * Sort comparator handled by conventional sort algorithm.\n *\n * @param {Array} sortingOrders Sort orders (`asc` for ascending, `desc` for descending).\n * @param {Array} columnMetas Column meta objects.\n * @returns {Function}\n */\nexport function rootComparator(sortingOrders, columnMetas) {\n  return function (rowIndexWithValues, nextRowIndexWithValues) {\n    // We sort array of arrays. Single array is in form [rowIndex, ...values].\n    // We compare just values, stored at second index of array.\n    const [, ...values] = rowIndexWithValues;\n    const [, ...nextValues] = nextRowIndexWithValues;\n    return function getCompareResult(column) {\n      const sortingOrder = sortingOrders[column];\n      const columnMeta = columnMetas[column];\n      const value = values[column];\n      const nextValue = nextValues[column];\n      const pluginSettings = columnMeta.multiColumnSorting;\n      const compareFunctionFactory = pluginSettings.compareFunctionFactory ? pluginSettings.compareFunctionFactory : getCompareFunctionFactory(columnMeta.type);\n      const compareResult = compareFunctionFactory(sortingOrder, columnMeta, pluginSettings)(value, nextValue);\n      if (compareResult === DO_NOT_SWAP) {\n        const nextSortedColumn = column + 1;\n        if (typeof columnMetas[nextSortedColumn] !== 'undefined') {\n          return getCompareResult(nextSortedColumn);\n        }\n      }\n      return compareResult;\n    }(0);\n  };\n}"],"mappings":"AAAA,SAASA,yBAAyB,EAAEC,WAAW,QAAQ,wCAAwC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,aAAa,EAAEC,WAAW,EAAE;EACzD,OAAO,UAAUC,kBAAkB,EAAEC,sBAAsB,EAAE;IAC3D;IACA;IACA,MAAM,GAAG,GAAGC,MAAM,CAAC,GAAGF,kBAAkB;IACxC,MAAM,GAAG,GAAGG,UAAU,CAAC,GAAGF,sBAAsB;IAChD,OAAO,SAASG,gBAAgBA,CAACC,MAAM,EAAE;MACvC,MAAMC,YAAY,GAAGR,aAAa,CAACO,MAAM,CAAC;MAC1C,MAAME,UAAU,GAAGR,WAAW,CAACM,MAAM,CAAC;MACtC,MAAMG,KAAK,GAAGN,MAAM,CAACG,MAAM,CAAC;MAC5B,MAAMI,SAAS,GAAGN,UAAU,CAACE,MAAM,CAAC;MACpC,MAAMK,cAAc,GAAGH,UAAU,CAACI,kBAAkB;MACpD,MAAMC,sBAAsB,GAAGF,cAAc,CAACE,sBAAsB,GAAGF,cAAc,CAACE,sBAAsB,GAAGjB,yBAAyB,CAACY,UAAU,CAACM,IAAI,CAAC;MACzJ,MAAMC,aAAa,GAAGF,sBAAsB,CAACN,YAAY,EAAEC,UAAU,EAAEG,cAAc,CAAC,CAACF,KAAK,EAAEC,SAAS,CAAC;MACxG,IAAIK,aAAa,KAAKlB,WAAW,EAAE;QACjC,MAAMmB,gBAAgB,GAAGV,MAAM,GAAG,CAAC;QACnC,IAAI,OAAON,WAAW,CAACgB,gBAAgB,CAAC,KAAK,WAAW,EAAE;UACxD,OAAOX,gBAAgB,CAACW,gBAAgB,CAAC;QAC3C;MACF;MACA,OAAOD,aAAa;IACtB,CAAC,CAAC,CAAC,CAAC;EACN,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}